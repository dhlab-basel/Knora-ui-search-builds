{"version":3,"sources":["null","ng://@knora/search/lib/search.component.ts","ng://@knora/search/lib/search-panel/search-panel.component.ts","ng://@knora/search/lib/fulltext-search/fulltext-search.component.ts","ng://@knora/search/lib/extended-search/extended-search.component.ts","ng://@knora/search/lib/extended-search/select-ontology/select-ontology.component.ts","ng://@knora/search/lib/extended-search/select-property/select-property.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/specify-property-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/boolean-value/boolean-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/date-value/header-calendar/header-calendar.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/date-value/date-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/decimal-value/decimal-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/integer-value/integer-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/link-value/link-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/text-value/text-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/uri-value/uri-value.component.ts","ng://@knora/search/lib/extended-search/select-resource-class/select-resource-class.component.ts","ng://@knora/search/lib/search.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","SearchComponent","_route","_router","_eleRef","this","route","searchPanelFocus","prevSearch","JSON","parse","localStorage","getItem","focusOnSimple","focusOnExtended","searchLabel","showSimpleSearch","prototype","ngOnInit","onKey","search_ele","event","searchQuery","key","keyCode","which","doSearch","resetSearch","undefined","toggleMenu","navigate","existingPrevSearch","existingPrevSearch_1","tslib_1.__values","existingPrevSearch_1_1","entry","splice","push","setItem","stringify","focus","doPrevSearch","query","relativeTo","resetPrevSearch","name","indexOf","removeItem","setFocus","Component","args","selector","template","styles","animations","trigger","state","style","display","transition","animate","ActivatedRoute","Router","ElementRef","Input","SearchPanelComponent","showMenu","FulltextSearchComponent","ExtendedSearchComponent","fb","_cacheService","_gravSearchService","toggleExtendedSearchForm","EventEmitter","ontologies","activeProperties","resourceClasses","result","ReadResourcesSequence","formValid","_this","form","group","statusChanges","subscribe","data","validateForm","initializeOntologies","addProperty","removeProperty","getOntologiesMetadata","getResourceClassesAndPropertiesForOntology","ontologyIri","activeResourceClass","activeOntology","getEntityDefinitionsForOntologies","ontoInfo","getResourceClassesAsArray","properties","getProperties","getPropertiesForResourceClass","resourceClassIri","getResourceClassDefinitions","getResourceClasses","valid","propertyComponents","resourceClassComponent","getResourceClassSelected","resetForm","submit","resClass","resClassOption","map","propComp","getPropertySelectedWithValue","gravsearch","createGravsearchQuery","emit","FormBuilder","decorators","type","Inject","OntologyCacheService","GravsearchGenerationService","Output","ViewChild","ViewChildren","SelectOntologyComponent","ontologySelected","ontology","Validators","required","valueChanges","formGroup","addControl","resolvedPromise","Promise","resolve","SelectPropertyComponent","Object","defineProperty","_properties","propertySelected","updatePropertiesArray","_activeResourceClass","property","isSortCriterion","propIri","then","propIndex","index","ngOnDestroy","removeControl","sortCriterion","isLinkProperty","cardinalities","filter","card","id","occurrence","CardinalityOccurrence","maxCard","propsArray","hasOwnProperty","prop","isEditable","isLinkValueProperty","sort","OntologyInformation","sortFunc","propertiesAsArray","propVal","specifyPropertyValue","getComparisonOperatorAndValueLiteralForProperty","PropertyWithValue","SpecifyPropertyValueComponent","KnoraConstants","comparisonOperators","_property","comparisonOperatorSelected","resetComparisonOperators","propertyValueType","Resource","objectType","TextValue","Like","Match","Equals","NotEquals","Exists","BooleanValue","UriValue","IntervalValue","IntValue","DecimalValue","DateValue","LessThan","LessThanEquals","GreaterThan","GreaterThanEquals","ListValue","GeomValue","FileValue","AudioFileValue","StillImageFileValue","DDDFileValue","MovingImageFileValue","TextFileValue","ColorValue","console","log","ngOnChanges","comparisonOperator","getClassName","propertyValueComponent","getValue","ComparisonOperatorAndValue","BooleanValueComponent","booleanValue","compose","ValueLiteral","String","xsdBoolean","HeaderComponent","_calendar","_dateAdapter","supportedCalendarFormats","JDNConvertibleCalendar","supportedCalendars","JDNConvertibleCalendarDateAdapter","activeFormat","activeCalendarFormat","calendar","convertDate","convertedDate","convertCalendarFormat","activeDate","_dateSelected","currentView","monthView","yearView","multiYearView","ngAfterContentInit","MatCalendar","Host","DateAdapter","DateValueComponent","headerComponent","dateValue","dateObj","calendarFormat","calendarName","calendarPeriod","toCalendarPeriod","dateString","toUpperCase","periodStart","year","month","day","periodEnd","DecimalValueComponent","decimalValue","xsdDecimal","IntegerValueComponent","integerValue","pattern","xsdInteger","require","LinkValueComponent","_searchService","LinkValue","_restrictToResourceClass","displayResource","resource","label","searchByLabel","searchTerm","searchByLabelReadResourceSequence","resources","err","validateResource","c","ReadResource","noResource","IRI","SearchService","TextValueComponent","textValue","xsdString","UriValueComponent","uriValue","Utils","RegexUrl","xsdUri","SelectResourceClassComponent","resourceClassSelectedEvent","_resourceClasses","resourceClassSelected","initForm","resourceClass","KuiSearchModule","NgModule","imports","CommonModule","BrowserAnimationsModule","MatAutocompleteModule","MatButtonModule","MatCheckboxModule","MatDatepickerModule","MatFormFieldModule","MatInputModule","MatIconModule","MatListModule","MatSelectModule","MatTooltipModule","FormsModule","ReactiveFormsModule","KuiCoreModule","KuiActionModule","KuiViewerModule","MatJDNConvertibleCalendarDateAdapterModule","declarations","exports","entryComponents"],"mappings":"++BAcA,SAAAA,EA4FyBC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWC,EAAI,EAChE,OAAIH,EAAUA,EAAEI,KAAKL,GACd,CACHM,KAAM,WAEF,OADIN,GAAKI,GAAKJ,EAAEO,SAAQP,OAAI,GACrB,CAAEQ,MAAOR,GAAKA,EAAEI,KAAMK,MAAOT,sBCC5C,SAAAU,EAAoBC,EACRC,EACAC,GAFQC,KAAAH,OAAAA,EACRG,KAAAF,QAAAA,EACAE,KAAAD,QAAAA,EAjBHC,KAAAC,MAAgB,UAIzBD,KAAAE,kBAA4B,EAE5BF,KAAAG,WAAuBC,KAAKC,MAAMC,aAAaC,QAAQ,eAEvDP,KAAAQ,cAAwB,WACxBR,KAAAS,gBAA0B,WAE1BT,KAAAU,YAAsB,SAEtBV,KAAAW,kBAA4B,EA+IhC,OAvIIf,EAAAgB,UAAAC,SAAA,aAUAjB,EAAAgB,UAAAE,MAAA,SAAMC,EAAyBC,GAC3BhB,KAAKQ,cAAgB,SACrBR,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,gBAC9CP,KAAKiB,aAA8B,UAAdD,EAAME,KAAqC,KAAlBF,EAAMG,SAAkC,KAAhBH,EAAMI,OAC5EpB,KAAKqB,SAASN,GAEA,WAAdC,EAAME,KAAsC,KAAlBF,EAAMG,SAAkC,KAAhBH,EAAMI,OACxDpB,KAAKsB,YAAYP,IASzBnB,EAAAgB,UAAAS,SAAA,SAASN,WACL,GAAIf,KAAKiB,cAAgBM,WAAkC,OAArBvB,KAAKiB,YAAsB,CAC7DjB,KAAKwB,WAAW,gBAChBxB,KAAKF,QAAQ2B,SAAS,CAACzB,KAAKC,MAAQ,aAAeD,KAAKiB,cAMxD,IAAIS,EAA+BtB,KAAKC,MAAMC,aAAaC,QAAQ,eACxC,OAAvBmB,IAA+BA,EAAqB,IACxD,IAAIpC,EAAY,MAChB,IAAoB,IAAAqC,EAAAC,EAAAF,GAAkBG,EAAAF,EAAAnC,QAAAqC,EAAAlC,KAAAkC,EAAAF,EAAAnC,OAAE,CAAnC,IAAMsC,EAAKD,EAAAnC,MAERM,KAAKiB,cAAgBa,GAASJ,EAAmBK,OAAOzC,EAAG,GAC/DA,yGAGJoC,EAAmBM,KAAKhC,KAAKiB,aAC7BX,aAAa2B,QAAQ,aAAc7B,KAAK8B,UAAUR,SAIlDX,EAAWoB,QACXnC,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,gBAW1DX,EAAAgB,UAAAU,YAAA,SAAYP,GACRf,KAAKiB,YAAc,KACnBF,EAAWoB,QACXnC,KAAKQ,cAAgB,WACrBR,KAAKE,kBAAoBF,KAAKE,kBAUlCN,EAAAgB,UAAAwB,aAAA,SAAaC,GACTrC,KAAKiB,YAAcoB,EACnBrC,KAAKF,QAAQ2B,SAAS,CAACzB,KAAKC,MAAQ,aAAeoC,GAAQ,CAAEC,WAAYtC,KAAKH,SAC9EG,KAAKwB,WAAW,iBAUpB5B,EAAAgB,UAAA2B,gBAAA,SAAgBC,GACZ,QADY,IAAAA,IAAAA,EAAA,MACRA,EAAM,CAEN,IAAMlD,EAAYU,KAAKG,WAAWsC,QAAQD,GAC1CxC,KAAKG,WAAW4B,OAAOzC,EAAG,GAC1BgB,aAAa2B,QAAQ,aAAc7B,KAAK8B,UAAUlC,KAAKG,kBAGvDG,aAAaoC,WAAW,cAE5B1C,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,gBAUtDX,EAAAgB,UAAA+B,SAAA,WACI3C,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,eAClDP,KAAKQ,cAAgB,SACrBR,KAAKE,kBAAoBF,KAAKE,kBAWlCN,EAAAgB,UAAAY,WAAA,SAAWgB,GACP,OAAQA,GACJ,IAAK,eACDxC,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,eAClDP,KAAKQ,cAAwC,WAAvBR,KAAKQ,cAA6B,WAAa,SACrER,KAAKW,kBAAmB,EACxB,MACJ,IAAK,iBACDX,KAAKS,gBAA4C,WAAzBT,KAAKS,gBAA+B,WAAa,SACzET,KAAKW,kBAAmB,wBAhPvCiC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,aACVC,SAAU,u8FA4DVC,OAAQ,CAAC,szFACTC,WAAY,CACRC,EAAAA,QAAQ,mBACJ,CACIC,EAAAA,MAAM,WAAYC,EAAAA,MAAM,CAAEC,QAAS,UACnCF,EAAAA,MAAM,SAAUC,EAAAA,MAAM,CAAEC,QAAS,WACjCC,EAAAA,WAAW,mBAAoBC,EAAAA,QAAQ,kBACvCD,EAAAA,WAAW,mBAAoBC,EAAAA,QAAQ,qBAG/CL,EAAAA,QAAQ,qBACJ,CACIC,EAAAA,MAAM,WAAYC,EAAAA,MAAM,CAAEC,QAAS,UACnCF,EAAAA,MAAM,SAAUC,EAAAA,MAAM,CAAEC,QAAS,WACjCC,EAAAA,WAAW,mBAAoBC,EAAAA,QAAQ,kBACvCD,EAAAA,WAAW,mBAAoBC,EAAAA,QAAQ,mEAtF9CC,EAAAA,sBAAgBC,EAAAA,cADLC,EAAAA,6CAkGfC,EAAAA,SA4JL/D,kBCxME,SAAAgE,IAJS5D,KAAAC,MAAgB,UACzBD,KAAA6D,UAAoB,EACpB7D,KAAAS,gBAA0B,WAa5B,OAJEmD,EAAAhD,UAAAY,WAAA,WACExB,KAAK6D,UAAY7D,KAAK6D,SACtB7D,KAAKS,gBAA4C,WAAzBT,KAAKS,gBAA+B,WAAa,8BA5D5EmC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,6iCA+BVC,OAAQ,CAAC,qwCACTC,WAAY,CACVC,EAAAA,QAAQ,qBACN,CACEC,EAAAA,MAAM,WAAYC,EAAAA,MAAM,CAAEC,QAAS,UACnCF,EAAAA,MAAM,SAAUC,EAAAA,MAAM,CAAEC,QAAS,WACjCC,EAAAA,WAAW,qBAAsBC,EAAAA,QAAQ,kBACzCD,EAAAA,WAAW,qBAAsBC,EAAAA,QAAQ,+FAO9CI,EAAAA,SAeHC,kBCMI,SAAAE,EAAoBjE,EACRC,GADQE,KAAAH,OAAAA,EACRG,KAAAF,QAAAA,EAhBHE,KAAAC,MAAgB,UAIzBD,KAAAW,kBAA4B,EAE5BX,KAAAE,kBAA4B,EAE5BF,KAAAG,WAAuBC,KAAKC,MAAMC,aAAaC,QAAQ,eAEvDP,KAAAQ,cAAwB,WAExBR,KAAAU,YAAsB,SA4H1B,OArHIoD,EAAAlD,UAAAC,SAAA,aAWAiD,EAAAlD,UAAAE,MAAA,SAAMC,EAAyBC,GAC3BhB,KAAKQ,cAAgB,SACrBR,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,gBAC9CP,KAAKiB,aAA8B,UAAdD,EAAME,KAAqC,KAAlBF,EAAMG,SAAkC,KAAhBH,EAAMI,OAC5EpB,KAAKqB,SAASN,GAEA,WAAdC,EAAME,KAAsC,KAAlBF,EAAMG,SAAkC,KAAhBH,EAAMI,OACxDpB,KAAKsB,YAAYP,IAUzB+C,EAAAlD,UAAAS,SAAA,SAASN,WACL,GAAIf,KAAKiB,cAAgBM,WAAkC,OAArBvB,KAAKiB,YAAsB,CAC7DjB,KAAKwB,aACLxB,KAAKF,QAAQ2B,SAAS,CAACzB,KAAKC,MAAQ,aAAeD,KAAKiB,cAMxD,IAAIS,EAA+BtB,KAAKC,MAAMC,aAAaC,QAAQ,eACxC,OAAvBmB,IAA+BA,EAAqB,IACxD,IAAIpC,EAAY,MAChB,IAAoB,IAAAqC,EAAAC,EAAAF,GAAkBG,EAAAF,EAAAnC,QAAAqC,EAAAlC,KAAAkC,EAAAF,EAAAnC,OAAE,CAAnC,IAAMsC,EAAKD,EAAAnC,MAERM,KAAKiB,cAAgBa,GAASJ,EAAmBK,OAAOzC,EAAG,GAC/DA,yGAEJoC,EAAmBM,KAAKhC,KAAKiB,aAC7BX,aAAa2B,QAAQ,aAAc7B,KAAK8B,UAAUR,SAElDX,EAAWoB,QACXnC,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,gBAS1DuD,EAAAlD,UAAAU,YAAA,SAAYP,GACRf,KAAKiB,YAAc,KACnBF,EAAWoB,QACXnC,KAAKQ,cAAgB,WACrBR,KAAKE,kBAAoBF,KAAKE,kBASlC4D,EAAAlD,UAAAY,WAAA,WACIxB,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,eAClDP,KAAKQ,cAAwC,WAAvBR,KAAKQ,cAA6B,WAAa,SACrER,KAAKW,kBAAmB,GAQ5BmD,EAAAlD,UAAA+B,SAAA,WACI3C,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,eAClDP,KAAKQ,cAAgB,SACrBR,KAAKE,kBAAoBF,KAAKE,kBAQlC4D,EAAAlD,UAAAwB,aAAA,SAAaC,GACTrC,KAAKiB,YAAcoB,EACnBrC,KAAKF,QAAQ2B,SAAS,CAACzB,KAAKC,MAAQ,aAAeoC,GAAQ,CAAEC,WAAYtC,KAAKH,SAC9EG,KAAKwB,cAQTsC,EAAAlD,UAAA2B,gBAAA,SAAgBC,GACZ,QADY,IAAAA,IAAAA,EAAA,MACRA,EAAM,CAEN,IAAMlD,EAAYU,KAAKG,WAAWsC,QAAQD,GAC1CxC,KAAKG,WAAW4B,OAAOzC,EAAG,GAC1BgB,aAAa2B,QAAQ,aAAc7B,KAAK8B,UAAUlC,KAAKG,kBAGvDG,aAAaoC,WAAW,cAE5B1C,KAAKG,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,oCAzLzDqC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,sBACVC,SAAU,ouDAoCVC,OAAQ,CAAC,o0EACTC,WAAY,CACRC,EAAAA,QAAQ,qBACJ,CACIC,EAAAA,MAAM,WAAYC,EAAAA,MAAM,CAAEC,QAAS,UACnCF,EAAAA,MAAM,SAAUC,EAAAA,MAAM,CAAEC,QAAS,WACjCC,EAAAA,WAAW,qBAAsBC,EAAAA,QAAQ,kBACzCD,EAAAA,WAAW,qBAAsBC,EAAAA,QAAQ,mEA/ChDC,EAAAA,sBAAgBC,EAAAA,yCAsDpBE,EAAAA,SAwILG,kBChFI,SAAAC,EAAyCC,EAC7BnE,EACAC,EACAmE,EACAC,GAJ6BlE,KAAAgE,GAAAA,EAC7BhE,KAAAH,OAAAA,EACAG,KAAAF,QAAAA,EACAE,KAAAiE,cAAAA,EACAjE,KAAAkE,mBAAAA,EAtCFlE,KAAAmE,yBAA2B,IAAIC,EAAAA,aAGzCpE,KAAAqE,WAAsC,GAMtCrE,KAAAsE,iBAA8B,GAG9BtE,KAAAuE,gBAAwC,GAQxCvE,KAAAwE,OAAgC,IAAIC,EAAAA,sBAAsB,GAAI,GAY9DzE,KAAA0E,WAAY,EAgKhB,OAvJIX,EAAAnD,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAGIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,IAG1B7E,KAAK4E,KAAKE,cAAcC,UAAU,SAACC,GAC/BL,EAAKD,UAAYC,EAAKM,iBAK1BjF,KAAKkF,wBAOTnB,EAAAnD,UAAAuE,YAAA,WACInF,KAAKsE,iBAAiBtC,MAAK,IAO/B+B,EAAAnD,UAAAwE,eAAA,WACIpF,KAAKsE,iBAAiBvC,QAAQ,EAAG,IAOrCgC,EAAAnD,UAAAsE,qBAAA,WAAA,IAAAP,EAAA3E,KACIA,KAAKiE,cAAcoB,wBAAwBN,UACvC,SAACV,GACGM,EAAKN,WAAaA,KAW9BN,EAAAnD,UAAA0E,2CAAA,SAA2CC,GAA3C,IAAAZ,EAAA3E,KAGIA,KAAKwF,oBAAsBjE,UAG3BvB,KAAKsE,iBAAmB,GAExBtE,KAAKyF,eAAiBF,EAEtBvF,KAAKiE,cAAcyB,kCAAkC,CAACH,IAAcR,UAChE,SAACY,GAEGhB,EAAKJ,gBAAkBoB,EAASC,2BAA0B,GAC1DjB,EAAKkB,WAAaF,EAASG,mBAcvC/B,EAAAnD,UAAAmF,8BAAA,SAA8BC,GAA9B,IAAArB,EAAA3E,KAGIA,KAAKsE,iBAAmB,GAGC,OAArB0B,EACAhG,KAAKsF,2CAA2CtF,KAAKyF,gBAGrDzF,KAAKiE,cAAcgC,4BAA4B,CAACD,IAAmBjB,UAC/D,SAACY,GACGhB,EAAKkB,WAAaF,EAASG,gBAE3BnB,EAAKa,oBAAsBG,EAASO,qBAAqBF,MAYjEjC,EAAAnD,UAAAqE,aAAR,WAGI,OAAOjF,KAAK4E,KAAKuB,QACqB,EAAjCnG,KAAKoG,mBAAmB3G,QAAeO,KAAKqG,yBAA2B9E,YAAwE,IAA3DvB,KAAKqG,uBAAuBC,6BAOzHvC,EAAAnD,UAAA2F,UAAA,WACQvG,KAAKyF,iBAAmBlE,WACxBvB,KAAKsF,2CAA2CtF,KAAKyF,iBAQ7D1B,EAAAnD,UAAA4F,OAAA,WAEI,GAAKxG,KAAK0E,UAAV,CAEA,IAEI+B,EAFEC,EAAiB1G,KAAKqG,uBAAuBC,4BAI5B,IAAnBI,IACAD,EAAWC,GAGf,IAAMb,EAAkC7F,KAAKoG,mBAAmBO,IAC5D,SAACC,GACG,OAAOA,EAASC,iCAIlBC,EAAa9G,KAAKkE,mBAAmB6C,sBAAsBlB,EAAYY,EAAU,GAEvFzG,KAAKF,QAAQ2B,SAAS,CAACzB,KAAKC,MAAQ,aAAc6G,GAAa,CAAExE,WAAYtC,KAAKH,SAGlFG,KAAKmE,yBAAyB6C,MAAK,yBAzP1CpE,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,sBACVC,SAAU,gmEAiDVC,OAAQ,CAAC,8QAlEJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KA8GHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,sBA/GfzD,EAAAA,sBAAgBC,EAAAA,cAIrB4D,EAAAA,4BADAC,EAAAA,8DAuEC3D,EAAAA,wCAGA4D,EAAAA,uCAuBAC,EAAAA,UAAS3E,KAAA,CAAC,6CAGV4E,EAAAA,aAAY5E,KAAA,CAAC,eAsKlBkB,kBCtPE,SAAA2D,EAAyC1D,GAAAhE,KAAAgE,GAAAA,EAJ/BhE,KAAA2H,iBAAmB,IAAIvD,EAAAA,aAuBnC,OAjBEsD,EAAA9G,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAGEA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACxB+C,SAAU,CAAC,KAAMC,EAAAA,WAAWC,YAI9B9H,KAAK4E,KAAKmD,aAAahD,UAAU,SAACC,GAChCL,EAAKgD,iBAAiBX,KAAKhC,EAAK4C,YAIlC5H,KAAKgI,UAAUC,WAAW,WAAYjI,KAAK4E,2BAnC9ChC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,sBACVC,SAAU,6QAMVC,OAAQ,CAAC,iDAVFiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAsBLC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDARnBtD,EAAAA,0BAEAA,EAAAA,gCAEA4D,EAAAA,UAuBHG,KC3BMQ,EAAkBC,QAAQC,QAAQ,MAExCC,EAAA,WA0DI,SAAAA,EAAyCrE,GAAAhE,KAAAgE,GAAAA,EA4G7C,OAhJIsE,OAAAC,eACIF,EAAAzH,UAAA,aAAU,KAMd,WACG,OAAOZ,KAAKwI,iBARf,SACe9I,GACXM,KAAKyI,iBAAmBlH,UACxBvB,KAAKwI,YAAc9I,EACnBM,KAAK0I,yDAUTJ,OAAAC,eACIF,EAAAzH,UAAA,sBAAmB,KADvB,SACwBlB,GACpBM,KAAK2I,qBAAuBjJ,mCAwBhC2I,EAAAzH,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAGIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtB+D,SAAU,CAAC,KAAMf,EAAAA,WAAWC,UAC5Be,gBAAiB,EAAC,EAAOhB,EAAAA,WAAWC,YAIxC9H,KAAK4E,KAAKmD,aAAahD,UAAU,SAACC,GAC9B,IAAM8D,EAAU9D,EAAK4D,SACrBjE,EAAK8D,iBAAmB9D,EAAK6D,YAAYM,KAG7CZ,EAAgBa,KAAK,WACjBpE,EAAKqE,UAAY,WAAarE,EAAKsE,MAGnCtE,EAAKqD,UAAUC,WAAWtD,EAAKqE,UAAWrE,EAAKC,SAKvDyD,EAAAzH,UAAAsI,YAAA,WAAA,IAAAvE,EAAA3E,KAGIkI,EAAgBa,KAAK,WACjBpE,EAAKqD,UAAUmB,cAAcxE,EAAKqE,cAW1CX,EAAAzH,UAAAwI,cAAA,WAAA,IAAAzE,EAAA3E,KAGI,OAAIA,KAAK2I,uBAAyBpH,WAAavB,KAAKyI,mBAAqBlH,YAAcvB,KAAKyI,iBAAiBY,gBAYzE,IAVKrJ,KAAK2I,qBAAqBW,cAAcC,OACzE,SAACC,GAEG,OAAOA,EAAKZ,WAAajE,EAAK8D,iBAAiBgB,IACzB,IAAfD,EAAK9J,QACJ8J,EAAKE,aAAeC,EAAAA,sBAAsBH,MAAQA,EAAKE,aAAeC,EAAAA,sBAAsBC,WAKvFnK,QAUrB4I,EAAAzH,UAAA8H,sBAAR,WAGI,IAAMmB,EAAa,GAEnB,IAAK,IAAMf,KAAW9I,KAAKwI,YACvB,GAAIxI,KAAKwI,YAAYsB,eAAehB,GAAU,CAC1C,IAAMiB,EAAO/J,KAAKwI,YAAYM,GAG1BiB,EAAKC,aAAeD,EAAKE,qBACzBJ,EAAW7H,KAAKhC,KAAKwI,YAAYM,IAM7Ce,EAAWK,KAAKC,EAAAA,oBAAoBC,UAEpCpK,KAAKqK,kBAAoBR,GAM7BxB,EAAAzH,UAAAiG,6BAAA,WAEI,IAAMyD,EAAsCtK,KAAKuK,qBAAqBC,kDAElE3B,GAAkB,EAOtB,OAJK7I,KAAKyI,iBAAiBY,iBACvBR,EAAkB7I,KAAK4E,KAAKlF,MAAMmJ,iBAG/B,IAAI4B,EAAAA,kBAAkBzK,KAAKyI,iBAAkB6B,EAASzB,wBAjKpEjG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,sBACVC,SAAU,6oBASVC,OAAQ,CAAC,yFAnBJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAkEHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDA1CnBtD,EAAAA,qBAGAA,EAAAA,0BAGAA,EAAAA,mCAcAA,EAAAA,oCAMA6D,EAAAA,UAAS3E,KAAA,CAAC,2BA4HfwF,EAtKA,GCIMH,EAAkBC,QAAQC,QAAQ,MAExCsC,EAAA,WA8DI,SAAAA,EAAyC1G,GAAAhE,KAAAgE,GAAAA,EAjCzChE,KAAA2K,eAAiBA,EAAAA,eAyBjB3K,KAAA4K,oBAAiD,GAyGrD,OA1HItC,OAAAC,eACImC,EAAA9J,UAAA,WAAQ,KAOZ,WACI,OAAOZ,KAAK6K,eAThB,SACad,GACT/J,KAAK8K,2BAA6BvJ,UAClCvB,KAAK6K,UAAYd,EACjB/J,KAAK+K,4DA2BTL,EAAA9J,UAAAmK,yBAAA,WASI,OANI/K,KAAK6K,UAAUxB,eACfrJ,KAAKgL,kBAAoBL,EAAAA,eAAeM,SAExCjL,KAAKgL,kBAAoBhL,KAAK6K,UAAUK,WAGpClL,KAAKgL,mBAET,KAAKL,EAAAA,eAAeQ,UAChBnL,KAAK4K,oBAAsB,CAAC,IAAIQ,EAAAA,KAAQ,IAAIC,EAAAA,MAAS,IAAIC,EAAAA,OAAU,IAAIC,EAAAA,UAAa,IAAIC,EAAAA,QACxF,MAEJ,KAAKb,EAAAA,eAAec,aACpB,KAAKd,EAAAA,eAAeM,SACpB,KAAKN,EAAAA,eAAee,SACpB,KAAKf,EAAAA,eAAegB,cAChB3L,KAAK4K,oBAAsB,CAAC,IAAIU,EAAAA,OAAU,IAAIC,EAAAA,UAAa,IAAIC,EAAAA,QAC/D,MAEJ,KAAKb,EAAAA,eAAeiB,SACpB,KAAKjB,EAAAA,eAAekB,aACpB,KAAKlB,EAAAA,eAAemB,UAChB9L,KAAK4K,oBAAsB,CAAC,IAAIU,EAAAA,OAAU,IAAIC,EAAAA,UAAa,IAAIQ,EAAAA,SAAY,IAAIC,EAAAA,eAAkB,IAAIC,EAAAA,YAAe,IAAIC,EAAAA,kBAAqB,IAAIV,EAAAA,QACjJ,MAEJ,KAAKb,EAAAA,eAAewB,UACpB,KAAKxB,EAAAA,eAAeyB,UACpB,KAAKzB,EAAAA,eAAe0B,UACpB,KAAK1B,EAAAA,eAAe2B,eACpB,KAAK3B,EAAAA,eAAe4B,oBACpB,KAAK5B,EAAAA,eAAe6B,aACpB,KAAK7B,EAAAA,eAAe8B,qBACpB,KAAK9B,EAAAA,eAAe+B,cACpB,KAAK/B,EAAAA,eAAegC,WAChB3M,KAAK4K,oBAAsB,CAAC,IAAIY,EAAAA,QAChC,MAEJ,QACIoB,QAAQC,IAAI,iCAAmC7M,KAAK6K,UAAUK,cAM1ER,EAAA9J,UAAAC,SAAA,aAEA6J,EAAA9J,UAAAkM,YAAA,WAAA,IAAAnI,EAAA3E,KAGIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtBkI,mBAAoB,CAAC,KAAMlF,EAAAA,WAAWC,YAI1C9H,KAAK4E,KAAKmD,aAAahD,UAAU,SAACC,GAC9BL,EAAKmG,2BAA6B9F,EAAK+H,qBAG3C7E,EAAgBa,KAAK,WAGjBpE,EAAKqD,UAAUmB,cAAc,sBAG7BxE,EAAKqD,UAAUC,WAAW,qBAAsBtD,EAAKC,SAU7D8F,EAAA9J,UAAA4J,gDAAA,WAEI,IAAI9K,EAQJ,MALuD,WAAnDM,KAAK8K,2BAA2BkC,iBAChCtN,EAAQM,KAAKiN,uBAAuBC,YAIjC,IAAIC,EAAAA,2BAA2BnN,KAAK8K,2BAA4BpL,wBA3J9EkD,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,6BACVC,SAAU,2pDAuBVC,OAAQ,CAAC,yFAhDJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAqFHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDA9BnBtD,EAAAA,sCAEA6D,EAAAA,UAAS3E,KAAA,CAAC,mCAGVc,EAAAA,SA0HL+G,EA/JA,GCnBMxC,EAAkBC,QAAQC,QAAQ,MAGxCgF,EAAA,WAeI,SAAAA,EAAyCpJ,GAAAhE,KAAAgE,GAAAA,EAJzChE,KAAAmH,KAAOwD,EAAAA,eAAec,aAiC1B,OAzBI2B,EAAAxM,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAEIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtBwI,aAAc,EAAC,EAAOxF,EAAAA,WAAWyF,QAAQ,CAACzF,EAAAA,WAAWC,cAGzDI,EAAgBa,KAAK,WAEjBpE,EAAKqD,UAAUC,WAAW,YAAatD,EAAKC,SAKpDwI,EAAAxM,UAAAsI,YAAA,WAAA,IAAAvE,EAAA3E,KAGIkI,EAAgBa,KAAK,WACjBpE,EAAKqD,UAAUmB,cAAc,gBAKrCiE,EAAAxM,UAAAsM,SAAA,WACI,OAAO,IAAIK,EAAAA,aAAaC,OAAOxN,KAAK4E,KAAKlF,MAAM2N,cAAe1C,EAAAA,eAAe8C,iCA1CpF7K,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVC,SAAU,kFAEVC,OAAQ,CAAC,iDAXJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAsBHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDANnBtD,EAAAA,SAmCLyJ,EA5CA,GCAAM,EAAA,WAWI,SAAAA,EAA4BC,EAChBC,EACqB5J,GAFLhE,KAAA2N,UAAAA,EAChB3N,KAAA4N,aAAAA,EACqB5N,KAAAgE,GAAAA,EAMjChE,KAAA6N,yBAA2BC,EAAAA,uBAAuBC,mBAsDtD,OAjDIL,EAAA9M,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAGQA,KAAK4N,wBAAwBI,EAAAA,kCAC7BhO,KAAKiO,aAAejO,KAAK4N,aAAaM,qBAEtCtB,QAAQC,IAAI,mFAIhB7M,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtBsJ,SAAU,CAACnO,KAAKiO,aAAcpG,EAAAA,WAAWC,YAI7C9H,KAAK4E,KAAKmD,aAAahD,UAAU,SAACC,GAE9BL,EAAKyJ,YAAYpJ,EAAKmJ,aAU9BT,EAAA9M,UAAAwN,YAAA,SAAYD,GAER,GAAInO,KAAK4N,wBAAwBI,EAAAA,kCAAmC,CAGhE,IAAMK,EAAgBrO,KAAK4N,aAAaU,sBAAsBtO,KAAK2N,UAAUY,WAAYJ,GAGzFnO,KAAK2N,UAAUY,WAAaF,EAG5BrO,KAAK2N,UAAUa,cAAcH,IAGe,UAA/BrO,KAAK2N,UAAUc,YAA0BzO,KAAK2N,UAAUe,UACjC,SAA/B1O,KAAK2N,UAAUc,YAAyBzO,KAAK2N,UAAUgB,SAAW3O,KAAK2N,UAAUiB,eAEjFC,0BAELjC,QAAQC,IAAI,wGAtEvBjK,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,sBACVC,SAAU,oRAMVC,OAAQ,gDAZ2B8L,EAAAA,YAAW5H,WAAA,CAAA,CAAAC,KAejC4H,EAAAA,cAfRC,EAAAA,mBAHA/H,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAoBXC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,kBA4DhByG,EAzEA,GCAMxF,EAAkBC,QAAQC,QAAQ,MAExC6G,EAAA,WAuBI,SAAAA,EAAyCjL,GAAAhE,KAAAgE,GAAAA,EAPzChE,KAAAmH,KAAOwD,EAAAA,eAAemB,UAKtB9L,KAAAkP,gBAAkBxB,EA6CtB,OAxCIuB,EAAArO,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAGIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtBsK,UAAW,CAAC,KAAMtH,EAAAA,WAAWyF,QAAQ,CAACzF,EAAAA,WAAWC,cAGrD9H,KAAK4E,KAAKmD,aAAahD,UAAU,SAACC,MAIlCkD,EAAgBa,KAAK,WAEjBpE,EAAKqD,UAAUC,WAAW,YAAatD,EAAKC,SAKpDqK,EAAArO,UAAAsI,YAAA,WAAA,IAAAvE,EAAA3E,KAGIkI,EAAgBa,KAAK,WACjBpE,EAAKqD,UAAUmB,cAAc,gBAKrC8F,EAAArO,UAAAsM,SAAA,WAEI,IAAMkC,EAAkCpP,KAAK4E,KAAKlF,MAAMyP,UAGlDE,EAAiBD,EAAQE,aAEzBC,EAAiBH,EAAQI,mBAEzBC,EAAgBJ,EAAeK,cAAa,IAAIH,EAAeI,YAAYC,KAAI,IAAIL,EAAeI,YAAYE,MAAK,IAAIN,EAAeI,YAAYG,IAAG,IAAIP,EAAeQ,UAAUH,KAAI,IAAIL,EAAeQ,UAAUF,MAAK,IAAIN,EAAeQ,UAAUD,IAE3P,OAAO,IAAIvC,EAAAA,aAAaC,OAAOiC,GAAa9E,EAAAA,eAAemB,gCAhElElJ,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,aACVC,SAAU,gYAOVC,OAAQ,CAAC,iDAlBJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAgCHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDATnBtD,EAAAA,SAoDLsL,EAlEA,GCLM/G,EAAkBC,QAAQC,QAAQ,MAExC4H,EAAA,WAiBI,SAAAA,EAAyChM,GAAAhE,KAAAgE,GAAAA,EAJzChE,KAAAmH,KAAOwD,EAAAA,eAAekB,aAiC1B,OA1BImE,EAAApP,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAEIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtBoL,aAAc,CAAC,KAAMpI,EAAAA,WAAWyF,QAAQ,CAACzF,EAAAA,WAAWC,cAGxDI,EAAgBa,KAAK,WAEjBpE,EAAKqD,UAAUC,WAAW,YAAatD,EAAKC,SAKpDoL,EAAApP,UAAAsI,YAAA,WAAA,IAAAvE,EAAA3E,KAGIkI,EAAgBa,KAAK,WACjBpE,EAAKqD,UAAUmB,cAAc,gBAKrC6G,EAAApP,UAAAsM,SAAA,WAEI,OAAO,IAAIK,EAAAA,aAAaC,OAAOxN,KAAK4E,KAAKlF,MAAMuQ,cAAetF,EAAAA,eAAeuF,iCA5CpFtN,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVC,SAAU,iKAIVC,OAAQ,CAAC,iDAZJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAuBHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDANnBtD,EAAAA,SAmCLqM,EA9CA,GCFM9H,EAAkBC,QAAQC,QAAQ,MAExC+H,EAAA,WAiBI,SAAAA,EAAyCnM,GAAAhE,KAAAgE,GAAAA,EAJzChE,KAAAmH,KAAOwD,EAAAA,eAAeiB,SAmC1B,OA3BIuE,EAAAvP,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAEIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtBuL,aAAc,CAAC,KAAMvI,EAAAA,WAAWyF,QAAQ,CAACzF,EAAAA,WAAWC,SAAUD,EAAAA,WAAWwI,QAAQ,gBAGrFnI,EAAgBa,KAAK,WAEjBpE,EAAKqD,UAAUC,WAAW,YAAatD,EAAKC,SAKpDuL,EAAAvP,UAAAsI,YAAA,WAAA,IAAAvE,EAAA3E,KAGIkI,EAAgBa,KAAK,WACjBpE,EAAKqD,UAAUmB,cAAc,gBAKrCgH,EAAAvP,UAAAsM,SAAA,WAEI,OAAO,IAAIK,EAAAA,aAAaC,OAAOxN,KAAK4E,KAAKlF,MAAM0Q,cAAezF,EAAAA,eAAe2F,iCA7CpF1N,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVC,SAAU,iKAIVC,OAAQ,CAAC,iDAZJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAuBHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDANnBtD,EAAAA,SAqCLwM,EAhDA,GCYMjI,GAHSqI,QAAQ,UAGCpI,QAAQC,QAAQ,OAExCoI,EAAA,WAmCI,SAAAA,EAAyCxM,EAAyByM,EAAuCxM,GAAhEjE,KAAAgE,GAAAA,EAAyBhE,KAAAyQ,eAAAA,EAAuCzQ,KAAAiE,cAAAA,EAjBzGjE,KAAAmH,KAAOwD,EAAAA,eAAe+F,UAmH1B,OA3GIpI,OAAAC,eACIiI,EAAA5P,UAAA,wBAAqB,KAIzB,WACI,OAAOZ,KAAK2Q,8BANhB,SAC0BjR,GACtBM,KAAK2Q,yBAA2BjR,mCAiBpC8Q,EAAA5P,UAAAgQ,gBAAA,SAAgBC,GAGZ,GAAiB,OAAbA,EACA,OAAOA,EAASC,OASxBN,EAAA5P,UAAAmQ,cAAA,SAAcC,GAAd,IAAArM,EAAA3E,KAG6B,GAArBgR,EAAWvR,OAEXO,KAAKyQ,eAAeQ,kCAAkCD,EAAYhR,KAAK2Q,0BAA0B5L,UAC7F,SAACP,GACGG,EAAKuM,UAAY1M,EAAO0M,WACzB,SAAUC,GACTvE,QAAQC,IAAI,yDAA2DsE,KAK/EnR,KAAKkR,UAAY3P,WAazBiP,EAAA5P,UAAAwQ,iBAAA,SAAiBC,GAIb,OAFyBA,EAAE3R,iBAAiB4R,EAAAA,aAGjC,KAEA,CACHC,WAAY,CACR7R,MAAO2R,EAAE3R,SAOzB8Q,EAAA5P,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KACIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtBgM,SAAU,CAAC,KAAMhJ,EAAAA,WAAWyF,QAAQ,CAChCzF,EAAAA,WAAWC,SACX9H,KAAKoR,sBAIbpR,KAAK4E,KAAKmD,aAAahD,UAAU,SAACC,GAC9BL,EAAKoM,cAAc/L,EAAK6L,YAG5B3I,EAAgBa,KAAK,WAEjBpE,EAAKqD,UAAUC,WAAW,YAAatD,EAAKC,SAIpD4L,EAAA5P,UAAAsI,YAAA,WAAA,IAAAvE,EAAA3E,KAGIkI,EAAgBa,KAAK,WACjBpE,EAAKqD,UAAUmB,cAAc,gBAKrCqH,EAAA5P,UAAAsM,SAAA,WAEI,OAAO,IAAIsE,EAAAA,IAAIxR,KAAK4E,KAAKlF,MAAMmR,SAASpH,yBAlI/C7G,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,aACVC,SAAU,8YASVC,OAAQ,CAAC,iDA/BJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAuDHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,sBA7CpBwK,EAAAA,qBAJApK,EAAAA,2DA8BC1D,EAAAA,qCAUAA,EAAAA,SA2GL6M,EArIA,GCfMtI,EAAkBC,QAAQC,QAAQ,MAExCsJ,EAAA,WAiBI,SAAAA,EAAyC1N,GAAAhE,KAAAgE,GAAAA,EAJzChE,KAAAmH,KAAOwD,EAAAA,eAAeQ,UAmC1B,OA3BIuG,EAAA9Q,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAEIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtB8M,UAAW,CAAC,KAAM9J,EAAAA,WAAWC,YAGjCI,EAAgBa,KAAK,WAEjBpE,EAAKqD,UAAUC,WAAW,YAAatD,EAAKC,SAKpD8M,EAAA9Q,UAAAsI,YAAA,WAAA,IAAAvE,EAAA3E,KAGIkI,EAAgBa,KAAK,WACjBpE,EAAKqD,UAAUmB,cAAc,gBAKrCuI,EAAA9Q,UAAAsM,SAAA,WAEI,OAAO,IAAIK,EAAAA,aAAaC,OAAOxN,KAAK4E,KAAKlF,MAAMiS,WAAYhH,EAAAA,eAAeiH,gCA7CjFhP,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,aACVC,SAAU,6IAIVC,OAAQ,CAAC,iDAZJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAuBHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDANnBtD,EAAAA,SAqCL+N,EAhDA,GCFMxJ,EAAkBC,QAAQC,QAAQ,MAExCyJ,EAAA,WAiBI,SAAAA,EAAyC7N,GAAAhE,KAAAgE,GAAAA,EAJzChE,KAAAmH,KAAOwD,EAAAA,eAAee,SAmC1B,OA3BImG,EAAAjR,UAAAC,SAAA,WAAA,IAAA8D,EAAA3E,KAEIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtBiN,SAAU,CAAC,KAAMjK,EAAAA,WAAWyF,QAAQ,CAACzF,EAAAA,WAAWC,SAAUD,EAAAA,WAAWwI,QAAQ0B,EAAAA,MAAMC,eAGvF9J,EAAgBa,KAAK,WAEjBpE,EAAKqD,UAAUC,WAAW,YAAatD,EAAKC,SAKpDiN,EAAAjR,UAAAsI,YAAA,WAAA,IAAAvE,EAAA3E,KAGIkI,EAAgBa,KAAK,WACjBpE,EAAKqD,UAAUmB,cAAc,gBAKrC0I,EAAAjR,UAAAsM,SAAA,WAEI,OAAO,IAAIK,EAAAA,aAAaC,OAAOxN,KAAK4E,KAAKlF,MAAMoS,UAAWnH,EAAAA,eAAesH,6BA7ChFrP,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,YACVC,SAAU,qIAIVC,OAAQ,CAAC,iDAZJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KAuBHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDANnBtD,EAAAA,SAqCLkO,EAhDA,GCHM3J,EAAkBC,QAAQC,QAAQ,MAExC8J,EAAA,WAsCI,SAAAA,EAAyClO,GAAAhE,KAAAgE,GAAAA,EAV/BhE,KAAAmS,2BAA6B,IAAI/N,EAAAA,aAyE/C,OArFIkE,OAAAC,eACI2J,EAAAtR,UAAA,kBAAe,KAMnB,WACI,OAAOZ,KAAKoS,sBARhB,SACoB1S,GAChBM,KAAKqS,sBAAwB9Q,UAC7BvB,KAAKoS,iBAAmB1S,mCA2B5BwS,EAAAtR,UAAA0F,yBAAA,WACI,OAAItG,KAAKqS,wBAA0B9Q,WAA4C,OAA/BvB,KAAKqS,uBAC1CrS,KAAKqS,uBAUZH,EAAAtR,UAAA0R,SAAR,WAAA,IAAA3N,EAAA3E,KAEIA,KAAK4E,KAAO5E,KAAKgE,GAAGa,MAAM,CACtB0N,cAAe,CAAC,QAIpBvS,KAAK4E,KAAKmD,aAAahD,UAAU,SAACC,GAC9BL,EAAK0N,sBAAwBrN,EAAKuN,cAClC5N,EAAKwN,2BAA2BnL,KAAKrC,EAAK0N,0BAIlDH,EAAAtR,UAAAC,SAAA,WAEIb,KAAKsS,WAGLtS,KAAKgI,UAAUC,WAAW,gBAAiBjI,KAAK4E,OAIpDsN,EAAAtR,UAAAkM,YAAA,WAAA,IAAAnI,EAAA3E,KAEQA,KAAK4E,OAASrD,WAId2G,EAAgBa,KAAK,WAGjBpE,EAAKqD,UAAUmB,cAAc,iBAE7BxE,EAAK2N,WAGL3N,EAAKqD,UAAUC,WAAW,gBAAiBtD,EAAKC,6BA9F/DhC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,4BACVC,SAAU,0aAOVC,OAAQ,CAAC,iDAfJiE,EAAAA,YAAWC,WAAA,CAAA,CAAAC,KA4CHC,EAAAA,OAAMvE,KAAA,CAACoE,EAAAA,qDAzBnBtD,EAAAA,+BAGAA,EAAAA,0CAYA4D,EAAAA,UAyEL2K,EArGA,gBCkCA,SAAAM,KAmDA,2BAnDCC,EAAAA,SAAQ5P,KAAA,CAAC,CACN6P,QAAS,CACLC,EAAAA,aACAC,EAAAA,wBACAC,EAAAA,sBACAC,EAAAA,gBACAC,EAAAA,kBACAC,EAAAA,oBACAC,EAAAA,mBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,gBACAC,EAAAA,4CAEJC,aAAc,CACVjU,EACA8H,EACA3D,EACAmO,EACA7J,EACAqC,EACA0C,EACA6B,EACAe,EACAG,EACAK,EACAkB,EACAG,EACAnE,EACA5J,EACAF,GAEJkQ,QAAS,CACLlU,EACAgE,EACAE,EACAC,EACAkL,GAEJ8E,gBAAiB,CACbrG,OAIR8E","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    animate,\n    state,\n    style,\n    transition,\n    trigger\n} from '@angular/animations';\n\n@Component({\n    selector: 'kui-search',\n    template: `<div class=\"search-bar-elements\">\n\n    <!-- the next element - div.extended-search-panel - is a hidden dropdown filter menu -->\n\n    <div class=\"search-panel\" [class.active]=\"searchPanelFocus\">\n        <div>\n            <button class=\"prefix\" (click)=\"doSearch(search)\">\n                <mat-icon>search</mat-icon>\n            </button>\n        </div>\n\n        <div class=\"input-field\">\n            <input #search autocomplete=\"off\" type=\"search\" [placeholder]=\"searchLabel\" [(ngModel)]=\"searchQuery\" name=\"search\" (keyup.esc)=\"resetSearch(search)\" (keyup)=\"onKey(search, $event)\" (click)=\"setFocus()\" (focus)=\"toggleMenu('simpleSearch')\" [disabled]=\"focusOnExtended === 'active'\" />\n        </div>\n\n        <!-- switch button: on some focus we need a close button for the simple or extended panel -->\n        <div>\n            <button class=\"suffix\" *ngIf=\"focusOnSimple === 'active'\" (click)=\"resetSearch(search)\">\n                <mat-icon>close</mat-icon>\n            </button>\n            <button class=\"suffix\" *ngIf=\"focusOnSimple === 'inactive'\">\n            </button>\n        </div>\n\n        <!-- the search panel has two \"dropdown\" menus: one for simple search and another one for the extended search -->\n        <div class=\"kui-menu simple-search\" [@simpleSearchMenu]=\"focusOnSimple\" *ngIf=\"showSimpleSearch\">\n            <mat-list class=\"kui-previous-search-list\">\n                <mat-list-item *ngFor=\"let item of prevSearch | kuiReverse; let i=index\">\n                    <h4 mat-line *ngIf=\"i<10\" (click)=\"doPrevSearch(item)\">{{item}}</h4>\n                    <button mat-icon-button (click)=\"resetPrevSearch(item)\">\n                        <mat-icon aria-label=\"close\">close</mat-icon>\n                    </button>\n                </mat-list-item>\n            </mat-list>\n            <button mat-stroked-button color=\"accent\" class=\"right\" (click)=\"resetPrevSearch()\" *ngIf=\"prevSearch\">Clear</button>\n        </div>\n\n        <div class=\"kui-menu extended-search\" [@extendedSearchMenu]=\"focusOnExtended\">\n            <div class=\"kui-menu-header\">\n                <span class=\"kui-menu-title\">\n                    <h4>Advanced search</h4>\n                </span>\n                <span class=\"kui-menu-action\">\n                    <button mat-icon-button (click)=\"toggleMenu('extendedSearch')\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </span>\n            </div>\n            <div class=\"extended-search-box\">\n                <kui-extended-search [route]=\"route\" (toggleExtendedSearchForm)=\"toggleMenu('extendedSearch')\"></kui-extended-search>\n            </div>\n        </div>\n    </div>\n\n    <!-- Extended search button to display the extended search form in the search panel -->\n    <button mat-button type=\"button\" color=\"primary\" class=\"advanced-search-button\" (click)=\"toggleMenu('extendedSearch')\">\n        advanced\n    </button>\n\n</div>`,\n    styles: [`input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{display:none}input[type=search]{-moz-appearance:none;-webkit-appearance:none}.center{display:block;margin-left:auto;margin-right:auto}.close{right:12px}.extended-search-box{margin:12px}.advanced-search-button{margin-left:10px}.full-width{width:100%}.hide{display:none}.inactive,.mute{color:#7a7a7a}.search-panel{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;width:680px;z-index:10}.search-panel:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.search-panel div.input-field{flex:1}.search-panel div.input-field input{border-style:none;font-size:14pt;height:38px;position:absolute;width:calc(100% - 80px)}.search-panel div.input-field input:active,.search-panel div.input-field input:focus{outline:0}.search-panel div .prefix,.search-panel div .suffix{background-color:#fff;border-radius:3px;border-style:none;color:rgba(41,41,41,.4);cursor:pointer;height:38px;outline:0;position:relative;width:40px}.search-panel div .prefix:active,.search-panel div .suffix:active{color:#515151}.search-panel.active{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu .kui-menu-header{background-color:#f9f9f9;border-top-left-radius:4px;border-top-right-radius:4px;display:inline-block;height:48px;width:100%}.kui-menu .kui-menu-header .kui-menu-title{float:left;font-size:14px;font-weight:400;margin-top:4px;padding:12px}.kui-menu .kui-menu-header .kui-menu-action{float:right;margin:4px}.kui-menu.extended-search,.kui-menu.simple-search{min-height:680px;width:680px}.kui-menu.simple-search{padding-top:60px;z-index:-1}.kui-menu.simple-search .kui-previous-search-list .mat-list-item{cursor:pointer}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover{background-color:#f9f9f9}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover mat-icon{display:block}.kui-menu.simple-search .kui-previous-search-list .mat-list-item mat-icon{display:none}.kui-menu.simple-search .right{margin-top:12px;margin-left:16px}.kui-menu.extended-search{z-index:20}.search-bar-elements{display:flex;position:relative;z-index:100}.show{display:block}@media screen and (max-width:1024px){.search-panel{width:480px}.search-panel div.input-field input{width:calc(480px - 80px)}.kui-menu.extended-search,.kui-menu.simple-search{width:480px}}@media screen and (max-width:768px){.search-panel{width:calc(480px - 160px)}.search-panel div.input-field input{width:calc(480px - 160px - 80px)}.kui-menu.extended-search,.kui-menu.simple-search{width:calc(480px - 80px)}}`],\n    animations: [\n        trigger('simpleSearchMenu',\n            [\n                state('inactive', style({ display: 'none' })),\n                state('active', style({ display: 'block' })),\n                transition('inactive => true', animate('100ms ease-in')),\n                transition('true => inactive', animate('100ms ease-out'))\n            ]\n        ),\n        trigger('extendedSearchMenu',\n            [\n                state('inactive', style({ display: 'none' })),\n                state('active', style({ display: 'block' })),\n                transition('inactive => true', animate('100ms ease-in')),\n                transition('true => inactive', animate('100ms ease-out'))\n            ]\n        ),\n    ]\n})\n\n/**\n * Contains methods to realise, reset new or previous simple searches.\n */\nexport class SearchComponent implements OnInit {\n\n    @Input() route: string = '/search';\n\n    searchQuery: string;\n\n    searchPanelFocus: boolean = false;\n\n    prevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n\n    focusOnSimple: string = 'inactive';\n    focusOnExtended: string = 'inactive';\n\n    searchLabel: string = 'Search';\n\n    showSimpleSearch: boolean = true;\n\n    constructor(private _route: ActivatedRoute,\n        private _router: Router,\n        private _eleRef: ElementRef) {\n\n    }\n\n    ngOnInit() {\n    }\n\n    /**\n     * @ignore\n     * Do search on Enter click, reset search on Escape\n     * @param search_ele\n     * @param event\n     * @returns void\n     */\n    onKey(search_ele: HTMLElement, event): void {\n        this.focusOnSimple = 'active';\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        if (this.searchQuery && (event.key === 'Enter' || event.keyCode === 13 || event.which === 13)) {\n            this.doSearch(search_ele);\n        }\n        if (event.key === 'Escape' || event.keyCode === 27 || event.which === 27) {\n            this.resetSearch(search_ele);\n        }\n    }\n\n    /**\n     * Realise a simple search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    doSearch(search_ele: HTMLElement): void {\n        if (this.searchQuery !== undefined && this.searchQuery !== null) {\n            this.toggleMenu('simpleSearch');\n            this._router.navigate([this.route + '/fulltext/' + this.searchQuery]);\n\n            // this._router.navigate(['/search/fulltext/' + this.searchQuery], { relativeTo: this._route });\n\n            // push the search query into the local storage prevSearch array (previous search)\n            // to have a list of recent search requests\n            let existingPrevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n            if (existingPrevSearch === null) { existingPrevSearch = []; }\n            let i: number = 0;\n            for (const entry of existingPrevSearch) {\n                // remove entry, if exists already\n                if (this.searchQuery === entry) { existingPrevSearch.splice(i, 1); }\n                i++;\n            }\n\n            existingPrevSearch.push(this.searchQuery);\n            localStorage.setItem('prevSearch', JSON.stringify(existingPrevSearch));\n            // TODO: save the previous search queries somewhere in the user's profile\n\n        } else {\n            search_ele.focus();\n            this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        }\n    }\n\n    /**\n     * @ignore\n     *\n     * Reset the search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    resetSearch(search_ele: HTMLElement): void {\n        this.searchQuery = null;\n        search_ele.focus();\n        this.focusOnSimple = 'inactive';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * @ignore\n     *\n     * Realise a previous search\n     * @param {string} query\n     * @returns void\n     */\n    doPrevSearch(query: string): void {\n        this.searchQuery = query;\n        this._router.navigate([this.route + '/fulltext/' + query], { relativeTo: this._route });\n        this.toggleMenu('simpleSearch');\n    }\n\n    /**\n     * @ignore\n     *\n     * Reset previous searches - the whole previous search or specific item by name\n     * @param {string} name term of the search\n     * @returns void\n     */\n    resetPrevSearch(name: string = null): void {\n        if (name) {\n            // delete only this item with the name ...\n            const i: number = this.prevSearch.indexOf(name);\n            this.prevSearch.splice(i, 1);\n            localStorage.setItem('prevSearch', JSON.stringify(this.prevSearch));\n        } else {\n            // delete the whole \"previous search\" array\n            localStorage.removeItem('prevSearch');\n        }\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n\n    }\n\n    /**\n     * @ignore\n     * Set simple focus to active\n     *\n     * @returns void\n     */\n    setFocus(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple = 'active';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * @ignore\n     *\n     * Switch according to the focus between simple or extended search\n     *\n     * @param {string} name 2 cases: simpleSearch or extendedSearch\n     * @returns void\n     */\n    toggleMenu(name: string): void {\n        switch (name) {\n            case 'simpleSearch':\n                this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n                this.focusOnSimple = (this.focusOnSimple === 'active' ? 'inactive' : 'active');\n                this.showSimpleSearch = true;\n                break;\n            case 'extendedSearch':\n                this.focusOnExtended = (this.focusOnExtended === 'active' ? 'inactive' : 'active');\n                this.showSimpleSearch = false;\n                break;\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'kui-search-panel',\n  template: `<div class=\"kui-search-panel\">\n\n    <div class=\"kui-search-bar\">\n\n        <div class=\"fulltext-search\">\n            <kui-fulltext-search [route]=\"route\"></kui-fulltext-search>\n        </div>\n\n        <div *ngIf=\"showMenu\" [@extendedSearchMenu]=\"focusOnExtended\" class=\"kui-menu extended-search\">\n            <div class=\"kui-menu-header\">\n                <span class=\"kui-menu-title\">\n                    <h4>Advanced search</h4>\n                </span>\n                <span class=\"kui-menu-action\">\n                    <button mat-icon-button (click)=\"toggleMenu()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </span>\n            </div>\n            <div class=\"extended-search-box\">\n                <kui-extended-search [route]=\"route\" (toggleExtendedSearchForm)=\"toggleMenu()\"></kui-extended-search>\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"advanced-btn\">\n        <button mat-button color=\"primary\" (click)=\"toggleMenu()\">advanced</button>\n    </div>\n\n</div>`,\n  styles: [`.advanced-btn{margin-left:10px}.kui-search-panel{display:flex;position:relative;z-index:100}.kui-search-bar{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;z-index:10}.kui-search-bar:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu .kui-menu-header{background-color:#f9f9f9;border-top-left-radius:4px;border-top-right-radius:4px;display:inline-block;height:48px;width:100%}.kui-menu .kui-menu-header .kui-menu-title{float:left;font-size:14px;font-weight:400;margin-top:4px;padding:12px}.kui-menu .kui-menu-header .kui-menu-action{float:right;margin:4px}.kui-menu.extended-search{min-height:680px;width:680px;z-index:20}.extended-search-box{margin:12px}@media screen and (max-width:1024px){.kui-search-bar{width:480px}.kui-search-bar div.input-field input{width:calc(480px - 80px)}.fulltext-search,.kui-menu.extended-search{width:480px}}@media screen and (max-width:768px){.kui-search-bar{width:calc(480px - 160px)}.kui-search-bar div.input-field input{width:calc(480px - 160px - 80px)}.fulltext-search,.kui-menu.extended-search{width:calc(480px - 80px)}}`],\n  animations: [\n    trigger('extendedSearchMenu',\n      [\n        state('inactive', style({ display: 'none' })),\n        state('active', style({ display: 'block' })),\n        transition('inactive => active', animate('100ms ease-in')),\n        transition('active => inactive', animate('100ms ease-out'))\n      ]\n    )\n  ]\n})\nexport class SearchPanelComponent {\n\n  @Input() route: string = '/search';\n  showMenu: boolean = false;\n  focusOnExtended: string = 'inactive';\n\n  constructor() { }\n\n  /**\n   * Show or hide the extended search menu\n   *\n   * @returns void\n   */\n  toggleMenu(): void {\n    this.showMenu = !this.showMenu;\n    this.focusOnExtended = (this.focusOnExtended === 'active' ? 'inactive' : 'active');\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'kui-fulltext-search',\n    template: `<div class=\"search-bar-elements\">\n\n    <div class=\"fulltext-search-bar\" [class.active]=\"searchPanelFocus\">\n        <div>\n            <button class=\"prefix\" (click)=\"doSearch(search)\">\n                <mat-icon>search</mat-icon>\n            </button>\n        </div>\n\n        <div class=\"input-field\">\n            <input #search autocomplete=\"off\" type=\"search\" [placeholder]=\"searchLabel\" [(ngModel)]=\"searchQuery\" name=\"search\" (keyup.esc)=\"resetSearch(search)\" (keyup)=\"onKey(search, $event)\" (click)=\"setFocus()\" (focus)=\"toggleMenu()\" />\n        </div>\n\n        <!-- switch button: on some focus we need a close button for the simple -->\n        <div>\n            <button class=\"suffix\" *ngIf=\"focusOnSimple === 'active'\" (click)=\"resetSearch(search)\">\n                <mat-icon>close</mat-icon>\n            </button>\n            <button class=\"suffix\" *ngIf=\"focusOnSimple === 'inactive'\"></button>\n        </div>\n\n        <!-- \"dropdown\" menu for simple search -->\n        <div class=\"kui-menu simple-search\" [@fulltextSearchMenu]=\"focusOnSimple\" *ngIf=\"showSimpleSearch\">\n            <mat-list class=\"kui-previous-search-list\">\n                <mat-list-item *ngFor=\"let item of prevSearch | kuiReverse; let i=index\">\n                    <h4 mat-line *ngIf=\"i<10\" (click)=\"doPrevSearch(item)\">{{item}}</h4>\n                    <button mat-icon-button (click)=\"resetPrevSearch(item)\">\n                        <mat-icon aria-label=\"close\">close</mat-icon>\n                    </button>\n                </mat-list-item>\n            </mat-list>\n            <button mat-stroked-button color=\"accent\" class=\"right\" (click)=\"resetPrevSearch()\" *ngIf=\"prevSearch\">Clear</button>\n        </div>\n\n    </div>\n</div>`,\n    styles: [`input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{display:none}input[type=search]{-moz-appearance:none;-webkit-appearance:none}.full-width{width:100%}.close{right:12px}.hide{display:none}.show{display:block}.search-bar-elements{display:flex;position:relative;z-index:100}.inactive{color:#7a7a7a}.fulltext-search-bar{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;width:680px;z-index:10}.fulltext-search-bar:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.fulltext-search-bar div.input-field{flex:1}.fulltext-search-bar div.input-field input{border-style:none;font-size:14pt;height:38px;position:absolute;width:calc(100% - 80px)}.fulltext-search-bar div.input-field input:active,.fulltext-search-bar div.input-field input:focus{outline:0}.fulltext-search-bar div .prefix,.fulltext-search-bar div .suffix{background-color:#fff;border-radius:3px;border-style:none;color:rgba(41,41,41,.4);cursor:pointer;height:38px;outline:0;position:relative;width:40px}.fulltext-search-bar div .prefix:active,.fulltext-search-bar div .suffix:active{color:#515151}.fulltext-search-bar div.active{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu.simple-search{min-height:680px;width:680px;padding-top:60px;z-index:-1}.kui-menu.simple-search .kui-previous-search-list .mat-list-item{cursor:pointer}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover{background-color:#f9f9f9}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover mat-icon{display:block}.kui-menu.simple-search .kui-previous-search-list .mat-list-item mat-icon{display:none}.kui-menu.simple-search .right{margin-top:12px;margin-left:16px}@media screen and (max-width:1024px){.fulltext-search-bar{width:480px}.fulltext-search-bar div.input-field input{width:calc(480px - 80px)}.kui-menu.simple-search{width:480px}}@media screen and (max-width:768px){.fulltext-search-bar{width:calc(480px - 160px)}.fulltext-search-bar div.input-field input{width:calc(480px - 160px - 80px)}.kui-menu.simple-search{width:calc(480px - 80px)}}`],\n    animations: [\n        trigger('fulltextSearchMenu',\n            [\n                state('inactive', style({ display: 'none' })),\n                state('active', style({ display: 'block' })),\n                transition('inactive => active', animate('100ms ease-in')),\n                transition('active => inactive', animate('100ms ease-out'))\n            ]\n        )\n    ]\n})\nexport class FulltextSearchComponent implements OnInit {\n\n    @Input() route: string = '/search';\n\n    searchQuery: string;\n\n    showSimpleSearch: boolean = true;\n\n    searchPanelFocus: boolean = false;\n\n    prevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n\n    focusOnSimple: string = 'inactive';\n\n    searchLabel: string = 'Search';\n\n\n    constructor(private _route: ActivatedRoute,\n        private _router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n\n    /**\n     * @ignore\n     * Do search on Enter click, reset search on Escape\n     * @param search_ele\n     * @param event\n     * @returns void\n     */\n    onKey(search_ele: HTMLElement, event): void {\n        this.focusOnSimple = 'active';\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        if (this.searchQuery && (event.key === 'Enter' || event.keyCode === 13 || event.which === 13)) {\n            this.doSearch(search_ele);\n        }\n        if (event.key === 'Escape' || event.keyCode === 27 || event.which === 27) {\n            this.resetSearch(search_ele);\n        }\n    }\n\n\n    /**\n     * Realise a simple search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    doSearch(search_ele: HTMLElement): void {\n        if (this.searchQuery !== undefined && this.searchQuery !== null) {\n            this.toggleMenu();\n            this._router.navigate([this.route + '/fulltext/' + this.searchQuery]);\n\n            // this._router.navigate(['/search/fulltext/' + this.searchQuery], { relativeTo: this._route });\n\n            // push the search query into the local storage prevSearch array (previous search)\n            // to have a list of recent search requests\n            let existingPrevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n            if (existingPrevSearch === null) { existingPrevSearch = []; }\n            let i: number = 0;\n            for (const entry of existingPrevSearch) {\n                // remove entry, if exists already\n                if (this.searchQuery === entry) { existingPrevSearch.splice(i, 1); }\n                i++;\n            }\n            existingPrevSearch.push(this.searchQuery);\n            localStorage.setItem('prevSearch', JSON.stringify(existingPrevSearch));\n        } else {\n            search_ele.focus();\n            this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        }\n    }\n\n    /**\n     * Reset the search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    resetSearch(search_ele: HTMLElement): void {\n        this.searchQuery = null;\n        search_ele.focus();\n        this.focusOnSimple = 'inactive';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * Switch according to the focus between simple or extended search\n     *\n     * @param {string} name 2 cases: simpleSearch or extendedSearch\n     * @returns void\n     */\n    toggleMenu(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple = (this.focusOnSimple === 'active' ? 'inactive' : 'active');\n        this.showSimpleSearch = true;\n    }\n\n    /**\n     * Set simple focus to active\n     *\n     * @returns void\n     */\n    setFocus(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple = 'active';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * Realise a previous search\n     * @param {string} query\n     * @returns void\n     */\n    doPrevSearch(query: string): void {\n        this.searchQuery = query;\n        this._router.navigate([this.route + '/fulltext/' + query], { relativeTo: this._route });\n        this.toggleMenu();\n    }\n\n    /**\n     * Reset previous searches - the whole previous search or specific item by name\n     * @param {string} name term of the search\n     * @returns void\n     */\n    resetPrevSearch(name: string = null): void {\n        if (name) {\n            // delete only this item with the name ...\n            const i: number = this.prevSearch.indexOf(name);\n            this.prevSearch.splice(i, 1);\n            localStorage.setItem('prevSearch', JSON.stringify(this.prevSearch));\n        } else {\n            // delete the whole \"previous search\" array\n            localStorage.removeItem('prevSearch');\n        }\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n\n    }\n}\n","import { Component, EventEmitter, Inject, Input, OnInit, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n    GravsearchGenerationService,\n    OntologyCacheService,\n    OntologyInformation,\n    OntologyMetadata,\n    Properties,\n    PropertyWithValue,\n    ReadResourcesSequence,\n    ResourceClass\n} from '@knora/core';\nimport { SelectPropertyComponent } from './select-property/select-property.component';\nimport { SelectResourceClassComponent } from './select-resource-class/select-resource-class.component';\n\n\n@Component({\n    selector: 'kui-extended-search',\n    template: `<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n  <div>\n    <kui-select-ontology *ngIf=\"ontologies.length > 0\" [formGroup]=\"form\" [ontologies]=\"ontologies\" (ontologySelected)=\"getResourceClassesAndPropertiesForOntology($event)\"></kui-select-ontology>\n  </div>\n\n  <div class=\"select-resource-class\" *ngIf=\"resourceClasses?.length > 0\">\n    <kui-select-resource-class #resourceClass [formGroup]=\"form\" [resourceClasses]=\"resourceClasses\" (resourceClassSelectedEvent)=\"getPropertiesForResourceClass($event)\"></kui-select-resource-class>\n  </div>\n\n  <div class=\"select-property\" *ngIf=\"properties !== undefined\">\n    <div *ngFor=\"let prop of activeProperties; let i = index\">\n\n      <kui-select-property #property [activeResourceClass]=\"activeResourceClass\" [formGroup]=\"form\" [index]=\"i\" [properties]=\"properties\"></kui-select-property>\n\n    </div>\n  </div>\n\n\n  <div>\n    <button mat-mini-fab class=\"property-buttons add-property-button\" color=\"primary\" type=\"button\" (click)=\"addProperty()\" [disabled]=\"activeOntology === undefined || activeProperties.length >= 4\">\n      <mat-icon aria-label=\"add a property\">add</mat-icon>\n    </button>\n\n    <button mat-mini-fab class=\"property-buttons remove-property-button\" color=\"primary\" type=\"button\" (click)=\"removeProperty()\" [disabled]=\"activeProperties.length == 0\">\n      <mat-icon aria-label=\"remove property\">remove</mat-icon>\n    </button>\n  </div>\n\n  <!--  <div>\n    <button mat-icon-button type=\"button\" (click)=\"resetForm()\" [disabled]=\"this.activeOntology === undefined\">\n      <mat-icon aria-label=\"reset query form\">clear</mat-icon>\n    </button>\n\n    <button mat-icon-button type=\"submit\" [disabled]=\"!formValid\">\n      <mat-icon aria-label=\"submit query\">send</mat-icon>\n    </button>\n  </div> -->\n\n  <button class=\"extended-buttons extended-search-button\" mat-stroked-button color=\"primary\" type=\"submit\" [disabled]=\"!formValid\">\n    Search\n  </button>\n  <button class=\"extended-buttons reset\" mat-stroked-button type=\"button\" (click)=\"resetForm()\" [disabled]=\"this.activeOntology === undefined\">\n    Reset\n  </button>\n\n\n</form>\n`,\n    styles: [`.add-property-button{margin-right:5px}.extended-buttons{margin-top:25px}.extended-search-button{margin-right:5px}.property-buttons{margin-top:25px}.select-property{margin-left:22px}.select-resource-class{margin-left:12px}`]\n})\nexport class ExtendedSearchComponent implements OnInit {\n\n    /**\n     * @param {string} route - Route after search\n     */\n    @Input() route;\n\n    // trigger toggle for extended search form\n    @Output() toggleExtendedSearchForm = new EventEmitter<boolean>();\n\n    // all available ontologies\n    ontologies: Array<OntologyMetadata> = [];\n\n    // ontology chosen by the user\n    activeOntology: string;\n\n    // properties specified by the user\n    activeProperties: boolean[] = [];\n\n    // resource classes for the selected ontology\n    resourceClasses: Array<ResourceClass> = [];\n\n    // definition of the selected resource class, if set.\n    activeResourceClass: ResourceClass;\n\n    // properties for the selected ontology or selected resource class\n    properties: Properties;\n\n    result: ReadResourcesSequence = new ReadResourcesSequence([], 0);\n\n    // reference to the component that controls the resource class selection\n    @ViewChild('resourceClass') resourceClassComponent: SelectResourceClassComponent;\n\n    // reference to the component controlling the property selection\n    @ViewChildren('property') propertyComponents: QueryList<SelectPropertyComponent>;\n\n    // FormGroup (used as parent for child components)\n    form: FormGroup;\n\n    // form validation status\n    formValid = false;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _cacheService: OntologyCacheService,\n        private _gravSearchService: GravsearchGenerationService) {\n    }\n\n    ngOnInit() {\n\n        // parent form is empty, it gets passed to the child components\n        this.form = this.fb.group({});\n\n        // if form status changes, re-run validation\n        this.form.statusChanges.subscribe((data) => {\n            this.formValid = this.validateForm();\n            // console.log(this.form);\n        });\n\n        // initialize ontologies to be used for the ontologies selection in the search form\n        this.initializeOntologies();\n    }\n\n    /**\n     * Add a property to the search form.\n     * @returns void\n     */\n    addProperty(): void {\n        this.activeProperties.push(true);\n    }\n\n    /**\n     * Remove the last property from the search form.\n     * @returns void\n     */\n    removeProperty(): void {\n        this.activeProperties.splice(-1, 1);\n    }\n\n    /**\n     * Gets all available ontologies for the search form.\n     * @returns void\n     */\n    initializeOntologies(): void {\n        this._cacheService.getOntologiesMetadata().subscribe(\n            (ontologies: Array<OntologyMetadata>) => {\n                this.ontologies = ontologies;\n            });\n    }\n\n    /**\n     * Once an ontology has been selected, gets its classes and properties.\n     * The classes and properties will be made available to the user for selection.\n     *\n     * @param ontologyIri Iri of the ontology chosen by the user.\n     * @returns void\n     */\n    getResourceClassesAndPropertiesForOntology(ontologyIri: string): void {\n\n        // reset active resource class definition\n        this.activeResourceClass = undefined;\n\n        // reset specified properties\n        this.activeProperties = [];\n\n        this.activeOntology = ontologyIri;\n\n        this._cacheService.getEntityDefinitionsForOntologies([ontologyIri]).subscribe(\n            (ontoInfo: OntologyInformation) => {\n\n                this.resourceClasses = ontoInfo.getResourceClassesAsArray(true);\n                this.properties = ontoInfo.getProperties();\n\n            }\n        );\n\n    }\n\n    /**\n     * Once a resource class has been selected, gets its properties.\n     * The properties will be made available to the user for selection.\n     *\n     * @param resourceClassIri\n     * @returns void\n     */\n    getPropertiesForResourceClass(resourceClassIri: string): void {\n\n        // reset specified properties\n        this.activeProperties = [];\n\n        // if the client undoes the selection of a resource class, use the active ontology as a fallback\n        if (resourceClassIri === null) {\n            this.getResourceClassesAndPropertiesForOntology(this.activeOntology);\n        } else {\n\n            this._cacheService.getResourceClassDefinitions([resourceClassIri]).subscribe(\n                (ontoInfo: OntologyInformation) => {\n                    this.properties = ontoInfo.getProperties();\n\n                    this.activeResourceClass = ontoInfo.getResourceClasses()[resourceClassIri];\n\n                }\n            );\n\n        }\n\n    }\n\n    /**\n     * Validates form and returns its status (boolean).\n     */\n    private validateForm() {\n\n        // check that either a resource class is selected or at least one property is specified\n        return this.form.valid &&\n            (this.propertyComponents.length > 0 || (this.resourceClassComponent !== undefined && this.resourceClassComponent.getResourceClassSelected() !== false));\n\n    }\n\n    /**\n     * Resets the form (selected resource class and specified properties) preserving the active ontology.\n     */\n    resetForm() {\n        if (this.activeOntology !== undefined) {\n            this.getResourceClassesAndPropertiesForOntology(this.activeOntology);\n        }\n    }\n\n\n    /**\n     * Creates a GravSearch query with the given form values and calls the extended search route.\n     */\n    submit() {\n\n        if (!this.formValid) return; // check that from is valid\n\n        const resClassOption = this.resourceClassComponent.getResourceClassSelected();\n\n        let resClass;\n\n        if (resClassOption !== false) {\n            resClass = resClassOption;\n        }\n\n        const properties: PropertyWithValue[] = this.propertyComponents.map(\n            (propComp) => {\n                return propComp.getPropertySelectedWithValue();\n            }\n        );\n\n        const gravsearch = this._gravSearchService.createGravsearchQuery(properties, resClass, 0);\n\n        this._router.navigate([this.route + '/extended/', gravsearch], { relativeTo: this._route });\n\n        // toggle extended search form\n        this.toggleExtendedSearchForm.emit(true);\n\n    }\n\n}\n","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\nimport { OntologyMetadata } from '@knora/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'kui-select-ontology',\n  template: `<mat-form-field *ngIf=\"ontologies.length > 0\">\n  <mat-select placeholder=\"Ontology\" [formControl]=\"form.controls['ontology']\">\n      <mat-option *ngFor=\"let onto of ontologies\" [value]=\"onto.id\">{{ onto.label }}</mat-option>\n  </mat-select>\n</mat-form-field>\n`,\n  styles: [``]\n})\nexport class SelectOntologyComponent implements OnInit {\n\n  @Input() formGroup: FormGroup;\n\n  @Input() ontologies: Array<OntologyMetadata>;\n\n  @Output() ontologySelected = new EventEmitter<string>();\n\n  form: FormGroup;\n\n  constructor(@Inject(FormBuilder) private fb: FormBuilder) { }\n\n  ngOnInit() {\n\n    // build a form for the named graph selection\n    this.form = this.fb.group({\n      ontology: [null, Validators.required]\n    });\n\n    // emit Iri of the ontology when being selected\n    this.form.valueChanges.subscribe((data) => {\n      this.ontologySelected.emit(data.ontology);\n    });\n\n    // add form to the parent form group\n    this.formGroup.addControl('ontology', this.form);\n\n  }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n    Cardinality,\n    CardinalityOccurrence,\n    ComparisonOperatorAndValue,\n    Properties,\n    Property,\n    PropertyWithValue,\n    ResourceClass\n} from '@knora/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SpecifyPropertyValueComponent } from './specify-property-value/specify-property-value.component';\nimport { OntologyInformation } from '@knora/core';\n\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-select-property',\n    template: `<mat-form-field class=\"search-property-field\" *ngIf=\"propertiesAsArray?.length > 0\">\n  <mat-select placeholder=\"Properties\" [formControl]=\"form.controls['property']\">\n    <mat-option *ngFor=\"let prop of propertiesAsArray\" [value]=\"prop.id\">{{ prop.label }}</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<kui-specify-property-value #specifyPropertyValue [formGroup]=\"form\" *ngIf=\"propertySelected !== undefined\" [property]=\"propertySelected\"></kui-specify-property-value>\n\n<mat-checkbox matTooltip=\"Sort criterion\" *ngIf=\"propertySelected !== undefined && sortCriterion()\" [formControl]=\"form.controls['isSortCriterion']\"></mat-checkbox>`,\n    styles: [`.search-property-field{margin-right:8px}`]\n})\nexport class SelectPropertyComponent implements OnInit, OnDestroy {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    // index of the given property (unique)\n    @Input() index: number;\n\n    // setter method for properties when being updated by parent component\n    @Input()\n    set properties(value: Properties) {\n        this.propertySelected = undefined; // reset selected property (overwriting any previous selection)\n        this._properties = value;\n        this.updatePropertiesArray();\n    }\n\n    get properties() {\n       return this._properties;\n    }\n\n    _activeResourceClass: ResourceClass;\n\n    // setter method for selected resource class\n    @Input()\n    set activeResourceClass(value: ResourceClass) {\n        this._activeResourceClass = value;\n    }\n\n    // reference to child component: combination of comparison operator and value for chosen property\n    @ViewChild('specifyPropertyValue') specifyPropertyValue: SpecifyPropertyValueComponent;\n\n    // properties that can be selected from\n    private _properties: Properties;\n\n    // properties as an Array structure (based on this.properties)\n    propertiesAsArray: Array<Property>;\n\n    // represents the currently selected property\n    propertySelected: Property;\n\n    form: FormGroup;\n\n    // unique name for this property to be used in the parent FormGroup\n    propIndex: string;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        // build a form for the property selection\n        this.form = this.fb.group({\n            property: [null, Validators.required],\n            isSortCriterion: [false, Validators.required]\n        });\n\n        // update the selected property\n        this.form.valueChanges.subscribe((data) => {\n            const propIri = data.property;\n            this.propertySelected = this._properties[propIri];\n        });\n\n        resolvedPromise.then(() => {\n            this.propIndex = 'property' + this.index;\n\n            // add form to the parent form group\n            this.formGroup.addControl(this.propIndex, this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl(this.propIndex);\n        });\n    }\n\n    /**\n     * Indicates if property can be used as a sort criterion.\n     * Property has to have cardinality or max cardinality 1 for the chosen resource class.\n     *\n     * We cannot sort by properties whose cardinality is greater than 1.\n     * Return boolean\n     */\n    sortCriterion() {\n\n        // check if a resource class is selected and if the property's cardinality is 1 for the selected resource class\n        if (this._activeResourceClass !== undefined && this.propertySelected !== undefined && !this.propertySelected.isLinkProperty) {\n\n            const cardinalities: Cardinality[] = this._activeResourceClass.cardinalities.filter(\n                (card: Cardinality) => {\n                    // cardinality 1 or max occurrence 1\n                    return card.property === this.propertySelected.id\n                        && card.value === 1\n                        && (card.occurrence === CardinalityOccurrence.card || card.occurrence === CardinalityOccurrence.maxCard)\n\n                }\n            );\n\n            return cardinalities.length === 1;\n        } else {\n            return false;\n        }\n\n    }\n\n    /**\n     * Updates the properties array that is accessed by the template.\n     */\n    private updatePropertiesArray() {\n\n        // represent the properties as an array to be accessed by the template\n        const propsArray = [];\n\n        for (const propIri in this._properties) {\n            if (this._properties.hasOwnProperty(propIri)) {\n                const prop = this._properties[propIri];\n\n                // only list editable props that are not link value props\n                if (prop.isEditable && !prop.isLinkValueProperty) {\n                    propsArray.push(this._properties[propIri]);\n                }\n            }\n        }\n\n        // sort properties by label (ascending)\n        propsArray.sort(OntologyInformation.sortFunc);\n\n        this.propertiesAsArray = propsArray;\n    }\n\n    /**\n     * Returns the selected property with the specified value.\n     */\n    getPropertySelectedWithValue(): PropertyWithValue {\n\n        const propVal: ComparisonOperatorAndValue = this.specifyPropertyValue.getComparisonOperatorAndValueLiteralForProperty();\n\n        let isSortCriterion = false;\n\n        // only non linking properties can be used for sorting\n        if (!this.propertySelected.isLinkProperty) {\n            isSortCriterion = this.form.value.isSortCriterion;\n        }\n\n        return new PropertyWithValue(this.propertySelected, propVal, isSortCriterion);\n\n    }\n\n\n}\n","import { Component, Inject, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n    ComparisonOperator,\n    ComparisonOperatorAndValue,\n    Equals,\n    Exists,\n    GreaterThan,\n    GreaterThanEquals,\n    KnoraConstants,\n    LessThan,\n    LessThanEquals,\n    Like,\n    Match,\n    NotEquals,\n    Property,\n    PropertyValue,\n    Value\n} from '@knora/core';\n\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-specify-property-value',\n    template: `<mat-form-field class=\"search-operator-field\" *ngIf=\"comparisonOperators?.length > 0\">\n    <mat-select placeholder=\"Comparison Operator\" [formControl]=\"form.controls['comparisonOperator']\">\n        <mat-option *ngFor=\"let compOp of comparisonOperators\" [value]=\"compOp\">{{ compOp.label }}</mat-option>\n    </mat-select>\n</mat-form-field>\n\n<!-- select apt component for value specification using a switch case statement-->\n<span\n    *ngIf=\"comparisonOperatorSelected !== undefined && comparisonOperatorSelected !== null && comparisonOperatorSelected.getClassName() != 'Exists'\"\n    [ngSwitch]=\"propertyValueType\">\n  <boolean-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.BooleanValue\"></boolean-value>\n  <date-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.DateValue\"></date-value>\n  <decimal-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.DecimalValue\"></decimal-value>\n  <integer-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.IntValue\"></integer-value>\n  <link-value #propertyValue [formGroup]=\"form\" [restrictResourceClass]=\"property.objectType\"\n              *ngSwitchCase=\"KnoraConstants.Resource\"></link-value>\n  <text-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.TextValue\"></text-value>\n  <uri-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.UriValue\"></uri-value>\n\n    <!-- TODO: Resource: handle linking properties with target class restriction: access property member to get objectClass via property() getter method -->\n  <span *ngSwitchDefault=\"\">Not supported {{propertyValueType}}</span>\n</span>\n`,\n    styles: [`.search-operator-field{margin-right:8px}`]\n})\nexport class SpecifyPropertyValueComponent implements OnInit, OnChanges {\n\n    KnoraConstants = KnoraConstants;\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    @ViewChild('propertyValue') propertyValueComponent: PropertyValue;\n\n    // setter method for the property chosen by the user\n    @Input()\n    set property(prop: Property) {\n        this.comparisonOperatorSelected = undefined; // reset to initial state\n        this._property = prop;\n        this.resetComparisonOperators(); // reset comparison operators for given property (overwriting any previous selection)\n    }\n\n    // getter method for this._property\n    get property(): Property {\n        return this._property;\n    }\n\n    private _property: Property;\n\n    form: FormGroup;\n\n    // available comparison operators for the property\n    comparisonOperators: Array<ComparisonOperator> = [];\n\n    // comparison operator selected by the user\n    comparisonOperatorSelected: ComparisonOperator;\n\n    // the type of the property\n    propertyValueType;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    /**\n     * Resets the comparison operators for this._property.\n     */\n    resetComparisonOperators() {\n\n        // depending on object class, set comparison operators and value entry field\n        if (this._property.isLinkProperty) {\n            this.propertyValueType = KnoraConstants.Resource;\n        } else {\n            this.propertyValueType = this._property.objectType;\n        }\n\n        switch (this.propertyValueType) {\n\n            case KnoraConstants.TextValue:\n                this.comparisonOperators = [new Like(), new Match(), new Equals(), new NotEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.BooleanValue:\n            case KnoraConstants.Resource:\n            case KnoraConstants.UriValue:\n            case KnoraConstants.IntervalValue:\n                this.comparisonOperators = [new Equals(), new NotEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.IntValue:\n            case KnoraConstants.DecimalValue:\n            case KnoraConstants.DateValue:\n                this.comparisonOperators = [new Equals(), new NotEquals(), new LessThan(), new LessThanEquals(), new GreaterThan(), new GreaterThanEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.ListValue:\n            case KnoraConstants.GeomValue:\n            case KnoraConstants.FileValue:\n            case KnoraConstants.AudioFileValue:\n            case KnoraConstants.StillImageFileValue:\n            case KnoraConstants.DDDFileValue:\n            case KnoraConstants.MovingImageFileValue:\n            case KnoraConstants.TextFileValue:\n            case KnoraConstants.ColorValue:\n                this.comparisonOperators = [new Exists()];\n                break;\n\n            default:\n                console.log('ERROR: Unsupported value type ' + this._property.objectType);\n\n        }\n\n    }\n\n    ngOnInit() { }\n\n    ngOnChanges() {\n\n        // build a form for comparison operator selection\n        this.form = this.fb.group({\n            comparisonOperator: [null, Validators.required]\n        });\n\n        // store comparison operator when selected\n        this.form.valueChanges.subscribe((data) => {\n            this.comparisonOperatorSelected = data.comparisonOperator;\n        });\n\n        resolvedPromise.then(() => {\n\n            // remove from the parent form group (clean reset)\n            this.formGroup.removeControl('comparisonOperator');\n\n            // add form to the parent form group\n            this.formGroup.addControl('comparisonOperator', this.form);\n        });\n\n    }\n\n    /**\n     * Gets the specified comparison operator and value for the property.\n     *\n     * returns {ComparisonOperatorAndValue} the comparison operator and the specified value\n     */\n    getComparisonOperatorAndValueLiteralForProperty(): ComparisonOperatorAndValue {\n        // return value (literal or IRI) from the child component\n        let value: Value;\n\n        // comparison operator 'Exists' does not require a value\n        if (this.comparisonOperatorSelected.getClassName() !== 'Exists') {\n            value = this.propertyValueComponent.getValue();\n        }\n\n        // return the comparison operator and the specified value\n        return new ComparisonOperatorAndValue(this.comparisonOperatorSelected, value);\n\n    }\n\n}\n\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n\n@Component({\n    selector: 'boolean-value',\n    template: `<mat-checkbox [formControl]=\"form.controls['booleanValue']\"></mat-checkbox>\n`,\n    styles: [``]\n})\nexport class BooleanValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.BooleanValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            booleanValue: [false, Validators.compose([Validators.required])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n        return new ValueLiteral(String(this.form.value.booleanValue), KnoraConstants.xsdBoolean);\n    }\n}\n","import { Component, Directive, Host, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\nimport { GregorianCalendarDate, JDNConvertibleCalendar, JDNPeriod } from 'jdnconvertiblecalendar';\nimport { DateAdapter, MAT_DATE_LOCALE, MatCalendar } from '@angular/material';\nimport { JDNConvertibleCalendarDateAdapter } from 'jdnconvertiblecalendardateadapter';\n\n/** Custom header component containing a calendar format switcher */\n@Component({\n    selector: 'kui-calendar-header',\n    template: `\n      <mat-select placeholder=\"Calendar Format\" [formControl]=\"form.controls['calendar']\">\n        <mat-option *ngFor=\"let cal of supportedCalendarFormats\" [value]=\"cal\">{{cal}}</mat-option>\n      </mat-select>\n      <mat-calendar-header></mat-calendar-header>\n    `,\n    styles: []\n})\nexport class HeaderComponent<D> implements OnInit {\n    constructor(@Host() private _calendar: MatCalendar<JDNConvertibleCalendar>,\n        private _dateAdapter: DateAdapter<JDNConvertibleCalendar>,\n        @Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    form: FormGroup;\n\n    // a list of supported calendar formats (Gregorian and Julian)\n    supportedCalendarFormats = JDNConvertibleCalendar.supportedCalendars;\n\n    // the currently active calendar format\n    activeFormat;\n\n    ngOnInit() {\n\n        // get the currently active calendar format from the date adapter\n        if (this._dateAdapter instanceof JDNConvertibleCalendarDateAdapter) {\n            this.activeFormat = this._dateAdapter.activeCalendarFormat;\n        } else {\n            console.log('date adapter is expected to be an instance of JDNConvertibleCalendarDateAdapter');\n        }\n\n        // build a form for the calendar format selection\n        this.form = this.fb.group({\n            calendar: [this.activeFormat, Validators.required]\n        });\n\n        // do the conversion when the user selects another calendar format\n        this.form.valueChanges.subscribe((data) => {\n            // pass the target calendar format to the conversion method\n            this.convertDate(data.calendar);\n        });\n\n    }\n\n    /**\n     * Converts the date into the target format.\n     *\n     * @param calendar the target calendar format.\n     */\n    convertDate(calendar: 'Gregorian' | 'Julian') {\n\n        if (this._dateAdapter instanceof JDNConvertibleCalendarDateAdapter) {\n\n            // convert the date into the target calendar format\n            const convertedDate = this._dateAdapter.convertCalendarFormat(this._calendar.activeDate, calendar);\n\n            // set the new date\n            this._calendar.activeDate = convertedDate;\n\n            // select the new date in the datepicker UI\n            this._calendar._dateSelected(convertedDate);\n\n            // update view after calendar format conversion\n            const view = this._calendar.currentView === 'month' ? this._calendar.monthView :\n                (this._calendar.currentView === 'year' ? this._calendar.yearView : this._calendar.multiYearView);\n\n            view.ngAfterContentInit();\n        } else {\n            console.log('date adapter is expected to be an instance of JDNConvertibleCalendarDateAdapter');\n        }\n    }\n}\n","import { Component, Host, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\nimport { GregorianCalendarDate, JDNConvertibleCalendar, JDNPeriod } from 'jdnconvertiblecalendar';\nimport { HeaderComponent } from './header-calendar/header-calendar.component';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'date-value',\n    template: `<mat-form-field>\n    <kuiJdnDatepicker>\n        <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" [formControl]=\"form.controls['dateValue']\">\n        <mat-datepicker #picker [calendarHeaderComponent]=\"headerComponent\"></mat-datepicker>\n    </kuiJdnDatepicker>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n</mat-form-field>`,\n    styles: [``]\n})\nexport class DateValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.DateValue;\n\n    form: FormGroup;\n\n    // custom header for the datepicker\n    headerComponent = HeaderComponent;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    ngOnInit() {\n\n        // init datepicker\n        this.form = this.fb.group({\n            dateValue: [null, Validators.compose([Validators.required])]\n        });\n\n        this.form.valueChanges.subscribe((data) => {\n            // console.log(data.dateValue);\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        const dateObj: JDNConvertibleCalendar = this.form.value.dateValue;\n\n        // get calendar format\n        const calendarFormat = dateObj.calendarName;\n        // get calendar period\n        const calendarPeriod = dateObj.toCalendarPeriod();\n        // get the date\n        const dateString = `${calendarFormat.toUpperCase()}:${calendarPeriod.periodStart.year}-${calendarPeriod.periodStart.month}-${calendarPeriod.periodStart.day}:${calendarPeriod.periodEnd.year}-${calendarPeriod.periodEnd.month}-${calendarPeriod.periodEnd.day}`;\n\n        return new ValueLiteral(String(dateString), KnoraConstants.DateValue);\n    }\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'decimal-value',\n    template: `<mat-form-field>\n    <input matInput [formControl]=\"form.controls['decimalValue']\" placeholder=\"Decimal value\" value=\"\" type=\"number\">\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class DecimalValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.DecimalValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            decimalValue: [null, Validators.compose([Validators.required])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.decimalValue), KnoraConstants.xsdDecimal);\n    }\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'integer-value',\n    template: `<mat-form-field>\n    <input matInput [formControl]=\"form.controls['integerValue']\" placeholder=\"Integer value\" value=\"\" type=\"number\">\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class IntegerValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.IntValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            integerValue: [null, Validators.compose([Validators.required, Validators.pattern(/^-?\\d+$/)])] // only allow for integer values (no fractions)\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.integerValue), KnoraConstants.xsdInteger);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    ApiServiceResult,\n    ConvertJSONLD,\n    IRI,\n    KnoraConstants,\n    OntologyCacheService,\n    PropertyValue,\n    ReadResource,\n    ReadResourcesSequence,\n    SearchService,\n    Value\n} from '@knora/core';\n\ndeclare let require: any; // http://stackoverflow.com/questions/34730010/angular2-5-minute-install-bug-require-is-not-defined\nconst jsonld = require('jsonld');\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'link-value',\n    template: `<mat-form-field>\n    <input matInput placeholder=\"resource\" aria-label=\"resource\" [matAutocomplete]=\"auto\" [formControl]=\"form.controls['resource']\">\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayResource\">\n        <mat-option *ngFor=\"let res of resources\" [value]=\"res\">\n            {{res?.label}}\n        </mat-option>\n    </mat-autocomplete>\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class LinkValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.LinkValue;\n\n    form: FormGroup;\n\n    resources: ReadResource[];\n\n    private _restrictToResourceClass: string;\n\n    @Input()\n    set restrictResourceClass(value: string) {\n        this._restrictToResourceClass = value;\n    }\n\n    get restrictResourceClass() {\n        return this._restrictToResourceClass;\n    }\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder, private _searchService: SearchService, private _cacheService: OntologyCacheService) {\n\n    }\n\n    /**\n     * Displays a selected resource using its label.\n     *\n     * @param resource the resource to be displayed (or no selection yet).\n     * @returns\n     */\n    displayResource(resource: ReadResource | null) {\n\n        // null is the initial value (no selection yet)\n        if (resource !== null) {\n            return resource.label;\n        }\n    }\n\n    /**\n     * Search for resources whose labels contain the given search term, restricting to to the given properties object constraint.\n     *\n     * @param searchTerm\n     */\n    searchByLabel(searchTerm: string) {\n\n        // at least 3 characters are required\n        if (searchTerm.length >= 3) {\n\n            this._searchService.searchByLabelReadResourceSequence(searchTerm, this._restrictToResourceClass).subscribe(\n                (result: ReadResourcesSequence) => {\n                    this.resources = result.resources;\n                }, function (err) {\n                    console.log('JSONLD of full resource request could not be expanded:' + err);\n                }\n            );\n        } else {\n            // clear selection\n            this.resources = undefined;\n        }\n\n    }\n\n    /**\n     * Checks that the selection is a [[ReadResource]].\n     *\n     * Surprisingly, [null] has to be returned if the value is valid: https://angular.io/guide/form-validation#custom-validators\n     *\n     * @param the form element whose value has to be checked.\n     * @returns\n     */\n    validateResource(c: FormControl) {\n\n        const isValidResource = (c.value instanceof ReadResource);\n\n        if (isValidResource) {\n            return null;\n        } else {\n            return {\n                noResource: {\n                    value: c.value\n                }\n            };\n        }\n\n    }\n\n    ngOnInit() {\n        this.form = this.fb.group({\n            resource: [null, Validators.compose([\n                Validators.required,\n                this.validateResource\n            ])]\n        });\n\n        this.form.valueChanges.subscribe((data) => {\n            this.searchByLabel(data.resource);\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new IRI(this.form.value.resource.id);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'text-value',\n    template: `<mat-form-field>\n    <input matInput [formControl]=\"form.controls['textValue']\" placeholder=\"text value\" value=\"\">\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class TextValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.TextValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            textValue: [null, Validators.required]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.textValue), KnoraConstants.xsdString);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Utils, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'uri-value',\n    template: `<mat-form-field>\n    <input matInput [formControl]=\"form.controls['uriValue']\" placeholder=\"URI\" value=\"\">\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class UriValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.UriValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            uriValue: [null, Validators.compose([Validators.required, Validators.pattern(Utils.RegexUrl)])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.uriValue), KnoraConstants.xsdUri);\n    }\n\n}\n","import { Component, EventEmitter, Inject, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ResourceClass } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-select-resource-class',\n    template: `<mat-form-field *ngIf=\"resourceClasses.length > 0\">\n  <mat-select placeholder=\"Resource Class\" [formControl]=\"form.controls['resourceClass']\">\n    <mat-option [value]=\"null\">no selection</mat-option>\n    <!-- undo selection of a resource class -->\n    <mat-option *ngFor=\"let resourceClass of resourceClasses\" [value]=\"resourceClass.id\">{{ resourceClass.label }}</mat-option>\n  </mat-select>\n</mat-form-field>`,\n    styles: [``]\n})\nexport class SelectResourceClassComponent implements OnInit, OnChanges {\n\n    @Input() formGroup: FormGroup;\n\n    // setter method for resource classes when being updated by parent component\n    @Input()\n    set resourceClasses(value: Array<ResourceClass>) {\n        this.resourceClassSelected = undefined; // reset on updates\n        this._resourceClasses = value;\n    }\n\n    // getter method for resource classes (used in template)\n    get resourceClasses() {\n        return this._resourceClasses;\n    }\n\n    // event emitted to parent component once a resource class is selected by the user\n    @Output() resourceClassSelectedEvent = new EventEmitter<string>();\n\n    // available resource classes for selection\n    private _resourceClasses: Array<ResourceClass>;\n\n    // stores the currently selected resource class\n    private resourceClassSelected: string;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    /**\n     * Returns the Iri of the selected resource class.\n     *\n     * @returns the Iri of the selected resource class or false in case no resource class is selected.\n     */\n    getResourceClassSelected(): any {\n        if (this.resourceClassSelected !== undefined && this.resourceClassSelected !== null) {\n            return this.resourceClassSelected;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Initalizes the FormGroup for the resource class selection.\n     * The initial value is set to null.\n     */\n    private initForm() {\n        // build a form for the resource class selection\n        this.form = this.fb.group({\n            resourceClass: [null] // resource class selection is optional\n        });\n\n        // store and emit Iri of the resource class when selected\n        this.form.valueChanges.subscribe((data) => {\n            this.resourceClassSelected = data.resourceClass;\n            this.resourceClassSelectedEvent.emit(this.resourceClassSelected);\n        });\n    }\n\n    ngOnInit() {\n\n        this.initForm();\n\n        // add form to the parent form group\n        this.formGroup.addControl('resourceClass', this.form);\n\n    }\n\n    ngOnChanges() {\n\n        if (this.form !== undefined) {\n\n            // resource classes have been reinitialized\n            // reset form\n            resolvedPromise.then(() => {\n\n                // remove this form from the parent form group\n                this.formGroup.removeControl('resourceClass');\n\n                this.initForm();\n\n                // add form to the parent form group\n                this.formGroup.addControl('resourceClass', this.form);\n\n            });\n\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatIconModule, MatInputModule,\n    MatListModule,\n    MatSelectModule,\n    MatTooltipModule\n} from '@angular/material';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { KuiCoreModule } from '@knora/core';\nimport { KuiActionModule } from '@knora/action';\nimport { KuiViewerModule } from '@knora/viewer';\n\nimport { MatJDNConvertibleCalendarDateAdapterModule } from 'jdnconvertiblecalendardateadapter';\n\nimport { SearchComponent } from './search.component';\nimport { FulltextSearchComponent } from './fulltext-search/fulltext-search.component';\nimport { SearchPanelComponent } from './search-panel/search-panel.component';\nimport { ExtendedSearchComponent } from './extended-search/extended-search.component';\n\nimport { SelectOntologyComponent } from './extended-search/select-ontology/select-ontology.component';\nimport { SelectResourceClassComponent } from './extended-search/select-resource-class/select-resource-class.component';\nimport { SelectPropertyComponent } from './extended-search/select-property/select-property.component';\nimport { SpecifyPropertyValueComponent } from './extended-search/select-property/specify-property-value/specify-property-value.component';\nimport { BooleanValueComponent } from './extended-search/select-property/specify-property-value/boolean-value/boolean-value.component';\nimport { DateValueComponent } from './extended-search/select-property/specify-property-value/date-value/date-value.component';\nimport { DecimalValueComponent } from './extended-search/select-property/specify-property-value/decimal-value/decimal-value.component';\nimport { IntegerValueComponent } from './extended-search/select-property/specify-property-value/integer-value/integer-value.component';\nimport { LinkValueComponent } from './extended-search/select-property/specify-property-value/link-value/link-value.component';\nimport { TextValueComponent } from './extended-search/select-property/specify-property-value/text-value/text-value.component';\nimport { UriValueComponent } from './extended-search/select-property/specify-property-value/uri-value/uri-value.component';\nimport { HeaderComponent } from './extended-search/select-property/specify-property-value/date-value/header-calendar/header-calendar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        MatListModule,\n        MatSelectModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        KuiCoreModule,\n        KuiActionModule,\n        KuiViewerModule,\n        MatJDNConvertibleCalendarDateAdapterModule\n    ],\n    declarations: [\n        SearchComponent,\n        SelectOntologyComponent,\n        ExtendedSearchComponent,\n        SelectResourceClassComponent,\n        SelectPropertyComponent,\n        SpecifyPropertyValueComponent,\n        BooleanValueComponent,\n        DateValueComponent,\n        DecimalValueComponent,\n        IntegerValueComponent,\n        LinkValueComponent,\n        TextValueComponent,\n        UriValueComponent,\n        HeaderComponent,\n        FulltextSearchComponent,\n        SearchPanelComponent\n    ],\n    exports: [\n        SearchComponent,\n        SearchPanelComponent,\n        FulltextSearchComponent,\n        ExtendedSearchComponent,\n        DateValueComponent\n    ],\n    entryComponents: [\n        HeaderComponent\n    ]\n})\nexport class KuiSearchModule {\n}\n"]}