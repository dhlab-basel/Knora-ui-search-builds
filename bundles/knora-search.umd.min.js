!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/router"),require("@angular/animations"),require("@angular/forms"),require("@knora/core"),require("jdnconvertiblecalendar"),require("@angular/material"),require("jdnconvertiblecalendardateadapter"),require("@angular/common"),require("@angular/platform-browser/animations"),require("@knora/action"),require("@knora/viewer")):"function"==typeof define&&define.amd?define("@knora/search",["exports","@angular/core","@angular/router","@angular/animations","@angular/forms","@knora/core","jdnconvertiblecalendar","@angular/material","jdnconvertiblecalendardateadapter","@angular/common","@angular/platform-browser/animations","@knora/action","@knora/viewer"],t):t((e.knora=e.knora||{},e.knora.search={}),e.ng.core,e.ng.router,e.ng.animations,e.ng.forms,null,null,e.ng.material,null,e.ng.common,e.ng.platformBrowser.animations,null,null)}(this,function(e,a,t,r,o,i,n,s,c,l,u,p,d){"use strict";function h(e){var t="function"==typeof Symbol&&e[Symbol.iterator],r=0;return t?t.call(e):{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}}var m=function(){function e(e,t,r){this._route=e,this._router=t,this._eleRef=r,this.route="/search",this.searchPanelFocus=!1,this.prevSearch=JSON.parse(localStorage.getItem("prevSearch")),this.focusOnSimple="inactive",this.focusOnExtended="inactive",this.searchLabel="Search",this.showSimpleSearch=!0}return e.prototype.ngOnInit=function(){},e.prototype.onKey=function(e,t){this.focusOnSimple="active",this.prevSearch=JSON.parse(localStorage.getItem("prevSearch")),!this.searchQuery||"Enter"!==t.key&&13!==t.keyCode&&13!==t.which||this.doSearch(e),"Escape"!==t.key&&27!==t.keyCode&&27!==t.which||this.resetSearch(e)},e.prototype.doSearch=function(e){var t,r;if(this.searchQuery!==undefined&&null!==this.searchQuery){this.toggleMenu("simpleSearch"),this._router.navigate([this.route+"/fulltext/"+this.searchQuery]);var o=JSON.parse(localStorage.getItem("prevSearch"));null===o&&(o=[]);var n=0;try{for(var a=h(o),i=a.next();!i.done;i=a.next()){var s=i.value;this.searchQuery===s&&o.splice(n,1),n++}}catch(c){t={error:c}}finally{try{i&&!i.done&&(r=a["return"])&&r.call(a)}finally{if(t)throw t.error}}o.push(this.searchQuery),localStorage.setItem("prevSearch",JSON.stringify(o))}else e.focus(),this.prevSearch=JSON.parse(localStorage.getItem("prevSearch"))},e.prototype.resetSearch=function(e){this.searchQuery=null,e.focus(),this.focusOnSimple="inactive",this.searchPanelFocus=!this.searchPanelFocus},e.prototype.doPrevSearch=function(e){this.searchQuery=e,this._router.navigate([this.route+"/fulltext/"+e],{relativeTo:this._route}),this.toggleMenu("simpleSearch")},e.prototype.resetPrevSearch=function(e){if(void 0===e&&(e=null),e){var t=this.prevSearch.indexOf(e);this.prevSearch.splice(t,1),localStorage.setItem("prevSearch",JSON.stringify(this.prevSearch))}else localStorage.removeItem("prevSearch");this.prevSearch=JSON.parse(localStorage.getItem("prevSearch"))},e.prototype.setFocus=function(){this.prevSearch=JSON.parse(localStorage.getItem("prevSearch")),this.focusOnSimple="active",this.searchPanelFocus=!this.searchPanelFocus},e.prototype.toggleMenu=function(e){switch(e){case"simpleSearch":this.prevSearch=JSON.parse(localStorage.getItem("prevSearch")),this.focusOnSimple="active"===this.focusOnSimple?"inactive":"active",this.showSimpleSearch=!0;break;case"extendedSearch":this.focusOnExtended="active"===this.focusOnExtended?"inactive":"active",this.showSimpleSearch=!1}},e.decorators=[{type:a.Component,args:[{selector:"kui-search",template:'<div class="search-bar-elements">\n\n    \x3c!-- the next element - div.extended-search-panel - is a hidden dropdown filter menu --\x3e\n\n    <div class="search-panel" [class.active]="searchPanelFocus">\n        <div>\n            <button class="prefix" (click)="doSearch(search)">\n                <mat-icon>search</mat-icon>\n            </button>\n        </div>\n\n        <div class="input-field">\n            <input #search autocomplete="off" type="search" [placeholder]="searchLabel" [(ngModel)]="searchQuery" name="search" (keyup.esc)="resetSearch(search)" (keyup)="onKey(search, $event)" (click)="setFocus()" (focus)="toggleMenu(\'simpleSearch\')" [disabled]="focusOnExtended === \'active\'" />\n        </div>\n\n        \x3c!-- switch button: on some focus we need a close button for the simple or extended panel --\x3e\n        <div>\n            <button class="suffix" *ngIf="focusOnSimple === \'active\'" (click)="resetSearch(search)">\n                <mat-icon>close</mat-icon>\n            </button>\n            <button class="suffix" *ngIf="focusOnSimple === \'inactive\'">\n            </button>\n        </div>\n\n        \x3c!-- the search panel has two "dropdown" menus: one for simple search and another one for the extended search --\x3e\n        <div class="kui-menu simple-search" [@simpleSearchMenu]="focusOnSimple" *ngIf="showSimpleSearch">\n            <mat-list class="kui-previous-search-list">\n                <mat-list-item *ngFor="let item of prevSearch | kuiReverse; let i=index">\n                    <h4 mat-line *ngIf="i<10" (click)="doPrevSearch(item)">{{item}}</h4>\n                    <button mat-icon-button (click)="resetPrevSearch(item)">\n                        <mat-icon aria-label="close">close</mat-icon>\n                    </button>\n                </mat-list-item>\n            </mat-list>\n            <button mat-stroked-button color="accent" class="right" (click)="resetPrevSearch()" *ngIf="prevSearch">Clear</button>\n        </div>\n\n        <div class="kui-menu extended-search" [@extendedSearchMenu]="focusOnExtended">\n            <div class="kui-menu-header">\n                <span class="kui-menu-title">\n                    <h4>Advanced search</h4>\n                </span>\n                <span class="kui-menu-action">\n                    <button mat-icon-button (click)="toggleMenu(\'extendedSearch\')">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </span>\n            </div>\n            <div class="extended-search-box">\n                <kui-extended-search [route]="route" (toggleExtendedSearchForm)="toggleMenu(\'extendedSearch\')"></kui-extended-search>\n            </div>\n        </div>\n    </div>\n\n    \x3c!-- Extended search button to display the extended search form in the search panel --\x3e\n    <button mat-button type="button" color="primary" class="advanced-search-button" (click)="toggleMenu(\'extendedSearch\')">\n        advanced\n    </button>\n\n</div>',styles:["input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{display:none}input[type=search]{-moz-appearance:none;-webkit-appearance:none}.center{display:block;margin-left:auto;margin-right:auto}.close{right:12px}.extended-search-box{margin:12px}.advanced-search-button{margin-left:10px}.full-width{width:100%}.hide{display:none}.inactive,.mute{color:#7a7a7a}.search-panel{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;width:680px;z-index:10}.search-panel:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.search-panel div.input-field{flex:1}.search-panel div.input-field input{border-style:none;font-size:14pt;height:38px;position:absolute;width:calc(100% - 80px)}.search-panel div.input-field input:active,.search-panel div.input-field input:focus{outline:0}.search-panel div .prefix,.search-panel div .suffix{background-color:#fff;border-radius:3px;border-style:none;color:rgba(41,41,41,.4);cursor:pointer;height:38px;outline:0;position:relative;width:40px}.search-panel div .prefix:active,.search-panel div .suffix:active{color:#515151}.search-panel.active{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu .kui-menu-header{background-color:#f9f9f9;border-top-left-radius:4px;border-top-right-radius:4px;display:inline-block;height:48px;width:100%}.kui-menu .kui-menu-header .kui-menu-title{float:left;font-size:14px;font-weight:400;margin-top:4px;padding:12px}.kui-menu .kui-menu-header .kui-menu-action{float:right;margin:4px}.kui-menu.extended-search,.kui-menu.simple-search{min-height:680px;width:680px}.kui-menu.simple-search{padding-top:60px;z-index:-1}.kui-menu.simple-search .kui-previous-search-list .mat-list-item{cursor:pointer}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover{background-color:#f9f9f9}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover mat-icon{display:block}.kui-menu.simple-search .kui-previous-search-list .mat-list-item mat-icon{display:none}.kui-menu.simple-search .right{margin-top:12px;margin-left:16px}.kui-menu.extended-search{z-index:20}.search-bar-elements{display:flex}.show{display:block}@media screen and (max-width:1024px){.search-panel{width:480px}.search-panel div.input-field input{width:calc(480px - 80px)}.kui-menu.extended-search,.kui-menu.simple-search{width:480px}}@media screen and (max-width:768px){.search-panel{width:calc(480px - 160px)}.search-panel div.input-field input{width:calc(480px - 160px - 80px)}.kui-menu.extended-search,.kui-menu.simple-search{width:calc(480px - 80px)}}"],animations:[r.trigger("simpleSearchMenu",[r.state("inactive",r.style({display:"none"})),r.state("active",r.style({display:"block"})),r.transition("inactive => true",r.animate("100ms ease-in")),r.transition("true => inactive",r.animate("100ms ease-out"))]),r.trigger("extendedSearchMenu",[r.state("inactive",r.style({display:"none"})),r.state("active",r.style({display:"block"})),r.transition("inactive => true",r.animate("100ms ease-in")),r.transition("true => inactive",r.animate("100ms ease-out"))])]}]}],e.ctorParameters=function(){return[{type:t.ActivatedRoute},{type:t.Router},{type:a.ElementRef}]},e.propDecorators={route:[{type:a.Input}]},e}(),f=function(){function e(){this.route="/search",this.showMenu=!1,this.focusOnExtended="inactive"}return e.prototype.toggleMenu=function(){this.showMenu=!this.showMenu,this.focusOnExtended="active"===this.focusOnExtended?"inactive":"active"},e.decorators=[{type:a.Component,args:[{selector:"kui-search-panel",template:'<div class="kui-search-panel">\n\n    <div class="kui-search-bar">\n\n        <div class="fulltext-search">\n            <kui-fulltext-search [route]="route"></kui-fulltext-search>\n        </div>\n\n        <div *ngIf="showMenu" [@extendedSearchMenu]="focusOnExtended" class="kui-menu extended-search">\n            <div class="kui-menu-header">\n                <span class="kui-menu-title">\n                    <h4>Advanced search</h4>\n                </span>\n                <span class="kui-menu-action">\n                    <button mat-icon-button (click)="toggleMenu()">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </span>\n            </div>\n            <div class="extended-search-box">\n                <kui-extended-search [route]="route" (toggleExtendedSearchForm)="toggleMenu()"></kui-extended-search>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="advanced-btn">\n        <button mat-button color="primary" (click)="toggleMenu()">advanced</button>\n    </div>\n\n</div>',styles:[".advanced-btn{margin-left:10px}.kui-search-panel{display:flex}.kui-search-bar{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;z-index:10}.kui-search-bar:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu .kui-menu-header{background-color:#f9f9f9;border-top-left-radius:4px;border-top-right-radius:4px;display:inline-block;height:48px;width:100%}.kui-menu .kui-menu-header .kui-menu-title{float:left;font-size:14px;font-weight:400;margin-top:4px;padding:12px}.kui-menu .kui-menu-header .kui-menu-action{float:right;margin:4px}.kui-menu.extended-search{min-height:680px;width:680px;z-index:20}.extended-search-box{margin:12px}@media screen and (max-width:1024px){.kui-search-bar{width:480px}.kui-search-bar div.input-field input{width:calc(480px - 80px)}.fulltext-search,.kui-menu.extended-search{width:480px}}@media screen and (max-width:768px){.kui-search-bar{width:calc(480px - 160px)}.kui-search-bar div.input-field input{width:calc(480px - 160px - 80px)}.fulltext-search,.kui-menu.extended-search{width:calc(480px - 80px)}}"],animations:[r.trigger("extendedSearchMenu",[r.state("inactive",r.style({display:"none"})),r.state("active",r.style({display:"block"})),r.transition("inactive => active",r.animate("100ms ease-in")),r.transition("active => inactive",r.animate("100ms ease-out"))])]}]}],e.ctorParameters=function(){return[]},e.propDecorators={route:[{type:a.Input}]},e}(),y=function(){function e(e,t){this._route=e,this._router=t,this.route="/search",this.showSimpleSearch=!0,this.searchPanelFocus=!1,this.prevSearch=JSON.parse(localStorage.getItem("prevSearch")),this.focusOnSimple="inactive",this.searchLabel="Search"}return e.prototype.ngOnInit=function(){},e.prototype.onKey=function(e,t){this.focusOnSimple="active",this.prevSearch=JSON.parse(localStorage.getItem("prevSearch")),!this.searchQuery||"Enter"!==t.key&&13!==t.keyCode&&13!==t.which||this.doSearch(e),"Escape"!==t.key&&27!==t.keyCode&&27!==t.which||this.resetSearch(e)},e.prototype.doSearch=function(e){var t,r;if(this.searchQuery!==undefined&&null!==this.searchQuery){this.toggleMenu(),this._router.navigate([this.route+"/fulltext/"+this.searchQuery]);var o=JSON.parse(localStorage.getItem("prevSearch"));null===o&&(o=[]);var n=0;try{for(var a=h(o),i=a.next();!i.done;i=a.next()){var s=i.value;this.searchQuery===s&&o.splice(n,1),n++}}catch(c){t={error:c}}finally{try{i&&!i.done&&(r=a["return"])&&r.call(a)}finally{if(t)throw t.error}}o.push(this.searchQuery),localStorage.setItem("prevSearch",JSON.stringify(o))}else e.focus(),this.prevSearch=JSON.parse(localStorage.getItem("prevSearch"))},e.prototype.resetSearch=function(e){this.searchQuery=null,e.focus(),this.focusOnSimple="inactive",this.searchPanelFocus=!this.searchPanelFocus},e.prototype.toggleMenu=function(){this.prevSearch=JSON.parse(localStorage.getItem("prevSearch")),this.focusOnSimple="active"===this.focusOnSimple?"inactive":"active",this.showSimpleSearch=!0},e.prototype.setFocus=function(){this.prevSearch=JSON.parse(localStorage.getItem("prevSearch")),this.focusOnSimple="active",this.searchPanelFocus=!this.searchPanelFocus},e.prototype.doPrevSearch=function(e){this.searchQuery=e,this._router.navigate([this.route+"/fulltext/"+e],{relativeTo:this._route}),this.toggleMenu()},e.prototype.resetPrevSearch=function(e){if(void 0===e&&(e=null),e){var t=this.prevSearch.indexOf(e);this.prevSearch.splice(t,1),localStorage.setItem("prevSearch",JSON.stringify(this.prevSearch))}else localStorage.removeItem("prevSearch");this.prevSearch=JSON.parse(localStorage.getItem("prevSearch"))},e.decorators=[{type:a.Component,args:[{selector:"kui-fulltext-search",template:'<div class="search-bar-elements">\n\n    <div class="fulltext-search-bar" [class.active]="searchPanelFocus">\n        <div>\n            <button class="prefix" (click)="doSearch(search)">\n                <mat-icon>search</mat-icon>\n            </button>\n        </div>\n\n        <div class="input-field">\n            <input #search autocomplete="off" type="search" [placeholder]="searchLabel" [(ngModel)]="searchQuery" name="search" (keyup.esc)="resetSearch(search)" (keyup)="onKey(search, $event)" (click)="setFocus()" (focus)="toggleMenu()" />\n        </div>\n\n        \x3c!-- switch button: on some focus we need a close button for the simple --\x3e\n        <div>\n            <button class="suffix" *ngIf="focusOnSimple === \'active\'" (click)="resetSearch(search)">\n                <mat-icon>close</mat-icon>\n            </button>\n            <button class="suffix" *ngIf="focusOnSimple === \'inactive\'"></button>\n        </div>\n\n        \x3c!-- "dropdown" menu for simple search --\x3e\n        <div class="kui-menu simple-search" [@fulltextSearchMenu]="focusOnSimple" *ngIf="showSimpleSearch">\n            <mat-list class="kui-previous-search-list">\n                <mat-list-item *ngFor="let item of prevSearch | kuiReverse; let i=index">\n                    <h4 mat-line *ngIf="i<10" (click)="doPrevSearch(item)">{{item}}</h4>\n                    <button mat-icon-button (click)="resetPrevSearch(item)">\n                        <mat-icon aria-label="close">close</mat-icon>\n                    </button>\n                </mat-list-item>\n            </mat-list>\n            <button mat-stroked-button color="accent" class="right" (click)="resetPrevSearch()" *ngIf="prevSearch">Clear</button>\n        </div>\n\n    </div>\n</div>',styles:["input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{display:none}input[type=search]{-moz-appearance:none;-webkit-appearance:none}.full-width{width:100%}.close{right:12px}.hide{display:none}.show{display:block}.search-bar-elements{display:flex}.inactive{color:#7a7a7a}.fulltext-search-bar{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;width:680px;z-index:10}.fulltext-search-bar:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.fulltext-search-bar div.input-field{flex:1}.fulltext-search-bar div.input-field input{border-style:none;font-size:14pt;height:38px;position:absolute;width:calc(100% - 80px)}.fulltext-search-bar div.input-field input:active,.fulltext-search-bar div.input-field input:focus{outline:0}.fulltext-search-bar div .prefix,.fulltext-search-bar div .suffix{background-color:#fff;border-radius:3px;border-style:none;color:rgba(41,41,41,.4);cursor:pointer;height:38px;outline:0;position:relative;width:40px}.fulltext-search-bar div .prefix:active,.fulltext-search-bar div .suffix:active{color:#515151}.fulltext-search-bar div.active{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu.simple-search{min-height:680px;width:680px;padding-top:60px;z-index:-1}.kui-menu.simple-search .kui-previous-search-list .mat-list-item{cursor:pointer}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover{background-color:#f9f9f9}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover mat-icon{display:block}.kui-menu.simple-search .kui-previous-search-list .mat-list-item mat-icon{display:none}.kui-menu.simple-search .right{margin-top:12px;margin-left:16px}@media screen and (max-width:1024px){.fulltext-search-bar{width:480px}.fulltext-search-bar div.input-field input{width:calc(480px - 80px)}.kui-menu.simple-search{width:480px}}@media screen and (max-width:768px){.fulltext-search-bar{width:calc(480px - 160px)}.fulltext-search-bar div.input-field input{width:calc(480px - 160px - 80px)}.kui-menu.simple-search{width:calc(480px - 80px)}}"],animations:[r.trigger("fulltextSearchMenu",[r.state("inactive",r.style({display:"none"})),r.state("active",r.style({display:"block"})),r.transition("inactive => active",r.animate("100ms ease-in")),r.transition("active => inactive",r.animate("100ms ease-out"))])]}]}],e.ctorParameters=function(){return[{type:t.ActivatedRoute},{type:t.Router}]},e.propDecorators={route:[{type:a.Input}]},e}(),v=function(){function e(e,t,r,o,n){this.fb=e,this._route=t,this._router=r,this._cacheService=o,this._gravSearchService=n,this.toggleExtendedSearchForm=new a.EventEmitter,this.ontologies=[],this.activeProperties=[],this.resourceClasses=[],this.result=new i.ReadResourcesSequence([],0),this.formValid=!1}return e.prototype.ngOnInit=function(){var t=this;this.form=this.fb.group({}),this.form.statusChanges.subscribe(function(e){t.formValid=t.validateForm()}),this.initializeOntologies()},e.prototype.addProperty=function(){this.activeProperties.push(!0)},e.prototype.removeProperty=function(){this.activeProperties.splice(-1,1)},e.prototype.initializeOntologies=function(){var t=this;this._cacheService.getOntologiesMetadata().subscribe(function(e){t.ontologies=e})},e.prototype.getResourceClassesAndPropertiesForOntology=function(e){var t=this;this.activeResourceClass=undefined,this.activeProperties=[],this.activeOntology=e,this._cacheService.getEntityDefinitionsForOntologies([e]).subscribe(function(e){t.resourceClasses=e.getResourceClassesAsArray(),t.properties=e.getProperties()})},e.prototype.getPropertiesForResourceClass=function(t){var r=this;this.activeProperties=[],null===t?this.getResourceClassesAndPropertiesForOntology(this.activeOntology):this._cacheService.getResourceClassDefinitions([t]).subscribe(function(e){r.properties=e.getProperties(),r.activeResourceClass=e.getResourceClasses()[t]})},e.prototype.validateForm=function(){return this.form.valid&&(0<this.propertyComponents.length||this.resourceClassComponent!==undefined&&!1!==this.resourceClassComponent.getResourceClassSelected())},e.prototype.resetForm=function(){this.activeOntology!==undefined&&this.getResourceClassesAndPropertiesForOntology(this.activeOntology)},e.prototype.submit=function(){if(this.formValid){var e,t=this.resourceClassComponent.getResourceClassSelected();!1!==t&&(e=t);var r=this.propertyComponents.map(function(e){return e.getPropertySelectedWithValue()}),o=this._gravSearchService.createGravsearchQuery(r,e,0);this._router.navigate([this.route+"/extended/",o],{relativeTo:this._route}),this.toggleExtendedSearchForm.emit(!0)}},e.decorators=[{type:a.Component,args:[{selector:"kui-extended-search",template:'<form [formGroup]="form" (ngSubmit)="submit()">\n\n  <div>\n    <kui-select-ontology *ngIf="ontologies.length > 0" [formGroup]="form" [ontologies]="ontologies" (ontologySelected)="getResourceClassesAndPropertiesForOntology($event)"></kui-select-ontology>\n  </div>\n\n  <div class="select-resource-class" *ngIf="resourceClasses?.length > 0">\n    <kui-select-resource-class #resourceClass [formGroup]="form" [resourceClasses]="resourceClasses" (resourceClassSelectedEvent)="getPropertiesForResourceClass($event)"></kui-select-resource-class>\n  </div>\n\n  <div class="select-property" *ngIf="properties !== undefined">\n    <div *ngFor="let prop of activeProperties; let i = index">\n\n      <kui-select-property #property [activeResourceClass]="activeResourceClass" [formGroup]="form" [index]="i" [properties]="properties"></kui-select-property>\n\n    </div>\n  </div>\n\n\n  <div>\n    <button mat-mini-fab class="property-buttons add-property-button" color="primary" type="button" (click)="addProperty()" [disabled]="activeOntology === undefined || activeProperties.length >= 4">\n      <mat-icon aria-label="add a property">add</mat-icon>\n    </button>\n\n    <button mat-mini-fab class="property-buttons remove-property-button" color="primary" type="button" (click)="removeProperty()" [disabled]="activeProperties.length == 0">\n      <mat-icon aria-label="remove property">remove</mat-icon>\n    </button>\n  </div>\n\n  \x3c!--  <div>\n    <button mat-icon-button type="button" (click)="resetForm()" [disabled]="this.activeOntology === undefined">\n      <mat-icon aria-label="reset query form">clear</mat-icon>\n    </button>\n\n    <button mat-icon-button type="submit" [disabled]="!formValid">\n      <mat-icon aria-label="submit query">send</mat-icon>\n    </button>\n  </div> --\x3e\n\n  <button class="extended-buttons extended-search-button" mat-stroked-button color="primary" type="submit" [disabled]="!formValid">\n    Search\n  </button>\n  <button class="extended-buttons reset" mat-stroked-button type="button" (click)="resetForm()" [disabled]="this.activeOntology === undefined">\n    Reset\n  </button>\n\n\n</form>\n',styles:[".add-property-button{margin-right:5px}.extended-buttons{margin-top:25px}.extended-search-button{margin-right:5px}.property-buttons{margin-top:25px}.select-property{margin-left:22px}.select-resource-class{margin-left:12px}"]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]},{type:t.ActivatedRoute},{type:t.Router},{type:i.OntologyCacheService},{type:i.GravsearchGenerationService}]},e.propDecorators={route:[{type:a.Input}],toggleExtendedSearchForm:[{type:a.Output}],resourceClassComponent:[{type:a.ViewChild,args:["resourceClass"]}],propertyComponents:[{type:a.ViewChildren,args:["property"]}]},e}(),g=function(){function e(e){this.fb=e,this.ontologySelected=new a.EventEmitter}return e.prototype.ngOnInit=function(){var t=this;this.form=this.fb.group({ontology:[null,o.Validators.required]}),this.form.valueChanges.subscribe(function(e){t.ontologySelected.emit(e.ontology)}),this.formGroup.addControl("ontology",this.form)},e.decorators=[{type:a.Component,args:[{selector:"kui-select-ontology",template:'<mat-form-field *ngIf="ontologies.length > 0">\n  <mat-select placeholder="Ontology" [formControl]="form.controls[\'ontology\']">\n      <mat-option *ngFor="let onto of ontologies" [value]="onto.id">{{ onto.label }}</mat-option>\n  </mat-select>\n</mat-form-field>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}],ontologies:[{type:a.Input}],ontologySelected:[{type:a.Output}]},e}(),b=Promise.resolve(null),x=function(){function e(e){this.fb=e}return Object.defineProperty(e.prototype,"properties",{get:function(){return this._properties},set:function(e){this.propertySelected=undefined,this._properties=e,this.updatePropertiesArray()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"activeResourceClass",{set:function(e){this._activeResourceClass=e},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var r=this;this.form=this.fb.group({property:[null,o.Validators.required],isSortCriterion:[!1,o.Validators.required]}),this.form.valueChanges.subscribe(function(e){var t=e.property;r.propertySelected=r._properties[t]}),b.then(function(){r.propIndex="property"+r.index,r.formGroup.addControl(r.propIndex,r.form)})},e.prototype.ngOnDestroy=function(){var e=this;b.then(function(){e.formGroup.removeControl(e.propIndex)})},e.prototype.sortCriterion=function(){var t=this;return this._activeResourceClass!==undefined&&this.propertySelected!==undefined&&!this.propertySelected.isLinkProperty&&1===this._activeResourceClass.cardinalities.filter(function(e){return e.property===t.propertySelected.id&&1===e.value&&(e.occurrence===i.CardinalityOccurrence.card||e.occurrence===i.CardinalityOccurrence.maxCard)}).length},e.prototype.updatePropertiesArray=function(){var e=[];for(var t in this._properties)if(this._properties.hasOwnProperty(t)){var r=this._properties[t];r.isEditable&&!r.isLinkValueProperty&&e.push(this._properties[t])}this.propertiesAsArray=e},e.prototype.getPropertySelectedWithValue=function(){var e=this.specifyPropertyValue.getComparisonOperatorAndValueLiteralForProperty(),t=!1;return this.propertySelected.isLinkProperty||(t=this.form.value.isSortCriterion),new i.PropertyWithValue(this.propertySelected,e,t)},e.decorators=[{type:a.Component,args:[{selector:"kui-select-property",template:'<mat-form-field class="search-property-field" *ngIf="propertiesAsArray?.length > 0">\n  <mat-select placeholder="Properties" [formControl]="form.controls[\'property\']">\n    <mat-option *ngFor="let prop of propertiesAsArray" [value]="prop.id">{{ prop.label }}</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<kui-specify-property-value #specifyPropertyValue [formGroup]="form" *ngIf="propertySelected !== undefined" [property]="propertySelected"></kui-specify-property-value>\n\n<mat-checkbox matTooltip="Sort criterion" *ngIf="propertySelected !== undefined && sortCriterion()" [formControl]="form.controls[\'isSortCriterion\']"></mat-checkbox>',styles:[".search-property-field{margin-right:8px}"]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}],index:[{type:a.Input}],properties:[{type:a.Input}],activeResourceClass:[{type:a.Input}],specifyPropertyValue:[{type:a.ViewChild,args:["specifyPropertyValue"]}]},e}(),C=Promise.resolve(null),S=function(){function e(e){this.fb=e,this.KnoraConstants=i.KnoraConstants,this.comparisonOperators=[]}return Object.defineProperty(e.prototype,"property",{get:function(){return this._property},set:function(e){this.comparisonOperatorSelected=undefined,this._property=e,this.resetComparisonOperators()},enumerable:!0,configurable:!0}),e.prototype.resetComparisonOperators=function(){switch(this._property.isLinkProperty?this.propertyValueType=i.KnoraConstants.Resource:this.propertyValueType=this._property.objectType,this.propertyValueType){case i.KnoraConstants.TextValue:this.comparisonOperators=[new i.Like,new i.Match,new i.Equals,new i.NotEquals,new i.Exists];break;case i.KnoraConstants.BooleanValue:case i.KnoraConstants.Resource:case i.KnoraConstants.UriValue:case i.KnoraConstants.IntervalValue:this.comparisonOperators=[new i.Equals,new i.NotEquals,new i.Exists];break;case i.KnoraConstants.IntValue:case i.KnoraConstants.DecimalValue:case i.KnoraConstants.DateValue:this.comparisonOperators=[new i.Equals,new i.NotEquals,new i.LessThan,new i.LessThanEquals,new i.GreaterThan,new i.GreaterThanEquals,new i.Exists];break;case i.KnoraConstants.ListValue:case i.KnoraConstants.GeomValue:case i.KnoraConstants.FileValue:case i.KnoraConstants.AudioFileValue:case i.KnoraConstants.StillImageFileValue:case i.KnoraConstants.DDDFileValue:case i.KnoraConstants.MovingImageFileValue:case i.KnoraConstants.TextFileValue:case i.KnoraConstants.ColorValue:this.comparisonOperators=[new i.Exists];break;default:console.log("ERROR: Unsupported value type "+this._property.objectType)}},e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(){var t=this;this.form=this.fb.group({comparisonOperator:[null,o.Validators.required]}),this.form.valueChanges.subscribe(function(e){t.comparisonOperatorSelected=e.comparisonOperator}),C.then(function(){t.formGroup.removeControl("comparisonOperator"),t.formGroup.addControl("comparisonOperator",t.form)})},e.prototype.getComparisonOperatorAndValueLiteralForProperty=function(){var e;return"Exists"!==this.comparisonOperatorSelected.getClassName()&&(e=this.propertyValueComponent.getValue()),new i.ComparisonOperatorAndValue(this.comparisonOperatorSelected,e)},e.decorators=[{type:a.Component,args:[{selector:"kui-specify-property-value",template:'<mat-form-field class="search-operator-field" *ngIf="comparisonOperators?.length > 0">\n    <mat-select placeholder="Comparison Operator" [formControl]="form.controls[\'comparisonOperator\']">\n        <mat-option *ngFor="let compOp of comparisonOperators" [value]="compOp">{{ compOp.label }}</mat-option>\n    </mat-select>\n</mat-form-field>\n\n\x3c!-- select apt component for value specification using a switch case statement--\x3e\n<span\n    *ngIf="comparisonOperatorSelected !== undefined && comparisonOperatorSelected !== null && comparisonOperatorSelected.getClassName() != \'Exists\'"\n    [ngSwitch]="propertyValueType">\n  <boolean-value #propertyValue [formGroup]="form" *ngSwitchCase="KnoraConstants.BooleanValue"></boolean-value>\n  <date-value #propertyValue [formGroup]="form" *ngSwitchCase="KnoraConstants.DateValue"></date-value>\n  <decimal-value #propertyValue [formGroup]="form" *ngSwitchCase="KnoraConstants.DecimalValue"></decimal-value>\n  <integer-value #propertyValue [formGroup]="form" *ngSwitchCase="KnoraConstants.IntValue"></integer-value>\n  <link-value #propertyValue [formGroup]="form" [restrictResourceClass]="property.objectType"\n              *ngSwitchCase="KnoraConstants.Resource"></link-value>\n  <text-value #propertyValue [formGroup]="form" *ngSwitchCase="KnoraConstants.TextValue"></text-value>\n  <uri-value #propertyValue [formGroup]="form" *ngSwitchCase="KnoraConstants.UriValue"></uri-value>\n\n    \x3c!-- TODO: Resource: handle linking properties with target class restriction: access property member to get objectClass via property() getter method --\x3e\n  <span *ngSwitchDefault="">Not supported {{propertyValueType}}</span>\n</span>\n',styles:[".search-operator-field{margin-right:8px}"]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}],propertyValueComponent:[{type:a.ViewChild,args:["propertyValue"]}],property:[{type:a.Input}]},e}(),k=Promise.resolve(null),w=function(){function e(e){this.fb=e,this.type=i.KnoraConstants.BooleanValue}return e.prototype.ngOnInit=function(){var e=this;this.form=this.fb.group({booleanValue:[!1,o.Validators.compose([o.Validators.required])]}),k.then(function(){e.formGroup.addControl("propValue",e.form)})},e.prototype.ngOnDestroy=function(){var e=this;k.then(function(){e.formGroup.removeControl("propValue")})},e.prototype.getValue=function(){return new i.ValueLiteral(String(this.form.value.booleanValue),i.KnoraConstants.xsdBoolean)},e.decorators=[{type:a.Component,args:[{selector:"boolean-value",template:"<mat-checkbox [formControl]=\"form.controls['booleanValue']\"></mat-checkbox>\n",styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}]},e}(),V=function(){function e(e,t,r){this._calendar=e,this._dateAdapter=t,this.fb=r,this.supportedCalendarFormats=n.JDNConvertibleCalendar.supportedCalendars}return e.prototype.ngOnInit=function(){var t=this;this._dateAdapter instanceof c.JDNConvertibleCalendarDateAdapter?this.activeFormat=this._dateAdapter.activeCalendarFormat:console.log("date adapter is expected to be an instance of JDNConvertibleCalendarDateAdapter"),this.form=this.fb.group({calendar:[this.activeFormat,o.Validators.required]}),this.form.valueChanges.subscribe(function(e){t.convertDate(e.calendar)})},e.prototype.convertDate=function(e){if(this._dateAdapter instanceof c.JDNConvertibleCalendarDateAdapter){var t=this._dateAdapter.convertCalendarFormat(this._calendar.activeDate,e);this._calendar.activeDate=t,this._calendar._dateSelected(t),("month"===this._calendar.currentView?this._calendar.monthView:"year"===this._calendar.currentView?this._calendar.yearView:this._calendar.multiYearView).ngAfterContentInit()}else console.log("date adapter is expected to be an instance of JDNConvertibleCalendarDateAdapter")},e.decorators=[{type:a.Component,args:[{selector:"kui-calendar-header",template:'\n      <mat-select placeholder="Calendar Format" [formControl]="form.controls[\'calendar\']">\n        <mat-option *ngFor="let cal of supportedCalendarFormats" [value]="cal">{{cal}}</mat-option>\n      </mat-select>\n      <mat-calendar-header></mat-calendar-header>\n    ',styles:[]}]}],e.ctorParameters=function(){return[{type:s.MatCalendar,decorators:[{type:a.Host}]},{type:s.DateAdapter},{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e}(),O=Promise.resolve(null),I=function(){function e(e){this.fb=e,this.type=i.KnoraConstants.DateValue,this.headerComponent=V}return e.prototype.ngOnInit=function(){var e=this;this.form=this.fb.group({dateValue:[null,o.Validators.compose([o.Validators.required])]}),this.form.valueChanges.subscribe(function(e){}),O.then(function(){e.formGroup.addControl("propValue",e.form)})},e.prototype.ngOnDestroy=function(){var e=this;O.then(function(){e.formGroup.removeControl("propValue")})},e.prototype.getValue=function(){var e=this.form.value.dateValue,t=e.calendarName,r=e.toCalendarPeriod(),o=t.toUpperCase()+":"+r.periodStart.year+"-"+r.periodStart.month+"-"+r.periodStart.day+":"+r.periodEnd.year+"-"+r.periodEnd.month+"-"+r.periodEnd.day;return new i.ValueLiteral(String(o),i.KnoraConstants.DateValue)},e.decorators=[{type:a.Component,args:[{selector:"date-value",template:'<mat-form-field>\n    <kuiJdnDatepicker>\n        <input matInput [matDatepicker]="picker" placeholder="Choose a date" [formControl]="form.controls[\'dateValue\']">\n        <mat-datepicker #picker [calendarHeaderComponent]="headerComponent"></mat-datepicker>\n    </kuiJdnDatepicker>\n    <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n</mat-form-field>',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}]},e}(),P=Promise.resolve(null),F=function(){function e(e){this.fb=e,this.type=i.KnoraConstants.DecimalValue}return e.prototype.ngOnInit=function(){var e=this;this.form=this.fb.group({decimalValue:[null,o.Validators.compose([o.Validators.required])]}),P.then(function(){e.formGroup.addControl("propValue",e.form)})},e.prototype.ngOnDestroy=function(){var e=this;P.then(function(){e.formGroup.removeControl("propValue")})},e.prototype.getValue=function(){return new i.ValueLiteral(String(this.form.value.decimalValue),i.KnoraConstants.xsdDecimal)},e.decorators=[{type:a.Component,args:[{selector:"decimal-value",template:'<mat-form-field>\n    <input matInput [formControl]="form.controls[\'decimalValue\']" placeholder="Decimal value" value="" type="number">\n</mat-form-field>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}]},e}(),M=Promise.resolve(null),D=function(){function e(e){this.fb=e,this.type=i.KnoraConstants.IntValue}return e.prototype.ngOnInit=function(){var e=this;this.form=this.fb.group({integerValue:[null,o.Validators.compose([o.Validators.required,o.Validators.pattern(/^-?\d+$/)])]}),M.then(function(){e.formGroup.addControl("propValue",e.form)})},e.prototype.ngOnDestroy=function(){var e=this;M.then(function(){e.formGroup.removeControl("propValue")})},e.prototype.getValue=function(){return new i.ValueLiteral(String(this.form.value.integerValue),i.KnoraConstants.xsdInteger)},e.decorators=[{type:a.Component,args:[{selector:"integer-value",template:'<mat-form-field>\n    <input matInput [formControl]="form.controls[\'integerValue\']" placeholder="Integer value" value="" type="number">\n</mat-form-field>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}]},e}(),R=require("jsonld"),_=Promise.resolve(null),E=function(){function e(e,t,r){this.fb=e,this._searchService=t,this._cacheService=r,this.type=i.KnoraConstants.LinkValue}return Object.defineProperty(e.prototype,"restrictResourceClass",{get:function(){return this._restrictToResourceClass},set:function(e){this._restrictToResourceClass=e},enumerable:!0,configurable:!0}),e.prototype.displayResource=function(e){if(null!==e)return e.label},e.prototype.searchByLabel=function(e){var r=this;3<=e.length?this._searchService.searchByLabel(e,this._restrictToResourceClass).subscribe(function(e){R.promises.compact(e.body,{}).then(function(e){var t=i.ConvertJSONLD.createReadResourcesSequenceFromJsonLD(e);r.resources=t.resources},function(e){console.log("JSONLD of full resource request could not be expanded:"+e)})}):this.resources=undefined},e.prototype.validateResource=function(e){return e.value instanceof i.ReadResource?null:{noResource:{value:e.value}}},e.prototype.ngOnInit=function(){var t=this;this.form=this.fb.group({resource:[null,o.Validators.compose([o.Validators.required,this.validateResource])]}),this.form.valueChanges.subscribe(function(e){t.searchByLabel(e.resource)}),_.then(function(){t.formGroup.addControl("propValue",t.form)})},e.prototype.ngOnDestroy=function(){var e=this;_.then(function(){e.formGroup.removeControl("propValue")})},e.prototype.getValue=function(){return new i.IRI(this.form.value.resource.id)},e.decorators=[{type:a.Component,args:[{selector:"link-value",template:'<mat-form-field>\n    <input matInput placeholder="resource" aria-label="resource" [matAutocomplete]="auto" [formControl]="form.controls[\'resource\']">\n    <mat-autocomplete #auto="matAutocomplete" [displayWith]="displayResource">\n        <mat-option *ngFor="let res of resources" [value]="res">\n            {{res?.label}}\n        </mat-option>\n    </mat-autocomplete>\n</mat-form-field>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]},{type:i.SearchService},{type:i.OntologyCacheService}]},e.propDecorators={formGroup:[{type:a.Input}],restrictResourceClass:[{type:a.Input}]},e}(),G=Promise.resolve(null),K=function(){function e(e){this.fb=e,this.type=i.KnoraConstants.TextValue}return e.prototype.ngOnInit=function(){var e=this;this.form=this.fb.group({textValue:[null,o.Validators.required]}),G.then(function(){e.formGroup.addControl("propValue",e.form)})},e.prototype.ngOnDestroy=function(){var e=this;G.then(function(){e.formGroup.removeControl("propValue")})},e.prototype.getValue=function(){return new i.ValueLiteral(String(this.form.value.textValue),i.KnoraConstants.xsdString)},e.decorators=[{type:a.Component,args:[{selector:"text-value",template:'<mat-form-field>\n    <input matInput [formControl]="form.controls[\'textValue\']" placeholder="text value" value="">\n</mat-form-field>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}]},e}(),A=Promise.resolve(null),q=function(){function e(e){this.fb=e,this.type=i.KnoraConstants.UriValue}return e.prototype.ngOnInit=function(){var e=this;this.form=this.fb.group({uriValue:[null,o.Validators.compose([o.Validators.required,o.Validators.pattern(i.Utils.RegexUrl)])]}),A.then(function(){e.formGroup.addControl("propValue",e.form)})},e.prototype.ngOnDestroy=function(){var e=this;A.then(function(){e.formGroup.removeControl("propValue")})},e.prototype.getValue=function(){return new i.ValueLiteral(String(this.form.value.uriValue),i.KnoraConstants.xsdUri)},e.decorators=[{type:a.Component,args:[{selector:"uri-value",template:'<mat-form-field>\n    <input matInput [formControl]="form.controls[\'uriValue\']" placeholder="URI" value="">\n</mat-form-field>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}]},e}(),B=Promise.resolve(null),N=function(){function e(e){this.fb=e,this.resourceClassSelectedEvent=new a.EventEmitter}return Object.defineProperty(e.prototype,"resourceClasses",{get:function(){return this._resourceClasses},set:function(e){this.resourceClassSelected=undefined,this._resourceClasses=e},enumerable:!0,configurable:!0}),e.prototype.getResourceClassSelected=function(){return this.resourceClassSelected!==undefined&&null!==this.resourceClassSelected&&this.resourceClassSelected},e.prototype.initForm=function(){var t=this;this.form=this.fb.group({resourceClass:[null]}),this.form.valueChanges.subscribe(function(e){t.resourceClassSelected=e.resourceClass,t.resourceClassSelectedEvent.emit(t.resourceClassSelected)})},e.prototype.ngOnInit=function(){this.initForm(),this.formGroup.addControl("resourceClass",this.form)},e.prototype.ngOnChanges=function(){var e=this;this.form!==undefined&&B.then(function(){e.formGroup.removeControl("resourceClass"),e.initForm(),e.formGroup.addControl("resourceClass",e.form)})},e.decorators=[{type:a.Component,args:[{selector:"kui-select-resource-class",template:'<mat-form-field *ngIf="resourceClasses.length > 0">\n  <mat-select placeholder="Resource Class" [formControl]="form.controls[\'resourceClass\']">\n    <mat-option [value]="null">no selection</mat-option>\n    \x3c!-- undo selection of a resource class --\x3e\n    <mat-option *ngFor="let resourceClass of resourceClasses" [value]="resourceClass.id">{{ resourceClass.label }}</mat-option>\n  </mat-select>\n</mat-form-field>',styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder,decorators:[{type:a.Inject,args:[o.FormBuilder]}]}]},e.propDecorators={formGroup:[{type:a.Input}],resourceClasses:[{type:a.Input}],resourceClassSelectedEvent:[{type:a.Output}]},e}(),j=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[l.CommonModule,u.BrowserAnimationsModule,s.MatAutocompleteModule,s.MatButtonModule,s.MatCheckboxModule,s.MatDatepickerModule,s.MatFormFieldModule,s.MatInputModule,s.MatIconModule,s.MatListModule,s.MatSelectModule,s.MatTooltipModule,o.FormsModule,o.ReactiveFormsModule,i.KuiCoreModule,p.KuiActionModule,d.KuiViewerModule,c.MatJDNConvertibleCalendarDateAdapterModule],declarations:[m,g,v,N,x,S,w,I,F,D,E,K,q,V,y,f],exports:[m,f,y,v,I],entryComponents:[V]}]}],e}();e.SearchComponent=m,e.SearchPanelComponent=f,e.FulltextSearchComponent=y,e.ExtendedSearchComponent=v,e.SelectOntologyComponent=g,e.SelectPropertyComponent=x,e.SpecifyPropertyValueComponent=S,e.BooleanValueComponent=w,e.DateValueComponent=I,e.HeaderComponent=V,e.DecimalValueComponent=F,e.IntegerValueComponent=D,e.LinkValueComponent=E,e.TextValueComponent=K,e.UriValueComponent=q,e.SelectResourceClassComponent=N,e.KuiSearchModule=j,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=knora-search.umd.min.js.map