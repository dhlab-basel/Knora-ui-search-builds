{"version":3,"file":"knora-search.umd.js.map","sources":[null,"ng://@knora/search/lib/search.component.ts","ng://@knora/search/lib/search-panel/search-panel.component.ts","ng://@knora/search/lib/fulltext-search/fulltext-search.component.ts","ng://@knora/search/lib/extended-search/extended-search.component.ts","ng://@knora/search/lib/extended-search/select-ontology/select-ontology.component.ts","ng://@knora/search/lib/extended-search/select-property/select-property.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/specify-property-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/boolean-value/boolean-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/date-value/header-calendar/header-calendar.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/date-value/date-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/decimal-value/decimal-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/integer-value/integer-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/link-value/link-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/text-value/text-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/uri-value/uri-value.component.ts","ng://@knora/search/lib/extended-search/select-resource-class/select-resource-class.component.ts","ng://@knora/search/lib/search.module.ts","ng://@knora/search/public_api.ts","ng://@knora/search/knora-search.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    animate,\n    state,\n    style,\n    transition,\n    trigger\n} from '@angular/animations';\n\n@Component({\n    selector: 'kui-search',\n    template: `<div class=\"search-bar-elements\">\n\n    <!-- the next element - div.extended-search-panel - is a hidden dropdown filter menu -->\n\n    <div class=\"search-panel\" [class.active]=\"searchPanelFocus\">\n        <div>\n            <button class=\"prefix\" (click)=\"doSearch(search)\">\n                <mat-icon>search</mat-icon>\n            </button>\n        </div>\n\n        <div class=\"input-field\">\n            <input #search autocomplete=\"off\" type=\"search\" [placeholder]=\"searchLabel\" [(ngModel)]=\"searchQuery\" name=\"search\" (keyup.esc)=\"resetSearch(search)\" (keyup)=\"onKey(search, $event)\" (click)=\"setFocus()\" (focus)=\"toggleMenu('simpleSearch')\" [disabled]=\"focusOnExtended === 'active'\" />\n        </div>\n\n        <!-- switch button: on some focus we need a close button for the simple or extended panel -->\n        <div>\n            <button class=\"suffix\" *ngIf=\"focusOnSimple === 'active'\" (click)=\"resetSearch(search)\">\n                <mat-icon>close</mat-icon>\n            </button>\n            <button class=\"suffix\" *ngIf=\"focusOnSimple === 'inactive'\">\n            </button>\n        </div>\n\n        <!-- the search panel has two \"dropdown\" menus: one for simple search and another one for the extended search -->\n        <div class=\"kui-menu simple-search\" [@simpleSearchMenu]=\"focusOnSimple\" *ngIf=\"showSimpleSearch\">\n            <mat-list class=\"kui-previous-search-list\">\n                <mat-list-item *ngFor=\"let item of prevSearch | kuiReverse; let i=index\">\n                    <h4 mat-line *ngIf=\"i<10\" (click)=\"doPrevSearch(item)\">{{item}}</h4>\n                    <button mat-icon-button (click)=\"resetPrevSearch(item)\">\n                        <mat-icon aria-label=\"close\">close</mat-icon>\n                    </button>\n                </mat-list-item>\n            </mat-list>\n            <button mat-stroked-button color=\"accent\" class=\"right\" (click)=\"resetPrevSearch()\" *ngIf=\"prevSearch\">Clear</button>\n        </div>\n\n        <div class=\"kui-menu extended-search\" [@extendedSearchMenu]=\"focusOnExtended\">\n            <div class=\"kui-menu-header\">\n                <span class=\"kui-menu-title\">\n                    <h4>Advanced search</h4>\n                </span>\n                <span class=\"kui-menu-action\">\n                    <button mat-icon-button (click)=\"toggleMenu('extendedSearch')\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </span>\n            </div>\n            <div class=\"extended-search-box\">\n                <kui-extended-search [route]=\"route\" (toggleExtendedSearchForm)=\"toggleMenu('extendedSearch')\"></kui-extended-search>\n            </div>\n        </div>\n    </div>\n\n    <!-- Extended search button to display the extended search form in the search panel -->\n    <button mat-button type=\"button\" color=\"primary\" class=\"advanced-search-button\" (click)=\"toggleMenu('extendedSearch')\">\n        advanced\n    </button>\n\n</div>`,\n    styles: [`input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{display:none}input[type=search]{-moz-appearance:none;-webkit-appearance:none}.center{display:block;margin-left:auto;margin-right:auto}.close{right:12px}.extended-search-box{margin:12px}.advanced-search-button{margin-left:10px}.full-width{width:100%}.hide{display:none}.inactive,.mute{color:#7a7a7a}.search-panel{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;width:680px;z-index:10}.search-panel:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.search-panel div.input-field{flex:1}.search-panel div.input-field input{border-style:none;font-size:14pt;height:38px;position:absolute;width:calc(100% - 80px)}.search-panel div.input-field input:active,.search-panel div.input-field input:focus{outline:0}.search-panel div .prefix,.search-panel div .suffix{background-color:#fff;border-radius:3px;border-style:none;color:rgba(41,41,41,.4);cursor:pointer;height:38px;outline:0;position:relative;width:40px}.search-panel div .prefix:active,.search-panel div .suffix:active{color:#515151}.search-panel.active{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu .kui-menu-header{background-color:#f9f9f9;border-top-left-radius:4px;border-top-right-radius:4px;display:inline-block;height:48px;width:100%}.kui-menu .kui-menu-header .kui-menu-title{float:left;font-size:14px;font-weight:400;margin-top:4px;padding:12px}.kui-menu .kui-menu-header .kui-menu-action{float:right;margin:4px}.kui-menu.extended-search,.kui-menu.simple-search{min-height:680px;width:680px}.kui-menu.simple-search{padding-top:60px;z-index:-1}.kui-menu.simple-search .kui-previous-search-list .mat-list-item{cursor:pointer}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover{background-color:#f9f9f9}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover mat-icon{display:block}.kui-menu.simple-search .kui-previous-search-list .mat-list-item mat-icon{display:none}.kui-menu.simple-search .right{margin-top:12px;margin-left:16px}.kui-menu.extended-search{z-index:20}.search-bar-elements{display:flex}.show{display:block}@media screen and (max-width:1024px){.search-panel{width:480px}.search-panel div.input-field input{width:calc(480px - 80px)}.kui-menu.extended-search,.kui-menu.simple-search{width:480px}}@media screen and (max-width:768px){.search-panel{width:calc(480px - 160px)}.search-panel div.input-field input{width:calc(480px - 160px - 80px)}.kui-menu.extended-search,.kui-menu.simple-search{width:calc(480px - 80px)}}`],\n    animations: [\n        trigger('simpleSearchMenu',\n            [\n                state('inactive', style({ display: 'none' })),\n                state('active', style({ display: 'block' })),\n                transition('inactive => true', animate('100ms ease-in')),\n                transition('true => inactive', animate('100ms ease-out'))\n            ]\n        ),\n        trigger('extendedSearchMenu',\n            [\n                state('inactive', style({ display: 'none' })),\n                state('active', style({ display: 'block' })),\n                transition('inactive => true', animate('100ms ease-in')),\n                transition('true => inactive', animate('100ms ease-out'))\n            ]\n        ),\n    ]\n})\n\n/**\n * Contains methods to realise, reset new or previous simple searches.\n */\nexport class SearchComponent implements OnInit {\n\n    @Input() route: string = '/search';\n\n    searchQuery: string;\n\n    searchPanelFocus: boolean = false;\n\n    prevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n\n    focusOnSimple: string = 'inactive';\n    focusOnExtended: string = 'inactive';\n\n    searchLabel: string = 'Search';\n\n    showSimpleSearch: boolean = true;\n\n    constructor(private _route: ActivatedRoute,\n        private _router: Router,\n        private _eleRef: ElementRef) {\n\n    }\n\n    ngOnInit() {\n    }\n\n    /**\n     * @ignore\n     * Do search on Enter click, reset search on Escape\n     * @param search_ele\n     * @param event\n     * @returns void\n     */\n    onKey(search_ele: HTMLElement, event): void {\n        this.focusOnSimple = 'active';\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        if (this.searchQuery && (event.key === 'Enter' || event.keyCode === 13 || event.which === 13)) {\n            this.doSearch(search_ele);\n        }\n        if (event.key === 'Escape' || event.keyCode === 27 || event.which === 27) {\n            this.resetSearch(search_ele);\n        }\n    }\n\n    /**\n     * Realise a simple search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    doSearch(search_ele: HTMLElement): void {\n        if (this.searchQuery !== undefined && this.searchQuery !== null) {\n            this.toggleMenu('simpleSearch');\n            this._router.navigate([this.route + '/fulltext/' + this.searchQuery]);\n\n            // this._router.navigate(['/search/fulltext/' + this.searchQuery], { relativeTo: this._route });\n\n            // push the search query into the local storage prevSearch array (previous search)\n            // to have a list of recent search requests\n            let existingPrevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n            if (existingPrevSearch === null) { existingPrevSearch = []; }\n            let i: number = 0;\n            for (const entry of existingPrevSearch) {\n                // remove entry, if exists already\n                if (this.searchQuery === entry) { existingPrevSearch.splice(i, 1); }\n                i++;\n            }\n\n            existingPrevSearch.push(this.searchQuery);\n            localStorage.setItem('prevSearch', JSON.stringify(existingPrevSearch));\n            // TODO: save the previous search queries somewhere in the user's profile\n\n        } else {\n            search_ele.focus();\n            this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        }\n    }\n\n    /**\n     * Reset the search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    resetSearch(search_ele: HTMLElement): void {\n        this.searchQuery = null;\n        search_ele.focus();\n        this.focusOnSimple = 'inactive';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * Realise a previous search\n     * @param {string} query\n     * @returns void\n     */\n    doPrevSearch(query: string): void {\n        this.searchQuery = query;\n        this._router.navigate([this.route + '/fulltext/' + query], { relativeTo: this._route });\n        this.toggleMenu('simpleSearch');\n    }\n\n    /**\n     * Reset previous searches - the whole previous search or specific item by name\n     * @param {string} name term of the search\n     * @returns void\n     */\n    resetPrevSearch(name: string = null): void {\n        if (name) {\n            // delete only this item with the name ...\n            const i: number = this.prevSearch.indexOf(name);\n            this.prevSearch.splice(i, 1);\n            localStorage.setItem('prevSearch', JSON.stringify(this.prevSearch));\n        } else {\n            // delete the whole \"previous search\" array\n            localStorage.removeItem('prevSearch');\n        }\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n\n    }\n\n    /**\n     * Set simple focus to active\n     *\n     * @returns void\n     */\n    setFocus(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple = 'active';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * Switch according to the focus between simple or extended search\n     *\n     * @param {string} name 2 cases: simpleSearch or extendedSearch\n     * @returns void\n     */\n    toggleMenu(name: string): void {\n        switch (name) {\n            case 'simpleSearch':\n                this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n                this.focusOnSimple = (this.focusOnSimple === 'active' ? 'inactive' : 'active');\n                this.showSimpleSearch = true;\n                break;\n            case 'extendedSearch':\n                this.focusOnExtended = (this.focusOnExtended === 'active' ? 'inactive' : 'active');\n                this.showSimpleSearch = false;\n                break;\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'kui-search-panel',\n  template: `<div class=\"kui-search-panel\">\n\n    <div class=\"kui-search-bar\">\n\n        <div class=\"fulltext-search\">\n            <kui-fulltext-search [route]=\"route\"></kui-fulltext-search>\n        </div>\n\n        <div *ngIf=\"showMenu\" [@extendedSearchMenu]=\"focusOnExtended\" class=\"kui-menu extended-search\">\n            <div class=\"kui-menu-header\">\n                <span class=\"kui-menu-title\">\n                    <h4>Advanced search</h4>\n                </span>\n                <span class=\"kui-menu-action\">\n                    <button mat-icon-button (click)=\"toggleMenu()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </span>\n            </div>\n            <div class=\"extended-search-box\">\n                <kui-extended-search [route]=\"route\" (toggleExtendedSearchForm)=\"toggleMenu()\"></kui-extended-search>\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"advanced-btn\">\n        <button mat-button color=\"primary\" (click)=\"toggleMenu()\">advanced</button>\n    </div>\n\n</div>`,\n  styles: [`.advanced-btn{margin-left:10px}.kui-search-panel{display:flex}.kui-search-bar{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;z-index:10}.kui-search-bar:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu .kui-menu-header{background-color:#f9f9f9;border-top-left-radius:4px;border-top-right-radius:4px;display:inline-block;height:48px;width:100%}.kui-menu .kui-menu-header .kui-menu-title{float:left;font-size:14px;font-weight:400;margin-top:4px;padding:12px}.kui-menu .kui-menu-header .kui-menu-action{float:right;margin:4px}.kui-menu.extended-search{min-height:680px;width:680px;z-index:20}.extended-search-box{margin:12px}@media screen and (max-width:1024px){.kui-search-bar{width:480px}.kui-search-bar div.input-field input{width:calc(480px - 80px)}.fulltext-search,.kui-menu.extended-search{width:480px}}@media screen and (max-width:768px){.kui-search-bar{width:calc(480px - 160px)}.kui-search-bar div.input-field input{width:calc(480px - 160px - 80px)}.fulltext-search,.kui-menu.extended-search{width:calc(480px - 80px)}}`],\n  animations: [\n    trigger('extendedSearchMenu',\n      [\n        state('inactive', style({ display: 'none' })),\n        state('active', style({ display: 'block' })),\n        transition('inactive => active', animate('100ms ease-in')),\n        transition('active => inactive', animate('100ms ease-out'))\n      ]\n    )\n  ]\n})\nexport class SearchPanelComponent {\n\n  @Input() route: string = '/search';\n  showMenu: boolean = false;\n  focusOnExtended: string = 'inactive';\n\n  constructor() { }\n\n  /**\n   * Show or hide the extended search menu\n   *\n   * @returns void\n   */\n  toggleMenu(): void {\n    this.showMenu = !this.showMenu;\n    this.focusOnExtended = (this.focusOnExtended === 'active' ? 'inactive' : 'active');\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'kui-fulltext-search',\n    template: `<div class=\"search-bar-elements\">\n\n    <div class=\"fulltext-search-bar\" [class.active]=\"searchPanelFocus\">\n        <div>\n            <button class=\"prefix\" (click)=\"doSearch(search)\">\n                <mat-icon>search</mat-icon>\n            </button>\n        </div>\n\n        <div class=\"input-field\">\n            <input #search autocomplete=\"off\" type=\"search\" [placeholder]=\"searchLabel\" [(ngModel)]=\"searchQuery\" name=\"search\" (keyup.esc)=\"resetSearch(search)\" (keyup)=\"onKey(search, $event)\" (click)=\"setFocus()\" (focus)=\"toggleMenu()\" />\n        </div>\n\n        <!-- switch button: on some focus we need a close button for the simple -->\n        <div>\n            <button class=\"suffix\" *ngIf=\"focusOnSimple === 'active'\" (click)=\"resetSearch(search)\">\n                <mat-icon>close</mat-icon>\n            </button>\n            <button class=\"suffix\" *ngIf=\"focusOnSimple === 'inactive'\"></button>\n        </div>\n\n        <!-- \"dropdown\" menu for simple search -->\n        <div class=\"kui-menu simple-search\" [@fulltextSearchMenu]=\"focusOnSimple\" *ngIf=\"showSimpleSearch\">\n            <mat-list class=\"kui-previous-search-list\">\n                <mat-list-item *ngFor=\"let item of prevSearch | kuiReverse; let i=index\">\n                    <h4 mat-line *ngIf=\"i<10\" (click)=\"doPrevSearch(item)\">{{item}}</h4>\n                    <button mat-icon-button (click)=\"resetPrevSearch(item)\">\n                        <mat-icon aria-label=\"close\">close</mat-icon>\n                    </button>\n                </mat-list-item>\n            </mat-list>\n            <button mat-stroked-button color=\"accent\" class=\"right\" (click)=\"resetPrevSearch()\" *ngIf=\"prevSearch\">Clear</button>\n        </div>\n\n    </div>\n</div>`,\n    styles: [`input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{display:none}input[type=search]{-moz-appearance:none;-webkit-appearance:none}.full-width{width:100%}.close{right:12px}.hide{display:none}.show{display:block}.search-bar-elements{display:flex}.inactive{color:#7a7a7a}.fulltext-search-bar{background-color:#f9f9f9;border-radius:4px;display:inline-flex;height:40px;position:relative;width:680px;z-index:10}.fulltext-search-bar:hover{box-shadow:0 1px 3px rgba(0,0,0,.5)}.fulltext-search-bar div.input-field{flex:1}.fulltext-search-bar div.input-field input{border-style:none;font-size:14pt;height:38px;position:absolute;width:calc(100% - 80px)}.fulltext-search-bar div.input-field input:active,.fulltext-search-bar div.input-field input:focus{outline:0}.fulltext-search-bar div .prefix,.fulltext-search-bar div .suffix{background-color:#fff;border-radius:3px;border-style:none;color:rgba(41,41,41,.4);cursor:pointer;height:38px;outline:0;position:relative;width:40px}.fulltext-search-bar div .prefix:active,.fulltext-search-bar div .suffix:active{color:#515151}.fulltext-search-bar div.active{box-shadow:0 1px 3px rgba(0,0,0,.5)}.kui-menu{box-shadow:0 3px 5px -1px rgba(11,11,11,.2),0 6px 10px 0 rgba(11,11,11,.14),0 1px 18px 0 rgba(11,11,11,.12);background-color:#f9f9f9;border-radius:4px;position:absolute}.kui-menu.simple-search{min-height:680px;width:680px;padding-top:60px;z-index:-1}.kui-menu.simple-search .kui-previous-search-list .mat-list-item{cursor:pointer}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover{background-color:#f9f9f9}.kui-menu.simple-search .kui-previous-search-list .mat-list-item:hover mat-icon{display:block}.kui-menu.simple-search .kui-previous-search-list .mat-list-item mat-icon{display:none}.kui-menu.simple-search .right{margin-top:12px;margin-left:16px}@media screen and (max-width:1024px){.fulltext-search-bar{width:480px}.fulltext-search-bar div.input-field input{width:calc(480px - 80px)}.kui-menu.simple-search{width:480px}}@media screen and (max-width:768px){.fulltext-search-bar{width:calc(480px - 160px)}.fulltext-search-bar div.input-field input{width:calc(480px - 160px - 80px)}.kui-menu.simple-search{width:calc(480px - 80px)}}`],\n    animations: [\n        trigger('fulltextSearchMenu',\n            [\n                state('inactive', style({ display: 'none' })),\n                state('active', style({ display: 'block' })),\n                transition('inactive => active', animate('100ms ease-in')),\n                transition('active => inactive', animate('100ms ease-out'))\n            ]\n        )\n    ]\n})\nexport class FulltextSearchComponent implements OnInit {\n\n    @Input() route: string = '/search';\n\n    searchQuery: string;\n\n    showSimpleSearch: boolean = true;\n\n    searchPanelFocus: boolean = false;\n\n    prevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n\n    focusOnSimple: string = 'inactive';\n\n    searchLabel: string = 'Search';\n\n\n    constructor(private _route: ActivatedRoute,\n        private _router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n\n    /**\n     * @ignore\n     * Do search on Enter click, reset search on Escape\n     * @param search_ele\n     * @param event\n     * @returns void\n     */\n    onKey(search_ele: HTMLElement, event): void {\n        this.focusOnSimple = 'active';\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        if (this.searchQuery && (event.key === 'Enter' || event.keyCode === 13 || event.which === 13)) {\n            this.doSearch(search_ele);\n        }\n        if (event.key === 'Escape' || event.keyCode === 27 || event.which === 27) {\n            this.resetSearch(search_ele);\n        }\n    }\n\n\n    /**\n     * Realise a simple search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    doSearch(search_ele: HTMLElement): void {\n        if (this.searchQuery !== undefined && this.searchQuery !== null) {\n            this.toggleMenu();\n            this._router.navigate([this.route + '/fulltext/' + this.searchQuery]);\n\n            // this._router.navigate(['/search/fulltext/' + this.searchQuery], { relativeTo: this._route });\n\n            // push the search query into the local storage prevSearch array (previous search)\n            // to have a list of recent search requests\n            let existingPrevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n            if (existingPrevSearch === null) { existingPrevSearch = []; }\n            let i: number = 0;\n            for (const entry of existingPrevSearch) {\n                // remove entry, if exists already\n                if (this.searchQuery === entry) { existingPrevSearch.splice(i, 1); }\n                i++;\n            }\n            existingPrevSearch.push(this.searchQuery);\n            localStorage.setItem('prevSearch', JSON.stringify(existingPrevSearch));\n        } else {\n            search_ele.focus();\n            this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        }\n    }\n\n    /**\n     * Reset the search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    resetSearch(search_ele: HTMLElement): void {\n        this.searchQuery = null;\n        search_ele.focus();\n        this.focusOnSimple = 'inactive';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * Switch according to the focus between simple or extended search\n     *\n     * @param {string} name 2 cases: simpleSearch or extendedSearch\n     * @returns void\n     */\n    toggleMenu(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple = (this.focusOnSimple === 'active' ? 'inactive' : 'active');\n        this.showSimpleSearch = true;\n    }\n\n    /**\n     * Set simple focus to active\n     *\n     * @returns void\n     */\n    setFocus(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple = 'active';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * Realise a previous search\n     * @param {string} query\n     * @returns void\n     */\n    doPrevSearch(query: string): void {\n        this.searchQuery = query;\n        this._router.navigate([this.route + '/fulltext/' + query], { relativeTo: this._route });\n        this.toggleMenu();\n    }\n\n    /**\n     * Reset previous searches - the whole previous search or specific item by name\n     * @param {string} name term of the search\n     * @returns void\n     */\n    resetPrevSearch(name: string = null): void {\n        if (name) {\n            // delete only this item with the name ...\n            const i: number = this.prevSearch.indexOf(name);\n            this.prevSearch.splice(i, 1);\n            localStorage.setItem('prevSearch', JSON.stringify(this.prevSearch));\n        } else {\n            // delete the whole \"previous search\" array\n            localStorage.removeItem('prevSearch');\n        }\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n\n    }\n}\n","import { Component, EventEmitter, Inject, Input, OnInit, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n    GravsearchGenerationService,\n    OntologyCacheService,\n    OntologyInformation,\n    OntologyMetadata,\n    Properties,\n    PropertyWithValue,\n    ReadResourcesSequence,\n    ResourceClass\n} from '@knora/core';\nimport { SelectPropertyComponent } from './select-property/select-property.component';\nimport { SelectResourceClassComponent } from './select-resource-class/select-resource-class.component';\n\n\n@Component({\n    selector: 'kui-extended-search',\n    template: `<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n  <div>\n    <kui-select-ontology *ngIf=\"ontologies.length > 0\" [formGroup]=\"form\" [ontologies]=\"ontologies\" (ontologySelected)=\"getResourceClassesAndPropertiesForOntology($event)\"></kui-select-ontology>\n  </div>\n\n  <div class=\"select-resource-class\" *ngIf=\"resourceClasses?.length > 0\">\n    <kui-select-resource-class #resourceClass [formGroup]=\"form\" [resourceClasses]=\"resourceClasses\" (resourceClassSelectedEvent)=\"getPropertiesForResourceClass($event)\"></kui-select-resource-class>\n  </div>\n\n  <div class=\"select-property\" *ngIf=\"properties !== undefined\">\n    <div *ngFor=\"let prop of activeProperties; let i = index\">\n\n      <kui-select-property #property [activeResourceClass]=\"activeResourceClass\" [formGroup]=\"form\" [index]=\"i\" [properties]=\"properties\"></kui-select-property>\n\n    </div>\n  </div>\n\n\n  <div>\n    <button mat-mini-fab class=\"property-buttons add-property-button\" color=\"primary\" type=\"button\" (click)=\"addProperty()\" [disabled]=\"activeOntology === undefined || activeProperties.length >= 4\">\n      <mat-icon aria-label=\"add a property\">add</mat-icon>\n    </button>\n\n    <button mat-mini-fab class=\"property-buttons remove-property-button\" color=\"primary\" type=\"button\" (click)=\"removeProperty()\" [disabled]=\"activeProperties.length == 0\">\n      <mat-icon aria-label=\"remove property\">remove</mat-icon>\n    </button>\n  </div>\n\n  <!--  <div>\n    <button mat-icon-button type=\"button\" (click)=\"resetForm()\" [disabled]=\"this.activeOntology === undefined\">\n      <mat-icon aria-label=\"reset query form\">clear</mat-icon>\n    </button>\n\n    <button mat-icon-button type=\"submit\" [disabled]=\"!formValid\">\n      <mat-icon aria-label=\"submit query\">send</mat-icon>\n    </button>\n  </div> -->\n\n  <button class=\"extended-buttons extended-search-button\" mat-stroked-button color=\"primary\" type=\"submit\" [disabled]=\"!formValid\">\n    Search\n  </button>\n  <button class=\"extended-buttons reset\" mat-stroked-button type=\"button\" (click)=\"resetForm()\" [disabled]=\"this.activeOntology === undefined\">\n    Reset\n  </button>\n\n\n</form>\n`,\n    styles: [`.add-property-button{margin-right:5px}.extended-buttons{margin-top:25px}.extended-search-button{margin-right:5px}.property-buttons{margin-top:25px}.select-property{margin-left:22px}.select-resource-class{margin-left:12px}`]\n})\nexport class ExtendedSearchComponent implements OnInit {\n\n    /**\n     * @param {string} route - Route after search\n     */\n    @Input() route;\n\n    // trigger toggle for extended search form\n    @Output() toggleExtendedSearchForm = new EventEmitter<boolean>();\n\n    // all available ontologies\n    ontologies: Array<OntologyMetadata> = [];\n\n    // ontology chosen by the user\n    activeOntology: string;\n\n    // properties specified by the user\n    activeProperties: boolean[] = [];\n\n    // resource classes for the selected ontology\n    resourceClasses: Array<ResourceClass> = [];\n\n    // definition of the selected resource class, if set.\n    activeResourceClass: ResourceClass;\n\n    // properties for the selected ontology or selected resource class\n    properties: Properties;\n\n    result: ReadResourcesSequence = new ReadResourcesSequence([], 0);\n\n    // reference to the component that controls the resource class selection\n    @ViewChild('resourceClass') resourceClassComponent: SelectResourceClassComponent;\n\n    // reference to the component controlling the property selection\n    @ViewChildren('property') propertyComponents: QueryList<SelectPropertyComponent>;\n\n    // FormGroup (used as parent for child components)\n    form: FormGroup;\n\n    // form validation status\n    formValid = false;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _cacheService: OntologyCacheService,\n        private _gravSearchService: GravsearchGenerationService) {\n    }\n\n    ngOnInit() {\n\n        // parent form is empty, it gets passed to the child components\n        this.form = this.fb.group({});\n\n        // if form status changes, re-run validation\n        this.form.statusChanges.subscribe((data) => {\n            this.formValid = this.validateForm();\n            // console.log(this.form);\n        });\n\n        // initialize ontologies to be used for the ontologies selection in the search form\n        this.initializeOntologies();\n    }\n\n    /**\n     * Add a property to the search form.\n     * @returns void\n     */\n    addProperty(): void {\n        this.activeProperties.push(true);\n    }\n\n    /**\n     * Remove the last property from the search form.\n     * @returns void\n     */\n    removeProperty(): void {\n        this.activeProperties.splice(-1, 1);\n    }\n\n    /**\n     * Gets all available ontologies for the search form.\n     * @returns void\n     */\n    initializeOntologies(): void {\n        this._cacheService.getOntologiesMetadata().subscribe(\n            (ontologies: Array<OntologyMetadata>) => {\n                this.ontologies = ontologies;\n            });\n    }\n\n    /**\n     * Once an ontology has been selected, gets its classes and properties.\n     * The classes and properties will be made available to the user for selection.\n     *\n     * @param ontologyIri Iri of the ontology chosen by the user.\n     * @returns void\n     */\n    getResourceClassesAndPropertiesForOntology(ontologyIri: string): void {\n\n        // reset active resource class definition\n        this.activeResourceClass = undefined;\n\n        // reset specified properties\n        this.activeProperties = [];\n\n        this.activeOntology = ontologyIri;\n\n        this._cacheService.getEntityDefinitionsForOntologies([ontologyIri]).subscribe(\n            (ontoInfo: OntologyInformation) => {\n\n                this.resourceClasses = ontoInfo.getResourceClassesAsArray();\n                this.properties = ontoInfo.getProperties();\n\n            }\n        );\n\n    }\n\n    /**\n     * Once a resource class has been selected, gets its properties.\n     * The properties will be made available to the user for selection.\n     *\n     * @param resourceClassIri\n     * @returns void\n     */\n    getPropertiesForResourceClass(resourceClassIri: string): void {\n\n        // reset specified properties\n        this.activeProperties = [];\n\n        // if the client undoes the selection of a resource class, use the active ontology as a fallback\n        if (resourceClassIri === null) {\n            this.getResourceClassesAndPropertiesForOntology(this.activeOntology);\n        } else {\n\n            this._cacheService.getResourceClassDefinitions([resourceClassIri]).subscribe(\n                (ontoInfo: OntologyInformation) => {\n                    this.properties = ontoInfo.getProperties();\n\n                    this.activeResourceClass = ontoInfo.getResourceClasses()[resourceClassIri];\n\n                }\n            );\n\n        }\n\n    }\n\n    /**\n     * Validates form and returns its status (boolean).\n     */\n    private validateForm() {\n\n        // check that either a resource class is selected or at least one property is specified\n        return this.form.valid &&\n            (this.propertyComponents.length > 0 || (this.resourceClassComponent !== undefined && this.resourceClassComponent.getResourceClassSelected() !== false));\n\n    }\n\n    /**\n     * Resets the form (selected resource class and specified properties) preserving the active ontology.\n     */\n    resetForm() {\n        if (this.activeOntology !== undefined) {\n            this.getResourceClassesAndPropertiesForOntology(this.activeOntology);\n        }\n    }\n\n\n    /**\n     * Creates a GravSearch query with the given form values and calls the extended search route.\n     */\n    submit() {\n\n        if (!this.formValid) return; // check that from is valid\n\n        const resClassOption = this.resourceClassComponent.getResourceClassSelected();\n\n        let resClass;\n\n        if (resClassOption !== false) {\n            resClass = resClassOption;\n        }\n\n        const properties: PropertyWithValue[] = this.propertyComponents.map(\n            (propComp) => {\n                return propComp.getPropertySelectedWithValue();\n            }\n        );\n\n        const gravsearch = this._gravSearchService.createGravsearchQuery(properties, resClass, 0);\n\n        this._router.navigate([this.route + '/extended/', gravsearch], { relativeTo: this._route });\n\n        // toggle extended search form\n        this.toggleExtendedSearchForm.emit(true);\n\n    }\n\n}\n","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\nimport { OntologyMetadata } from '@knora/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'kui-select-ontology',\n  template: `<mat-form-field *ngIf=\"ontologies.length > 0\">\n  <mat-select placeholder=\"Ontology\" [formControl]=\"form.controls['ontology']\">\n      <mat-option *ngFor=\"let onto of ontologies\" [value]=\"onto.id\">{{ onto.label }}</mat-option>\n  </mat-select>\n</mat-form-field>\n`,\n  styles: [``]\n})\nexport class SelectOntologyComponent implements OnInit {\n\n  @Input() formGroup: FormGroup;\n\n  @Input() ontologies: Array<OntologyMetadata>;\n\n  @Output() ontologySelected = new EventEmitter<string>();\n\n  form: FormGroup;\n\n  constructor(@Inject(FormBuilder) private fb: FormBuilder) { }\n\n  ngOnInit() {\n\n    // build a form for the named graph selection\n    this.form = this.fb.group({\n      ontology: [null, Validators.required]\n    });\n\n    // emit Iri of the ontology when being selected\n    this.form.valueChanges.subscribe((data) => {\n      this.ontologySelected.emit(data.ontology);\n    });\n\n    // add form to the parent form group\n    this.formGroup.addControl('ontology', this.form);\n\n  }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n    Cardinality,\n    CardinalityOccurrence,\n    ComparisonOperatorAndValue,\n    Properties,\n    Property,\n    PropertyWithValue,\n    ResourceClass\n} from '@knora/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SpecifyPropertyValueComponent } from './specify-property-value/specify-property-value.component';\n\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-select-property',\n    template: `<mat-form-field class=\"search-property-field\" *ngIf=\"propertiesAsArray?.length > 0\">\n  <mat-select placeholder=\"Properties\" [formControl]=\"form.controls['property']\">\n    <mat-option *ngFor=\"let prop of propertiesAsArray\" [value]=\"prop.id\">{{ prop.label }}</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<kui-specify-property-value #specifyPropertyValue [formGroup]=\"form\" *ngIf=\"propertySelected !== undefined\" [property]=\"propertySelected\"></kui-specify-property-value>\n\n<mat-checkbox matTooltip=\"Sort criterion\" *ngIf=\"propertySelected !== undefined && sortCriterion()\" [formControl]=\"form.controls['isSortCriterion']\"></mat-checkbox>`,\n    styles: [`.search-property-field{margin-right:8px}`]\n})\nexport class SelectPropertyComponent implements OnInit, OnDestroy {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    // index of the given property (unique)\n    @Input() index: number;\n\n    // setter method for properties when being updated by parent component\n    @Input()\n    set properties(value: Properties) {\n        this.propertySelected = undefined; // reset selected property (overwriting any previous selection)\n        this._properties = value;\n        this.updatePropertiesArray();\n    }\n\n    get properties() {\n       return this._properties;\n    }\n\n    _activeResourceClass: ResourceClass;\n\n    // setter method for selected resource class\n    @Input()\n    set activeResourceClass(value: ResourceClass) {\n        this._activeResourceClass = value;\n    }\n\n    // reference to child component: combination of comparison operator and value for chosen property\n    @ViewChild('specifyPropertyValue') specifyPropertyValue: SpecifyPropertyValueComponent;\n\n    // properties that can be selected from\n    private _properties: Properties;\n\n    // properties as an Array structure (based on this.properties)\n    propertiesAsArray: Array<Property>;\n\n    // represents the currently selected property\n    propertySelected: Property;\n\n    form: FormGroup;\n\n    // unique name for this property to be used in the parent FormGroup\n    propIndex: string;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        // build a form for the property selection\n        this.form = this.fb.group({\n            property: [null, Validators.required],\n            isSortCriterion: [false, Validators.required]\n        });\n\n        // update the selected property\n        this.form.valueChanges.subscribe((data) => {\n            const propIri = data.property;\n            this.propertySelected = this._properties[propIri];\n        });\n\n        resolvedPromise.then(() => {\n            this.propIndex = 'property' + this.index;\n\n            // add form to the parent form group\n            this.formGroup.addControl(this.propIndex, this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl(this.propIndex);\n        });\n    }\n\n    /**\n     * Indicates if property can be used as a sort criterion.\n     * Property has to have cardinality or max cardinality 1 for the chosen resource class.\n     *\n     * We cannot sort by properties whose cardinality is greater than 1.\n     * Return boolean\n     */\n    sortCriterion() {\n\n        // check if a resource class is selected and if the property's cardinality is 1 for the selected resource class\n        if (this._activeResourceClass !== undefined && this.propertySelected !== undefined && !this.propertySelected.isLinkProperty) {\n\n            const cardinalities: Cardinality[] = this._activeResourceClass.cardinalities.filter(\n                (card: Cardinality) => {\n                    // cardinality 1 or max occurrence 1\n                    return card.property === this.propertySelected.id\n                        && card.value === 1\n                        && (card.occurrence === CardinalityOccurrence.card || card.occurrence === CardinalityOccurrence.maxCard)\n\n                }\n            );\n\n            return cardinalities.length === 1;\n        } else {\n            return false;\n        }\n\n    }\n\n    /**\n     * Updates the properties array that is accessed by the template.\n     */\n    private updatePropertiesArray() {\n\n        // represent the properties as an array to be accessed by the template\n        const propsArray = [];\n\n        for (const propIri in this._properties) {\n            if (this._properties.hasOwnProperty(propIri)) {\n                const prop = this._properties[propIri];\n\n                // only list editable props that are not link value props\n                if (prop.isEditable && !prop.isLinkValueProperty) {\n                    propsArray.push(this._properties[propIri]);\n                }\n            }\n        }\n\n        this.propertiesAsArray = propsArray;\n    }\n\n    /**\n     * Returns the selected property with the specified value.\n     */\n    getPropertySelectedWithValue(): PropertyWithValue {\n\n        const propVal: ComparisonOperatorAndValue = this.specifyPropertyValue.getComparisonOperatorAndValueLiteralForProperty();\n\n        let isSortCriterion = false;\n\n        // only non linking properties can be used for sorting\n        if (!this.propertySelected.isLinkProperty) {\n            isSortCriterion = this.form.value.isSortCriterion;\n        }\n\n        return new PropertyWithValue(this.propertySelected, propVal, isSortCriterion);\n\n    }\n\n\n}\n","import { Component, Inject, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n    ComparisonOperator,\n    ComparisonOperatorAndValue,\n    Equals,\n    Exists,\n    GreaterThan,\n    GreaterThanEquals,\n    KnoraConstants,\n    LessThan,\n    LessThanEquals,\n    Like,\n    Match,\n    NotEquals,\n    Property,\n    PropertyValue,\n    Value\n} from '@knora/core';\n\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-specify-property-value',\n    template: `<mat-form-field class=\"search-operator-field\" *ngIf=\"comparisonOperators?.length > 0\">\n    <mat-select placeholder=\"Comparison Operator\" [formControl]=\"form.controls['comparisonOperator']\">\n        <mat-option *ngFor=\"let compOp of comparisonOperators\" [value]=\"compOp\">{{ compOp.label }}</mat-option>\n    </mat-select>\n</mat-form-field>\n\n<!-- select apt component for value specification using a switch case statement-->\n<span\n    *ngIf=\"comparisonOperatorSelected !== undefined && comparisonOperatorSelected !== null && comparisonOperatorSelected.getClassName() != 'Exists'\"\n    [ngSwitch]=\"propertyValueType\">\n  <boolean-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.BooleanValue\"></boolean-value>\n  <date-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.DateValue\"></date-value>\n  <decimal-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.DecimalValue\"></decimal-value>\n  <integer-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.IntValue\"></integer-value>\n  <link-value #propertyValue [formGroup]=\"form\" [restrictResourceClass]=\"property.objectType\"\n              *ngSwitchCase=\"KnoraConstants.Resource\"></link-value>\n  <text-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.TextValue\"></text-value>\n  <uri-value #propertyValue [formGroup]=\"form\" *ngSwitchCase=\"KnoraConstants.UriValue\"></uri-value>\n\n    <!-- TODO: Resource: handle linking properties with target class restriction: access property member to get objectClass via property() getter method -->\n  <span *ngSwitchDefault=\"\">Not supported {{propertyValueType}}</span>\n</span>\n`,\n    styles: [`.search-operator-field{margin-right:8px}`]\n})\nexport class SpecifyPropertyValueComponent implements OnInit, OnChanges {\n\n    KnoraConstants = KnoraConstants;\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    @ViewChild('propertyValue') propertyValueComponent: PropertyValue;\n\n    // setter method for the property chosen by the user\n    @Input()\n    set property(prop: Property) {\n        this.comparisonOperatorSelected = undefined; // reset to initial state\n        this._property = prop;\n        this.resetComparisonOperators(); // reset comparison operators for given property (overwriting any previous selection)\n    }\n\n    // getter method for this._property\n    get property(): Property {\n        return this._property;\n    }\n\n    private _property: Property;\n\n    form: FormGroup;\n\n    // available comparison operators for the property\n    comparisonOperators: Array<ComparisonOperator> = [];\n\n    // comparison operator selected by the user\n    comparisonOperatorSelected: ComparisonOperator;\n\n    // the type of the property\n    propertyValueType;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    /**\n     * Resets the comparison operators for this._property.\n     */\n    resetComparisonOperators() {\n\n        // depending on object class, set comparison operators and value entry field\n        if (this._property.isLinkProperty) {\n            this.propertyValueType = KnoraConstants.Resource;\n        } else {\n            this.propertyValueType = this._property.objectType;\n        }\n\n        switch (this.propertyValueType) {\n\n            case KnoraConstants.TextValue:\n                this.comparisonOperators = [new Like(), new Match(), new Equals(), new NotEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.BooleanValue:\n            case KnoraConstants.Resource:\n            case KnoraConstants.UriValue:\n            case KnoraConstants.IntervalValue:\n                this.comparisonOperators = [new Equals(), new NotEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.IntValue:\n            case KnoraConstants.DecimalValue:\n            case KnoraConstants.DateValue:\n                this.comparisonOperators = [new Equals(), new NotEquals(), new LessThan(), new LessThanEquals(), new GreaterThan(), new GreaterThanEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.ListValue:\n            case KnoraConstants.GeomValue:\n            case KnoraConstants.FileValue:\n            case KnoraConstants.AudioFileValue:\n            case KnoraConstants.StillImageFileValue:\n            case KnoraConstants.DDDFileValue:\n            case KnoraConstants.MovingImageFileValue:\n            case KnoraConstants.TextFileValue:\n            case KnoraConstants.ColorValue:\n                this.comparisonOperators = [new Exists()];\n                break;\n\n            default:\n                console.log('ERROR: Unsupported value type ' + this._property.objectType);\n\n        }\n\n    }\n\n    ngOnInit() { }\n\n    ngOnChanges() {\n\n        // build a form for comparison operator selection\n        this.form = this.fb.group({\n            comparisonOperator: [null, Validators.required]\n        });\n\n        // store comparison operator when selected\n        this.form.valueChanges.subscribe((data) => {\n            this.comparisonOperatorSelected = data.comparisonOperator;\n        });\n\n        resolvedPromise.then(() => {\n\n            // remove from the parent form group (clean reset)\n            this.formGroup.removeControl('comparisonOperator');\n\n            // add form to the parent form group\n            this.formGroup.addControl('comparisonOperator', this.form);\n        });\n\n    }\n\n    /**\n     * Gets the specified comparison operator and value for the property.\n     *\n     * returns {ComparisonOperatorAndValue} the comparison operator and the specified value\n     */\n    getComparisonOperatorAndValueLiteralForProperty(): ComparisonOperatorAndValue {\n        // return value (literal or IRI) from the child component\n        let value: Value;\n\n        // comparison operator 'Exists' does not require a value\n        if (this.comparisonOperatorSelected.getClassName() !== 'Exists') {\n            value = this.propertyValueComponent.getValue();\n        }\n\n        // return the comparison operator and the specified value\n        return new ComparisonOperatorAndValue(this.comparisonOperatorSelected, value);\n\n    }\n\n}\n\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n\n@Component({\n    selector: 'boolean-value',\n    template: `<mat-checkbox [formControl]=\"form.controls['booleanValue']\"></mat-checkbox>\n`,\n    styles: [``]\n})\nexport class BooleanValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.BooleanValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            booleanValue: [false, Validators.compose([Validators.required])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n        return new ValueLiteral(String(this.form.value.booleanValue), KnoraConstants.xsdBoolean);\n    }\n}\n","import { Component, Directive, Host, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\nimport { GregorianCalendarDate, JDNConvertibleCalendar, JDNPeriod } from 'jdnconvertiblecalendar';\nimport { DateAdapter, MAT_DATE_LOCALE, MatCalendar } from '@angular/material';\nimport { JDNConvertibleCalendarDateAdapter } from 'jdnconvertiblecalendardateadapter';\n\n/** Custom header component containing a calendar format switcher */\n@Component({\n    selector: 'kui-calendar-header',\n    template: `\n      <mat-select placeholder=\"Calendar Format\" [formControl]=\"form.controls['calendar']\">\n        <mat-option *ngFor=\"let cal of supportedCalendarFormats\" [value]=\"cal\">{{cal}}</mat-option>\n      </mat-select>\n      <mat-calendar-header></mat-calendar-header>\n    `,\n    styles: []\n})\nexport class HeaderComponent<D> implements OnInit {\n    constructor(@Host() private _calendar: MatCalendar<JDNConvertibleCalendar>,\n        private _dateAdapter: DateAdapter<JDNConvertibleCalendar>,\n        @Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    form: FormGroup;\n\n    // a list of supported calendar formats (Gregorian and Julian)\n    supportedCalendarFormats = JDNConvertibleCalendar.supportedCalendars;\n\n    // the currently active calendar format\n    activeFormat;\n\n    ngOnInit() {\n\n        // get the currently active calendar format from the date adapter\n        if (this._dateAdapter instanceof JDNConvertibleCalendarDateAdapter) {\n            this.activeFormat = this._dateAdapter.activeCalendarFormat;\n        } else {\n            console.log('date adapter is expected to be an instance of JDNConvertibleCalendarDateAdapter');\n        }\n\n        // build a form for the calendar format selection\n        this.form = this.fb.group({\n            calendar: [this.activeFormat, Validators.required]\n        });\n\n        // do the conversion when the user selects another calendar format\n        this.form.valueChanges.subscribe((data) => {\n            // pass the target calendar format to the conversion method\n            this.convertDate(data.calendar);\n        });\n\n    }\n\n    /**\n     * Converts the date into the target format.\n     *\n     * @param calendar the target calendar format.\n     */\n    convertDate(calendar: 'Gregorian' | 'Julian') {\n\n        if (this._dateAdapter instanceof JDNConvertibleCalendarDateAdapter) {\n\n            // convert the date into the target calendar format\n            const convertedDate = this._dateAdapter.convertCalendarFormat(this._calendar.activeDate, calendar);\n\n            // set the new date\n            this._calendar.activeDate = convertedDate;\n\n            // select the new date in the datepicker UI\n            this._calendar._dateSelected(convertedDate);\n\n            // update view after calendar format conversion\n            const view = this._calendar.currentView === 'month' ? this._calendar.monthView :\n                (this._calendar.currentView === 'year' ? this._calendar.yearView : this._calendar.multiYearView);\n\n            view.ngAfterContentInit();\n        } else {\n            console.log('date adapter is expected to be an instance of JDNConvertibleCalendarDateAdapter');\n        }\n    }\n}\n","import { Component, Host, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\nimport { GregorianCalendarDate, JDNConvertibleCalendar, JDNPeriod } from 'jdnconvertiblecalendar';\nimport { HeaderComponent } from './header-calendar/header-calendar.component';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'date-value',\n    template: `<mat-form-field>\n    <kuiJdnDatepicker>\n        <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" [formControl]=\"form.controls['dateValue']\">\n        <mat-datepicker #picker [calendarHeaderComponent]=\"headerComponent\"></mat-datepicker>\n    </kuiJdnDatepicker>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n</mat-form-field>`,\n    styles: [``]\n})\nexport class DateValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.DateValue;\n\n    form: FormGroup;\n\n    // custom header for the datepicker\n    headerComponent = HeaderComponent;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    ngOnInit() {\n\n        // init datepicker\n        this.form = this.fb.group({\n            dateValue: [null, Validators.compose([Validators.required])]\n        });\n\n        this.form.valueChanges.subscribe((data) => {\n            // console.log(data.dateValue);\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        const dateObj: JDNConvertibleCalendar = this.form.value.dateValue;\n\n        // get calendar format\n        const calendarFormat = dateObj.calendarName;\n        // get calendar period\n        const calendarPeriod = dateObj.toCalendarPeriod();\n        // get the date\n        const dateString = `${calendarFormat.toUpperCase()}:${calendarPeriod.periodStart.year}-${calendarPeriod.periodStart.month}-${calendarPeriod.periodStart.day}:${calendarPeriod.periodEnd.year}-${calendarPeriod.periodEnd.month}-${calendarPeriod.periodEnd.day}`;\n\n        return new ValueLiteral(String(dateString), KnoraConstants.DateValue);\n    }\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'decimal-value',\n    template: `<mat-form-field>\n    <input matInput [formControl]=\"form.controls['decimalValue']\" placeholder=\"Decimal value\" value=\"\" type=\"number\">\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class DecimalValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.DecimalValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            decimalValue: [null, Validators.compose([Validators.required])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.decimalValue), KnoraConstants.xsdDecimal);\n    }\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'integer-value',\n    template: `<mat-form-field>\n    <input matInput [formControl]=\"form.controls['integerValue']\" placeholder=\"Integer value\" value=\"\" type=\"number\">\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class IntegerValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.IntValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            integerValue: [null, Validators.compose([Validators.required, Validators.pattern(/^-?\\d+$/)])] // only allow for integer values (no fractions)\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.integerValue), KnoraConstants.xsdInteger);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    ApiServiceResult,\n    ConvertJSONLD,\n    IRI,\n    KnoraConstants,\n    OntologyCacheService,\n    PropertyValue,\n    ReadResource,\n    ReadResourcesSequence,\n    SearchService,\n    Value\n} from '@knora/core';\n\ndeclare let require: any; // http://stackoverflow.com/questions/34730010/angular2-5-minute-install-bug-require-is-not-defined\nconst jsonld = require('jsonld');\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'link-value',\n    template: `<mat-form-field>\n    <input matInput placeholder=\"resource\" aria-label=\"resource\" [matAutocomplete]=\"auto\" [formControl]=\"form.controls['resource']\">\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayResource\">\n        <mat-option *ngFor=\"let res of resources\" [value]=\"res\">\n            {{res?.label}}\n        </mat-option>\n    </mat-autocomplete>\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class LinkValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.LinkValue;\n\n    form: FormGroup;\n\n    resources: ReadResource[];\n\n    private _restrictToResourceClass: string;\n\n    @Input()\n    set restrictResourceClass(value: string) {\n        this._restrictToResourceClass = value;\n    }\n\n    get restrictResourceClass() {\n        return this._restrictToResourceClass;\n    }\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder, private _searchService: SearchService, private _cacheService: OntologyCacheService) {\n\n    }\n\n    /**\n     * Displays a selected resource using its label.\n     *\n     * @param resource the resource to be displayed (or no selection yet).\n     * @returns\n     */\n    displayResource(resource: ReadResource | null) {\n\n        // null is the initial value (no selection yet)\n        if (resource !== null) {\n            return resource.label;\n        }\n    }\n\n    /**\n     * Search for resources whose labels contain the given search term, restricting to to the given properties object constraint.\n     *\n     * @param searchTerm\n     */\n    searchByLabel(searchTerm: string) {\n\n        // at least 3 characters are required\n        if (searchTerm.length >= 3) {\n\n            this._searchService.searchByLabel(searchTerm, this._restrictToResourceClass).subscribe(\n                (result: ApiServiceResult) => {\n                    const promises = jsonld.promises;\n                    // compact JSON-LD using an empty context: expands all Iris\n                    const promise = promises.compact(result.body, {});\n\n                    promise.then((compacted) => {\n\n                        const resourceSeq: ReadResourcesSequence = ConvertJSONLD.createReadResourcesSequenceFromJsonLD(compacted);\n\n                        this.resources = resourceSeq.resources;\n\n                    }, function (err) {\n\n                        console.log('JSONLD of full resource request could not be expanded:' + err);\n                    });\n\n                }\n            );\n        } else {\n            // clear selection\n            this.resources = undefined;\n        }\n\n    }\n\n    /**\n     * Checks that the selection is a [[ReadResource]].\n     *\n     * Surprisingly, [null] has to be returned if the value is valid: https://angular.io/guide/form-validation#custom-validators\n     *\n     * @param the form element whose value has to be checked.\n     * @returns\n     */\n    validateResource(c: FormControl) {\n\n        const isValidResource = (c.value instanceof ReadResource);\n\n        if (isValidResource) {\n            return null;\n        } else {\n            return {\n                noResource: {\n                    value: c.value\n                }\n            };\n        }\n\n    }\n\n    ngOnInit() {\n        this.form = this.fb.group({\n            resource: [null, Validators.compose([\n                Validators.required,\n                this.validateResource\n            ])]\n        });\n\n        this.form.valueChanges.subscribe((data) => {\n            this.searchByLabel(data.resource);\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new IRI(this.form.value.resource.id);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'text-value',\n    template: `<mat-form-field>\n    <input matInput [formControl]=\"form.controls['textValue']\" placeholder=\"text value\" value=\"\">\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class TextValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.TextValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            textValue: [null, Validators.required]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.textValue), KnoraConstants.xsdString);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Utils, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'uri-value',\n    template: `<mat-form-field>\n    <input matInput [formControl]=\"form.controls['uriValue']\" placeholder=\"URI\" value=\"\">\n</mat-form-field>\n`,\n    styles: [``]\n})\nexport class UriValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.UriValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            uriValue: [null, Validators.compose([Validators.required, Validators.pattern(Utils.RegexUrl)])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.uriValue), KnoraConstants.xsdUri);\n    }\n\n}\n","import { Component, EventEmitter, Inject, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ResourceClass } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-select-resource-class',\n    template: `<mat-form-field *ngIf=\"resourceClasses.length > 0\">\n  <mat-select placeholder=\"Resource Class\" [formControl]=\"form.controls['resourceClass']\">\n    <mat-option [value]=\"null\">no selection</mat-option>\n    <!-- undo selection of a resource class -->\n    <mat-option *ngFor=\"let resourceClass of resourceClasses\" [value]=\"resourceClass.id\">{{ resourceClass.label }}</mat-option>\n  </mat-select>\n</mat-form-field>`,\n    styles: [``]\n})\nexport class SelectResourceClassComponent implements OnInit, OnChanges {\n\n    @Input() formGroup: FormGroup;\n\n    // setter method for resource classes when being updated by parent component\n    @Input()\n    set resourceClasses(value: Array<ResourceClass>) {\n        this.resourceClassSelected = undefined; // reset on updates\n        this._resourceClasses = value;\n    }\n\n    // getter method for resource classes (used in template)\n    get resourceClasses() {\n        return this._resourceClasses;\n    }\n\n    // event emitted to parent component once a resource class is selected by the user\n    @Output() resourceClassSelectedEvent = new EventEmitter<string>();\n\n    // available resource classes for selection\n    private _resourceClasses: Array<ResourceClass>;\n\n    // stores the currently selected resource class\n    private resourceClassSelected: string;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    /**\n     * Returns the Iri of the selected resource class.\n     *\n     * @returns the Iri of the selected resource class or false in case no resource class is selected.\n     */\n    getResourceClassSelected(): any {\n        if (this.resourceClassSelected !== undefined && this.resourceClassSelected !== null) {\n            return this.resourceClassSelected;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Initalizes the FormGroup for the resource class selection.\n     * The initial value is set to null.\n     */\n    private initForm() {\n        // build a form for the resource class selection\n        this.form = this.fb.group({\n            resourceClass: [null] // resource class selection is optional\n        });\n\n        // store and emit Iri of the resource class when selected\n        this.form.valueChanges.subscribe((data) => {\n            this.resourceClassSelected = data.resourceClass;\n            this.resourceClassSelectedEvent.emit(this.resourceClassSelected);\n        });\n    }\n\n    ngOnInit() {\n\n        this.initForm();\n\n        // add form to the parent form group\n        this.formGroup.addControl('resourceClass', this.form);\n\n    }\n\n    ngOnChanges() {\n\n        if (this.form !== undefined) {\n\n            // resource classes have been reinitialized\n            // reset form\n            resolvedPromise.then(() => {\n\n                // remove this form from the parent form group\n                this.formGroup.removeControl('resourceClass');\n\n                this.initForm();\n\n                // add form to the parent form group\n                this.formGroup.addControl('resourceClass', this.form);\n\n            });\n\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatIconModule, MatInputModule,\n    MatListModule,\n    MatSelectModule,\n    MatTooltipModule\n} from '@angular/material';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { KuiCoreModule } from '@knora/core';\nimport { KuiActionModule } from '@knora/action';\nimport { KuiViewerModule } from '@knora/viewer';\n\nimport { MatJDNConvertibleCalendarDateAdapterModule } from 'jdnconvertiblecalendardateadapter';\n\nimport { SearchComponent } from './search.component';\nimport { FulltextSearchComponent } from './fulltext-search/fulltext-search.component';\nimport { SearchPanelComponent } from './search-panel/search-panel.component';\nimport { ExtendedSearchComponent } from './extended-search/extended-search.component';\n\nimport { SelectOntologyComponent } from './extended-search/select-ontology/select-ontology.component';\nimport { SelectResourceClassComponent } from './extended-search/select-resource-class/select-resource-class.component';\nimport { SelectPropertyComponent } from './extended-search/select-property/select-property.component';\nimport { SpecifyPropertyValueComponent } from './extended-search/select-property/specify-property-value/specify-property-value.component';\nimport { BooleanValueComponent } from './extended-search/select-property/specify-property-value/boolean-value/boolean-value.component';\nimport { DateValueComponent } from './extended-search/select-property/specify-property-value/date-value/date-value.component';\nimport { DecimalValueComponent } from './extended-search/select-property/specify-property-value/decimal-value/decimal-value.component';\nimport { IntegerValueComponent } from './extended-search/select-property/specify-property-value/integer-value/integer-value.component';\nimport { LinkValueComponent } from './extended-search/select-property/specify-property-value/link-value/link-value.component';\nimport { TextValueComponent } from './extended-search/select-property/specify-property-value/text-value/text-value.component';\nimport { UriValueComponent } from './extended-search/select-property/specify-property-value/uri-value/uri-value.component';\nimport { HeaderComponent } from './extended-search/select-property/specify-property-value/date-value/header-calendar/header-calendar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        MatListModule,\n        MatSelectModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        KuiCoreModule,\n        KuiActionModule,\n        KuiViewerModule,\n        MatJDNConvertibleCalendarDateAdapterModule\n    ],\n    declarations: [\n        SearchComponent,\n        SelectOntologyComponent,\n        ExtendedSearchComponent,\n        SelectResourceClassComponent,\n        SelectPropertyComponent,\n        SpecifyPropertyValueComponent,\n        BooleanValueComponent,\n        DateValueComponent,\n        DecimalValueComponent,\n        IntegerValueComponent,\n        LinkValueComponent,\n        TextValueComponent,\n        UriValueComponent,\n        HeaderComponent,\n        FulltextSearchComponent,\n        SearchPanelComponent\n    ],\n    exports: [\n        SearchComponent,\n        SearchPanelComponent,\n        FulltextSearchComponent,\n        ExtendedSearchComponent,\n        DateValueComponent\n    ],\n    entryComponents: [\n        HeaderComponent\n    ]\n})\nexport class KuiSearchModule {\n}\n","/*\n * Public API Surface of search\n */\n\nexport * from './lib/search.component';\nexport * from './lib/search-panel/search-panel.component';\nexport * from './lib/fulltext-search/fulltext-search.component';\n\nexport * from './lib/extended-search/extended-search.component';\nexport * from './lib/extended-search/select-ontology/select-ontology.component';\nexport * from './lib/extended-search/select-property/select-property.component';\nexport * from './lib/extended-search/select-property/specify-property-value/specify-property-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/boolean-value/boolean-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/date-value/date-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/date-value/header-calendar/header-calendar.component';\nexport * from './lib/extended-search/select-property/specify-property-value/decimal-value/decimal-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/integer-value/integer-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/link-value/link-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/text-value/text-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/uri-value/uri-value.component';\nexport * from './lib/extended-search/select-resource-class/select-resource-class.component';\n\nexport * from './lib/search.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tslib_1.__values","Component","trigger","state","style","transition","animate","ActivatedRoute","Router","ElementRef","Input","EventEmitter","ReadResourcesSequence","FormBuilder","Inject","OntologyCacheService","GravsearchGenerationService","Output","ViewChild","ViewChildren","Validators","CardinalityOccurrence","PropertyWithValue","resolvedPromise","KnoraConstants","Like","Match","Equals","NotEquals","Exists","LessThan","LessThanEquals","GreaterThan","GreaterThanEquals","ComparisonOperatorAndValue","ValueLiteral","JDNConvertibleCalendar","JDNConvertibleCalendarDateAdapter","MatCalendar","Host","DateAdapter","ConvertJSONLD","ReadResource","IRI","SearchService","Utils","NgModule","CommonModule","BrowserAnimationsModule","MatAutocompleteModule","MatButtonModule","MatCheckboxModule","MatDatepickerModule","MatFormFieldModule","MatInputModule","MatIconModule","MatListModule","MatSelectModule","MatTooltipModule","FormsModule","ReactiveFormsModule","KuiCoreModule","KuiActionModule","KuiViewerModule","MatJDNConvertibleCalendarDateAdapterModule"],"mappings":"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"}
